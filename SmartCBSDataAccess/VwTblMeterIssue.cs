using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SmartCBSDataAccess{
    /// <summary>
    /// Strongly-typed collection for the VwTblMeterIssue class.
    /// </summary>
    [Serializable]
    public partial class VwTblMeterIssueCollection : ReadOnlyList<VwTblMeterIssue, VwTblMeterIssueCollection>
    {        
        public VwTblMeterIssueCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the VwTblMeterIssue view.
    /// </summary>
    [Serializable]
    public partial class VwTblMeterIssue : ReadOnlyRecord<VwTblMeterIssue>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("VwTblMeterIssue", TableType.View, DataService.GetInstance("PrimaryProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarIssueID = new TableSchema.TableColumn(schema);
                colvarIssueID.ColumnName = "IssueID";
                colvarIssueID.DataType = DbType.Int32;
                colvarIssueID.MaxLength = 0;
                colvarIssueID.AutoIncrement = false;
                colvarIssueID.IsNullable = false;
                colvarIssueID.IsPrimaryKey = false;
                colvarIssueID.IsForeignKey = false;
                colvarIssueID.IsReadOnly = false;
                
                schema.Columns.Add(colvarIssueID);
                
                TableSchema.TableColumn colvarIssueDate = new TableSchema.TableColumn(schema);
                colvarIssueDate.ColumnName = "IssueDate";
                colvarIssueDate.DataType = DbType.DateTime;
                colvarIssueDate.MaxLength = 0;
                colvarIssueDate.AutoIncrement = false;
                colvarIssueDate.IsNullable = true;
                colvarIssueDate.IsPrimaryKey = false;
                colvarIssueDate.IsForeignKey = false;
                colvarIssueDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarIssueDate);
                
                TableSchema.TableColumn colvarMeterID = new TableSchema.TableColumn(schema);
                colvarMeterID.ColumnName = "MeterID";
                colvarMeterID.DataType = DbType.Int32;
                colvarMeterID.MaxLength = 0;
                colvarMeterID.AutoIncrement = false;
                colvarMeterID.IsNullable = true;
                colvarMeterID.IsPrimaryKey = false;
                colvarMeterID.IsForeignKey = false;
                colvarMeterID.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterID);
                
                TableSchema.TableColumn colvarMeterNo = new TableSchema.TableColumn(schema);
                colvarMeterNo.ColumnName = "MeterNo";
                colvarMeterNo.DataType = DbType.AnsiString;
                colvarMeterNo.MaxLength = -1;
                colvarMeterNo.AutoIncrement = false;
                colvarMeterNo.IsNullable = true;
                colvarMeterNo.IsPrimaryKey = false;
                colvarMeterNo.IsForeignKey = false;
                colvarMeterNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterNo);
                
                TableSchema.TableColumn colvarIsApprove = new TableSchema.TableColumn(schema);
                colvarIsApprove.ColumnName = "IsApprove";
                colvarIsApprove.DataType = DbType.Boolean;
                colvarIsApprove.MaxLength = 0;
                colvarIsApprove.AutoIncrement = false;
                colvarIsApprove.IsNullable = true;
                colvarIsApprove.IsPrimaryKey = false;
                colvarIsApprove.IsForeignKey = false;
                colvarIsApprove.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsApprove);
                
                TableSchema.TableColumn colvarMeterLife = new TableSchema.TableColumn(schema);
                colvarMeterLife.ColumnName = "MeterLife";
                colvarMeterLife.DataType = DbType.Int32;
                colvarMeterLife.MaxLength = 0;
                colvarMeterLife.AutoIncrement = false;
                colvarMeterLife.IsNullable = true;
                colvarMeterLife.IsPrimaryKey = false;
                colvarMeterLife.IsForeignKey = false;
                colvarMeterLife.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterLife);
                
                TableSchema.TableColumn colvarCunsumerID = new TableSchema.TableColumn(schema);
                colvarCunsumerID.ColumnName = "CunsumerID";
                colvarCunsumerID.DataType = DbType.Int32;
                colvarCunsumerID.MaxLength = 0;
                colvarCunsumerID.AutoIncrement = false;
                colvarCunsumerID.IsNullable = true;
                colvarCunsumerID.IsPrimaryKey = false;
                colvarCunsumerID.IsForeignKey = false;
                colvarCunsumerID.IsReadOnly = false;
                
                schema.Columns.Add(colvarCunsumerID);
                
                TableSchema.TableColumn colvarConsumerName = new TableSchema.TableColumn(schema);
                colvarConsumerName.ColumnName = "ConsumerName";
                colvarConsumerName.DataType = DbType.AnsiString;
                colvarConsumerName.MaxLength = 50;
                colvarConsumerName.AutoIncrement = false;
                colvarConsumerName.IsNullable = true;
                colvarConsumerName.IsPrimaryKey = false;
                colvarConsumerName.IsForeignKey = false;
                colvarConsumerName.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerName);
                
                TableSchema.TableColumn colvarCunsumerEmail = new TableSchema.TableColumn(schema);
                colvarCunsumerEmail.ColumnName = "CunsumerEmail";
                colvarCunsumerEmail.DataType = DbType.AnsiString;
                colvarCunsumerEmail.MaxLength = 50;
                colvarCunsumerEmail.AutoIncrement = false;
                colvarCunsumerEmail.IsNullable = true;
                colvarCunsumerEmail.IsPrimaryKey = false;
                colvarCunsumerEmail.IsForeignKey = false;
                colvarCunsumerEmail.IsReadOnly = false;
                
                schema.Columns.Add(colvarCunsumerEmail);
                
                TableSchema.TableColumn colvarRequestCode = new TableSchema.TableColumn(schema);
                colvarRequestCode.ColumnName = "RequestCode";
                colvarRequestCode.DataType = DbType.AnsiString;
                colvarRequestCode.MaxLength = 100;
                colvarRequestCode.AutoIncrement = false;
                colvarRequestCode.IsNullable = true;
                colvarRequestCode.IsPrimaryKey = false;
                colvarRequestCode.IsForeignKey = false;
                colvarRequestCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarRequestCode);
                
                TableSchema.TableColumn colvarNewConnectionID = new TableSchema.TableColumn(schema);
                colvarNewConnectionID.ColumnName = "NewConnectionID";
                colvarNewConnectionID.DataType = DbType.Int32;
                colvarNewConnectionID.MaxLength = 0;
                colvarNewConnectionID.AutoIncrement = false;
                colvarNewConnectionID.IsNullable = true;
                colvarNewConnectionID.IsPrimaryKey = false;
                colvarNewConnectionID.IsForeignKey = false;
                colvarNewConnectionID.IsReadOnly = false;
                
                schema.Columns.Add(colvarNewConnectionID);
                
                TableSchema.TableColumn colvarCunsumerAddress = new TableSchema.TableColumn(schema);
                colvarCunsumerAddress.ColumnName = "CunsumerAddress";
                colvarCunsumerAddress.DataType = DbType.AnsiString;
                colvarCunsumerAddress.MaxLength = -1;
                colvarCunsumerAddress.AutoIncrement = false;
                colvarCunsumerAddress.IsNullable = true;
                colvarCunsumerAddress.IsPrimaryKey = false;
                colvarCunsumerAddress.IsForeignKey = false;
                colvarCunsumerAddress.IsReadOnly = false;
                
                schema.Columns.Add(colvarCunsumerAddress);
                
                TableSchema.TableColumn colvarConsumerMobileNo = new TableSchema.TableColumn(schema);
                colvarConsumerMobileNo.ColumnName = "ConsumerMobileNo";
                colvarConsumerMobileNo.DataType = DbType.AnsiString;
                colvarConsumerMobileNo.MaxLength = 50;
                colvarConsumerMobileNo.AutoIncrement = false;
                colvarConsumerMobileNo.IsNullable = true;
                colvarConsumerMobileNo.IsPrimaryKey = false;
                colvarConsumerMobileNo.IsForeignKey = false;
                colvarConsumerMobileNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerMobileNo);
                
                TableSchema.TableColumn colvarConsumerNo = new TableSchema.TableColumn(schema);
                colvarConsumerNo.ColumnName = "ConsumerNo";
                colvarConsumerNo.DataType = DbType.AnsiString;
                colvarConsumerNo.MaxLength = -1;
                colvarConsumerNo.AutoIncrement = false;
                colvarConsumerNo.IsNullable = true;
                colvarConsumerNo.IsPrimaryKey = false;
                colvarConsumerNo.IsForeignKey = false;
                colvarConsumerNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerNo);
                
                TableSchema.TableColumn colvarMeterTypeID = new TableSchema.TableColumn(schema);
                colvarMeterTypeID.ColumnName = "MeterTypeID";
                colvarMeterTypeID.DataType = DbType.Int32;
                colvarMeterTypeID.MaxLength = 0;
                colvarMeterTypeID.AutoIncrement = false;
                colvarMeterTypeID.IsNullable = true;
                colvarMeterTypeID.IsPrimaryKey = false;
                colvarMeterTypeID.IsForeignKey = false;
                colvarMeterTypeID.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterTypeID);
                
                TableSchema.TableColumn colvarMeterTypeName = new TableSchema.TableColumn(schema);
                colvarMeterTypeName.ColumnName = "MeterTypeName";
                colvarMeterTypeName.DataType = DbType.AnsiString;
                colvarMeterTypeName.MaxLength = 50;
                colvarMeterTypeName.AutoIncrement = false;
                colvarMeterTypeName.IsNullable = true;
                colvarMeterTypeName.IsPrimaryKey = false;
                colvarMeterTypeName.IsForeignKey = false;
                colvarMeterTypeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterTypeName);
                
                TableSchema.TableColumn colvarConsumerNIC = new TableSchema.TableColumn(schema);
                colvarConsumerNIC.ColumnName = "ConsumerNIC";
                colvarConsumerNIC.DataType = DbType.AnsiString;
                colvarConsumerNIC.MaxLength = 70;
                colvarConsumerNIC.AutoIncrement = false;
                colvarConsumerNIC.IsNullable = true;
                colvarConsumerNIC.IsPrimaryKey = false;
                colvarConsumerNIC.IsForeignKey = false;
                colvarConsumerNIC.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerNIC);
                
                TableSchema.TableColumn colvarFeederID = new TableSchema.TableColumn(schema);
                colvarFeederID.ColumnName = "FeederID";
                colvarFeederID.DataType = DbType.Int32;
                colvarFeederID.MaxLength = 0;
                colvarFeederID.AutoIncrement = false;
                colvarFeederID.IsNullable = true;
                colvarFeederID.IsPrimaryKey = false;
                colvarFeederID.IsForeignKey = false;
                colvarFeederID.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederID);
                
                TableSchema.TableColumn colvarFeederNo = new TableSchema.TableColumn(schema);
                colvarFeederNo.ColumnName = "FeederNo";
                colvarFeederNo.DataType = DbType.AnsiString;
                colvarFeederNo.MaxLength = -1;
                colvarFeederNo.AutoIncrement = false;
                colvarFeederNo.IsNullable = true;
                colvarFeederNo.IsPrimaryKey = false;
                colvarFeederNo.IsForeignKey = false;
                colvarFeederNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederNo);
                
                TableSchema.TableColumn colvarConsumerStatusID = new TableSchema.TableColumn(schema);
                colvarConsumerStatusID.ColumnName = "ConsumerStatusID";
                colvarConsumerStatusID.DataType = DbType.Int32;
                colvarConsumerStatusID.MaxLength = 0;
                colvarConsumerStatusID.AutoIncrement = false;
                colvarConsumerStatusID.IsNullable = true;
                colvarConsumerStatusID.IsPrimaryKey = false;
                colvarConsumerStatusID.IsForeignKey = false;
                colvarConsumerStatusID.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerStatusID);
                
                TableSchema.TableColumn colvarBranchID = new TableSchema.TableColumn(schema);
                colvarBranchID.ColumnName = "BranchID";
                colvarBranchID.DataType = DbType.Int32;
                colvarBranchID.MaxLength = 0;
                colvarBranchID.AutoIncrement = false;
                colvarBranchID.IsNullable = true;
                colvarBranchID.IsPrimaryKey = false;
                colvarBranchID.IsForeignKey = false;
                colvarBranchID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchID);
                
                TableSchema.TableColumn colvarBranchCode = new TableSchema.TableColumn(schema);
                colvarBranchCode.ColumnName = "BranchCode";
                colvarBranchCode.DataType = DbType.AnsiString;
                colvarBranchCode.MaxLength = 50;
                colvarBranchCode.AutoIncrement = false;
                colvarBranchCode.IsNullable = true;
                colvarBranchCode.IsPrimaryKey = false;
                colvarBranchCode.IsForeignKey = false;
                colvarBranchCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchCode);
                
                TableSchema.TableColumn colvarBranchName = new TableSchema.TableColumn(schema);
                colvarBranchName.ColumnName = "BranchName";
                colvarBranchName.DataType = DbType.AnsiString;
                colvarBranchName.MaxLength = 150;
                colvarBranchName.AutoIncrement = false;
                colvarBranchName.IsNullable = true;
                colvarBranchName.IsPrimaryKey = false;
                colvarBranchName.IsForeignKey = false;
                colvarBranchName.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchName);
                
                TableSchema.TableColumn colvarMeterStatusID = new TableSchema.TableColumn(schema);
                colvarMeterStatusID.ColumnName = "MeterStatusID";
                colvarMeterStatusID.DataType = DbType.Int32;
                colvarMeterStatusID.MaxLength = 0;
                colvarMeterStatusID.AutoIncrement = false;
                colvarMeterStatusID.IsNullable = true;
                colvarMeterStatusID.IsPrimaryKey = false;
                colvarMeterStatusID.IsForeignKey = false;
                colvarMeterStatusID.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterStatusID);
                
                TableSchema.TableColumn colvarAccountNo = new TableSchema.TableColumn(schema);
                colvarAccountNo.ColumnName = "AccountNo";
                colvarAccountNo.DataType = DbType.AnsiString;
                colvarAccountNo.MaxLength = -1;
                colvarAccountNo.AutoIncrement = false;
                colvarAccountNo.IsNullable = true;
                colvarAccountNo.IsPrimaryKey = false;
                colvarAccountNo.IsForeignKey = false;
                colvarAccountNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarAccountNo);
                
                TableSchema.TableColumn colvarMeterStatusName = new TableSchema.TableColumn(schema);
                colvarMeterStatusName.ColumnName = "MeterStatusName";
                colvarMeterStatusName.DataType = DbType.AnsiString;
                colvarMeterStatusName.MaxLength = 50;
                colvarMeterStatusName.AutoIncrement = false;
                colvarMeterStatusName.IsNullable = true;
                colvarMeterStatusName.IsPrimaryKey = false;
                colvarMeterStatusName.IsForeignKey = false;
                colvarMeterStatusName.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterStatusName);
                
                TableSchema.TableColumn colvarFeederStatusID = new TableSchema.TableColumn(schema);
                colvarFeederStatusID.ColumnName = "FeederStatusID";
                colvarFeederStatusID.DataType = DbType.Int32;
                colvarFeederStatusID.MaxLength = 0;
                colvarFeederStatusID.AutoIncrement = false;
                colvarFeederStatusID.IsNullable = true;
                colvarFeederStatusID.IsPrimaryKey = false;
                colvarFeederStatusID.IsForeignKey = false;
                colvarFeederStatusID.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederStatusID);
                
                TableSchema.TableColumn colvarFeederStatusName = new TableSchema.TableColumn(schema);
                colvarFeederStatusName.ColumnName = "FeederStatusName";
                colvarFeederStatusName.DataType = DbType.AnsiString;
                colvarFeederStatusName.MaxLength = 50;
                colvarFeederStatusName.AutoIncrement = false;
                colvarFeederStatusName.IsNullable = true;
                colvarFeederStatusName.IsPrimaryKey = false;
                colvarFeederStatusName.IsForeignKey = false;
                colvarFeederStatusName.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederStatusName);
                
                TableSchema.TableColumn colvarTariffID = new TableSchema.TableColumn(schema);
                colvarTariffID.ColumnName = "TariffID";
                colvarTariffID.DataType = DbType.Int32;
                colvarTariffID.MaxLength = 0;
                colvarTariffID.AutoIncrement = false;
                colvarTariffID.IsNullable = true;
                colvarTariffID.IsPrimaryKey = false;
                colvarTariffID.IsForeignKey = false;
                colvarTariffID.IsReadOnly = false;
                
                schema.Columns.Add(colvarTariffID);
                
                TableSchema.TableColumn colvarTariffName = new TableSchema.TableColumn(schema);
                colvarTariffName.ColumnName = "TariffName";
                colvarTariffName.DataType = DbType.AnsiString;
                colvarTariffName.MaxLength = 50;
                colvarTariffName.AutoIncrement = false;
                colvarTariffName.IsNullable = true;
                colvarTariffName.IsPrimaryKey = false;
                colvarTariffName.IsForeignKey = false;
                colvarTariffName.IsReadOnly = false;
                
                schema.Columns.Add(colvarTariffName);
                
                TableSchema.TableColumn colvarTariffCode = new TableSchema.TableColumn(schema);
                colvarTariffCode.ColumnName = "TariffCode";
                colvarTariffCode.DataType = DbType.AnsiString;
                colvarTariffCode.MaxLength = 50;
                colvarTariffCode.AutoIncrement = false;
                colvarTariffCode.IsNullable = true;
                colvarTariffCode.IsPrimaryKey = false;
                colvarTariffCode.IsForeignKey = false;
                colvarTariffCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarTariffCode);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["PrimaryProvider"].AddSchema("VwTblMeterIssue",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VwTblMeterIssue()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VwTblMeterIssue(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VwTblMeterIssue(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VwTblMeterIssue(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("IssueID")]
        [Bindable(true)]
        public int IssueID 
	    {
		    get
		    {
			    return GetColumnValue<int>("IssueID");
		    }
            set 
		    {
			    SetColumnValue("IssueID", value);
            }
        }
	      
        [XmlAttribute("IssueDate")]
        [Bindable(true)]
        public DateTime? IssueDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("IssueDate");
		    }
            set 
		    {
			    SetColumnValue("IssueDate", value);
            }
        }
	      
        [XmlAttribute("MeterID")]
        [Bindable(true)]
        public int? MeterID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("MeterID");
		    }
            set 
		    {
			    SetColumnValue("MeterID", value);
            }
        }
	      
        [XmlAttribute("MeterNo")]
        [Bindable(true)]
        public string MeterNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("MeterNo");
		    }
            set 
		    {
			    SetColumnValue("MeterNo", value);
            }
        }
	      
        [XmlAttribute("IsApprove")]
        [Bindable(true)]
        public bool? IsApprove 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("IsApprove");
		    }
            set 
		    {
			    SetColumnValue("IsApprove", value);
            }
        }
	      
        [XmlAttribute("MeterLife")]
        [Bindable(true)]
        public int? MeterLife 
	    {
		    get
		    {
			    return GetColumnValue<int?>("MeterLife");
		    }
            set 
		    {
			    SetColumnValue("MeterLife", value);
            }
        }
	      
        [XmlAttribute("CunsumerID")]
        [Bindable(true)]
        public int? CunsumerID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("CunsumerID");
		    }
            set 
		    {
			    SetColumnValue("CunsumerID", value);
            }
        }
	      
        [XmlAttribute("ConsumerName")]
        [Bindable(true)]
        public string ConsumerName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerName");
		    }
            set 
		    {
			    SetColumnValue("ConsumerName", value);
            }
        }
	      
        [XmlAttribute("CunsumerEmail")]
        [Bindable(true)]
        public string CunsumerEmail 
	    {
		    get
		    {
			    return GetColumnValue<string>("CunsumerEmail");
		    }
            set 
		    {
			    SetColumnValue("CunsumerEmail", value);
            }
        }
	      
        [XmlAttribute("RequestCode")]
        [Bindable(true)]
        public string RequestCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("RequestCode");
		    }
            set 
		    {
			    SetColumnValue("RequestCode", value);
            }
        }
	      
        [XmlAttribute("NewConnectionID")]
        [Bindable(true)]
        public int? NewConnectionID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("NewConnectionID");
		    }
            set 
		    {
			    SetColumnValue("NewConnectionID", value);
            }
        }
	      
        [XmlAttribute("CunsumerAddress")]
        [Bindable(true)]
        public string CunsumerAddress 
	    {
		    get
		    {
			    return GetColumnValue<string>("CunsumerAddress");
		    }
            set 
		    {
			    SetColumnValue("CunsumerAddress", value);
            }
        }
	      
        [XmlAttribute("ConsumerMobileNo")]
        [Bindable(true)]
        public string ConsumerMobileNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerMobileNo");
		    }
            set 
		    {
			    SetColumnValue("ConsumerMobileNo", value);
            }
        }
	      
        [XmlAttribute("ConsumerNo")]
        [Bindable(true)]
        public string ConsumerNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerNo");
		    }
            set 
		    {
			    SetColumnValue("ConsumerNo", value);
            }
        }
	      
        [XmlAttribute("MeterTypeID")]
        [Bindable(true)]
        public int? MeterTypeID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("MeterTypeID");
		    }
            set 
		    {
			    SetColumnValue("MeterTypeID", value);
            }
        }
	      
        [XmlAttribute("MeterTypeName")]
        [Bindable(true)]
        public string MeterTypeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("MeterTypeName");
		    }
            set 
		    {
			    SetColumnValue("MeterTypeName", value);
            }
        }
	      
        [XmlAttribute("ConsumerNIC")]
        [Bindable(true)]
        public string ConsumerNIC 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerNIC");
		    }
            set 
		    {
			    SetColumnValue("ConsumerNIC", value);
            }
        }
	      
        [XmlAttribute("FeederID")]
        [Bindable(true)]
        public int? FeederID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("FeederID");
		    }
            set 
		    {
			    SetColumnValue("FeederID", value);
            }
        }
	      
        [XmlAttribute("FeederNo")]
        [Bindable(true)]
        public string FeederNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("FeederNo");
		    }
            set 
		    {
			    SetColumnValue("FeederNo", value);
            }
        }
	      
        [XmlAttribute("ConsumerStatusID")]
        [Bindable(true)]
        public int? ConsumerStatusID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ConsumerStatusID");
		    }
            set 
		    {
			    SetColumnValue("ConsumerStatusID", value);
            }
        }
	      
        [XmlAttribute("BranchID")]
        [Bindable(true)]
        public int? BranchID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("BranchID");
		    }
            set 
		    {
			    SetColumnValue("BranchID", value);
            }
        }
	      
        [XmlAttribute("BranchCode")]
        [Bindable(true)]
        public string BranchCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("BranchCode");
		    }
            set 
		    {
			    SetColumnValue("BranchCode", value);
            }
        }
	      
        [XmlAttribute("BranchName")]
        [Bindable(true)]
        public string BranchName 
	    {
		    get
		    {
			    return GetColumnValue<string>("BranchName");
		    }
            set 
		    {
			    SetColumnValue("BranchName", value);
            }
        }
	      
        [XmlAttribute("MeterStatusID")]
        [Bindable(true)]
        public int? MeterStatusID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("MeterStatusID");
		    }
            set 
		    {
			    SetColumnValue("MeterStatusID", value);
            }
        }
	      
        [XmlAttribute("AccountNo")]
        [Bindable(true)]
        public string AccountNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("AccountNo");
		    }
            set 
		    {
			    SetColumnValue("AccountNo", value);
            }
        }
	      
        [XmlAttribute("MeterStatusName")]
        [Bindable(true)]
        public string MeterStatusName 
	    {
		    get
		    {
			    return GetColumnValue<string>("MeterStatusName");
		    }
            set 
		    {
			    SetColumnValue("MeterStatusName", value);
            }
        }
	      
        [XmlAttribute("FeederStatusID")]
        [Bindable(true)]
        public int? FeederStatusID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("FeederStatusID");
		    }
            set 
		    {
			    SetColumnValue("FeederStatusID", value);
            }
        }
	      
        [XmlAttribute("FeederStatusName")]
        [Bindable(true)]
        public string FeederStatusName 
	    {
		    get
		    {
			    return GetColumnValue<string>("FeederStatusName");
		    }
            set 
		    {
			    SetColumnValue("FeederStatusName", value);
            }
        }
	      
        [XmlAttribute("TariffID")]
        [Bindable(true)]
        public int? TariffID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("TariffID");
		    }
            set 
		    {
			    SetColumnValue("TariffID", value);
            }
        }
	      
        [XmlAttribute("TariffName")]
        [Bindable(true)]
        public string TariffName 
	    {
		    get
		    {
			    return GetColumnValue<string>("TariffName");
		    }
            set 
		    {
			    SetColumnValue("TariffName", value);
            }
        }
	      
        [XmlAttribute("TariffCode")]
        [Bindable(true)]
        public string TariffCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("TariffCode");
		    }
            set 
		    {
			    SetColumnValue("TariffCode", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string IssueID = @"IssueID";
            
            public static string IssueDate = @"IssueDate";
            
            public static string MeterID = @"MeterID";
            
            public static string MeterNo = @"MeterNo";
            
            public static string IsApprove = @"IsApprove";
            
            public static string MeterLife = @"MeterLife";
            
            public static string CunsumerID = @"CunsumerID";
            
            public static string ConsumerName = @"ConsumerName";
            
            public static string CunsumerEmail = @"CunsumerEmail";
            
            public static string RequestCode = @"RequestCode";
            
            public static string NewConnectionID = @"NewConnectionID";
            
            public static string CunsumerAddress = @"CunsumerAddress";
            
            public static string ConsumerMobileNo = @"ConsumerMobileNo";
            
            public static string ConsumerNo = @"ConsumerNo";
            
            public static string MeterTypeID = @"MeterTypeID";
            
            public static string MeterTypeName = @"MeterTypeName";
            
            public static string ConsumerNIC = @"ConsumerNIC";
            
            public static string FeederID = @"FeederID";
            
            public static string FeederNo = @"FeederNo";
            
            public static string ConsumerStatusID = @"ConsumerStatusID";
            
            public static string BranchID = @"BranchID";
            
            public static string BranchCode = @"BranchCode";
            
            public static string BranchName = @"BranchName";
            
            public static string MeterStatusID = @"MeterStatusID";
            
            public static string AccountNo = @"AccountNo";
            
            public static string MeterStatusName = @"MeterStatusName";
            
            public static string FeederStatusID = @"FeederStatusID";
            
            public static string FeederStatusName = @"FeederStatusName";
            
            public static string TariffID = @"TariffID";
            
            public static string TariffName = @"TariffName";
            
            public static string TariffCode = @"TariffCode";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
