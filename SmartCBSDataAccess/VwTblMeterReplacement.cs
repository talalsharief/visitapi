using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SmartCBSDataAccess{
    /// <summary>
    /// Strongly-typed collection for the VwTblMeterReplacement class.
    /// </summary>
    [Serializable]
    public partial class VwTblMeterReplacementCollection : ReadOnlyList<VwTblMeterReplacement, VwTblMeterReplacementCollection>
    {        
        public VwTblMeterReplacementCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the VwTblMeterReplacement view.
    /// </summary>
    [Serializable]
    public partial class VwTblMeterReplacement : ReadOnlyRecord<VwTblMeterReplacement>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("VwTblMeterReplacement", TableType.View, DataService.GetInstance("PrimaryProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarReplaceID = new TableSchema.TableColumn(schema);
                colvarReplaceID.ColumnName = "ReplaceID";
                colvarReplaceID.DataType = DbType.Int32;
                colvarReplaceID.MaxLength = 0;
                colvarReplaceID.AutoIncrement = false;
                colvarReplaceID.IsNullable = false;
                colvarReplaceID.IsPrimaryKey = false;
                colvarReplaceID.IsForeignKey = false;
                colvarReplaceID.IsReadOnly = false;
                
                schema.Columns.Add(colvarReplaceID);
                
                TableSchema.TableColumn colvarMeterID = new TableSchema.TableColumn(schema);
                colvarMeterID.ColumnName = "MeterID";
                colvarMeterID.DataType = DbType.Int32;
                colvarMeterID.MaxLength = 0;
                colvarMeterID.AutoIncrement = false;
                colvarMeterID.IsNullable = true;
                colvarMeterID.IsPrimaryKey = false;
                colvarMeterID.IsForeignKey = false;
                colvarMeterID.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterID);
                
                TableSchema.TableColumn colvarMeterNo = new TableSchema.TableColumn(schema);
                colvarMeterNo.ColumnName = "MeterNo";
                colvarMeterNo.DataType = DbType.AnsiString;
                colvarMeterNo.MaxLength = -1;
                colvarMeterNo.AutoIncrement = false;
                colvarMeterNo.IsNullable = true;
                colvarMeterNo.IsPrimaryKey = false;
                colvarMeterNo.IsForeignKey = false;
                colvarMeterNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterNo);
                
                TableSchema.TableColumn colvarAccountNo = new TableSchema.TableColumn(schema);
                colvarAccountNo.ColumnName = "AccountNo";
                colvarAccountNo.DataType = DbType.AnsiString;
                colvarAccountNo.MaxLength = -1;
                colvarAccountNo.AutoIncrement = false;
                colvarAccountNo.IsNullable = true;
                colvarAccountNo.IsPrimaryKey = false;
                colvarAccountNo.IsForeignKey = false;
                colvarAccountNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarAccountNo);
                
                TableSchema.TableColumn colvarMeterIssueDate = new TableSchema.TableColumn(schema);
                colvarMeterIssueDate.ColumnName = "MeterIssueDate";
                colvarMeterIssueDate.DataType = DbType.DateTime;
                colvarMeterIssueDate.MaxLength = 0;
                colvarMeterIssueDate.AutoIncrement = false;
                colvarMeterIssueDate.IsNullable = true;
                colvarMeterIssueDate.IsPrimaryKey = false;
                colvarMeterIssueDate.IsForeignKey = false;
                colvarMeterIssueDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterIssueDate);
                
                TableSchema.TableColumn colvarIssueID = new TableSchema.TableColumn(schema);
                colvarIssueID.ColumnName = "IssueID";
                colvarIssueID.DataType = DbType.Int32;
                colvarIssueID.MaxLength = 0;
                colvarIssueID.AutoIncrement = false;
                colvarIssueID.IsNullable = true;
                colvarIssueID.IsPrimaryKey = false;
                colvarIssueID.IsForeignKey = false;
                colvarIssueID.IsReadOnly = false;
                
                schema.Columns.Add(colvarIssueID);
                
                TableSchema.TableColumn colvarCunsumerID = new TableSchema.TableColumn(schema);
                colvarCunsumerID.ColumnName = "CunsumerID";
                colvarCunsumerID.DataType = DbType.Int32;
                colvarCunsumerID.MaxLength = 0;
                colvarCunsumerID.AutoIncrement = false;
                colvarCunsumerID.IsNullable = true;
                colvarCunsumerID.IsPrimaryKey = false;
                colvarCunsumerID.IsForeignKey = false;
                colvarCunsumerID.IsReadOnly = false;
                
                schema.Columns.Add(colvarCunsumerID);
                
                TableSchema.TableColumn colvarConsumerName = new TableSchema.TableColumn(schema);
                colvarConsumerName.ColumnName = "ConsumerName";
                colvarConsumerName.DataType = DbType.AnsiString;
                colvarConsumerName.MaxLength = 50;
                colvarConsumerName.AutoIncrement = false;
                colvarConsumerName.IsNullable = true;
                colvarConsumerName.IsPrimaryKey = false;
                colvarConsumerName.IsForeignKey = false;
                colvarConsumerName.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerName);
                
                TableSchema.TableColumn colvarCunsumerEmail = new TableSchema.TableColumn(schema);
                colvarCunsumerEmail.ColumnName = "CunsumerEmail";
                colvarCunsumerEmail.DataType = DbType.AnsiString;
                colvarCunsumerEmail.MaxLength = 50;
                colvarCunsumerEmail.AutoIncrement = false;
                colvarCunsumerEmail.IsNullable = true;
                colvarCunsumerEmail.IsPrimaryKey = false;
                colvarCunsumerEmail.IsForeignKey = false;
                colvarCunsumerEmail.IsReadOnly = false;
                
                schema.Columns.Add(colvarCunsumerEmail);
                
                TableSchema.TableColumn colvarConsumerResidensePhoneNo = new TableSchema.TableColumn(schema);
                colvarConsumerResidensePhoneNo.ColumnName = "ConsumerResidensePhoneNo";
                colvarConsumerResidensePhoneNo.DataType = DbType.AnsiString;
                colvarConsumerResidensePhoneNo.MaxLength = 50;
                colvarConsumerResidensePhoneNo.AutoIncrement = false;
                colvarConsumerResidensePhoneNo.IsNullable = true;
                colvarConsumerResidensePhoneNo.IsPrimaryKey = false;
                colvarConsumerResidensePhoneNo.IsForeignKey = false;
                colvarConsumerResidensePhoneNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerResidensePhoneNo);
                
                TableSchema.TableColumn colvarCunsumerAddress = new TableSchema.TableColumn(schema);
                colvarCunsumerAddress.ColumnName = "CunsumerAddress";
                colvarCunsumerAddress.DataType = DbType.AnsiString;
                colvarCunsumerAddress.MaxLength = -1;
                colvarCunsumerAddress.AutoIncrement = false;
                colvarCunsumerAddress.IsNullable = true;
                colvarCunsumerAddress.IsPrimaryKey = false;
                colvarCunsumerAddress.IsForeignKey = false;
                colvarCunsumerAddress.IsReadOnly = false;
                
                schema.Columns.Add(colvarCunsumerAddress);
                
                TableSchema.TableColumn colvarConsumerMobileNo = new TableSchema.TableColumn(schema);
                colvarConsumerMobileNo.ColumnName = "ConsumerMobileNo";
                colvarConsumerMobileNo.DataType = DbType.AnsiString;
                colvarConsumerMobileNo.MaxLength = 50;
                colvarConsumerMobileNo.AutoIncrement = false;
                colvarConsumerMobileNo.IsNullable = true;
                colvarConsumerMobileNo.IsPrimaryKey = false;
                colvarConsumerMobileNo.IsForeignKey = false;
                colvarConsumerMobileNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerMobileNo);
                
                TableSchema.TableColumn colvarConsumerNo = new TableSchema.TableColumn(schema);
                colvarConsumerNo.ColumnName = "ConsumerNo";
                colvarConsumerNo.DataType = DbType.AnsiString;
                colvarConsumerNo.MaxLength = -1;
                colvarConsumerNo.AutoIncrement = false;
                colvarConsumerNo.IsNullable = true;
                colvarConsumerNo.IsPrimaryKey = false;
                colvarConsumerNo.IsForeignKey = false;
                colvarConsumerNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerNo);
                
                TableSchema.TableColumn colvarConsumerNIC = new TableSchema.TableColumn(schema);
                colvarConsumerNIC.ColumnName = "ConsumerNIC";
                colvarConsumerNIC.DataType = DbType.AnsiString;
                colvarConsumerNIC.MaxLength = 70;
                colvarConsumerNIC.AutoIncrement = false;
                colvarConsumerNIC.IsNullable = true;
                colvarConsumerNIC.IsPrimaryKey = false;
                colvarConsumerNIC.IsForeignKey = false;
                colvarConsumerNIC.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerNIC);
                
                TableSchema.TableColumn colvarConsumerCNICExpiryDate = new TableSchema.TableColumn(schema);
                colvarConsumerCNICExpiryDate.ColumnName = "ConsumerCNICExpiryDate";
                colvarConsumerCNICExpiryDate.DataType = DbType.AnsiString;
                colvarConsumerCNICExpiryDate.MaxLength = 0;
                colvarConsumerCNICExpiryDate.AutoIncrement = false;
                colvarConsumerCNICExpiryDate.IsNullable = true;
                colvarConsumerCNICExpiryDate.IsPrimaryKey = false;
                colvarConsumerCNICExpiryDate.IsForeignKey = false;
                colvarConsumerCNICExpiryDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerCNICExpiryDate);
                
                TableSchema.TableColumn colvarTariffID = new TableSchema.TableColumn(schema);
                colvarTariffID.ColumnName = "TariffID";
                colvarTariffID.DataType = DbType.Int32;
                colvarTariffID.MaxLength = 0;
                colvarTariffID.AutoIncrement = false;
                colvarTariffID.IsNullable = true;
                colvarTariffID.IsPrimaryKey = false;
                colvarTariffID.IsForeignKey = false;
                colvarTariffID.IsReadOnly = false;
                
                schema.Columns.Add(colvarTariffID);
                
                TableSchema.TableColumn colvarTariffName = new TableSchema.TableColumn(schema);
                colvarTariffName.ColumnName = "TariffName";
                colvarTariffName.DataType = DbType.AnsiString;
                colvarTariffName.MaxLength = 50;
                colvarTariffName.AutoIncrement = false;
                colvarTariffName.IsNullable = true;
                colvarTariffName.IsPrimaryKey = false;
                colvarTariffName.IsForeignKey = false;
                colvarTariffName.IsReadOnly = false;
                
                schema.Columns.Add(colvarTariffName);
                
                TableSchema.TableColumn colvarTariffCode = new TableSchema.TableColumn(schema);
                colvarTariffCode.ColumnName = "TariffCode";
                colvarTariffCode.DataType = DbType.AnsiString;
                colvarTariffCode.MaxLength = 50;
                colvarTariffCode.AutoIncrement = false;
                colvarTariffCode.IsNullable = true;
                colvarTariffCode.IsPrimaryKey = false;
                colvarTariffCode.IsForeignKey = false;
                colvarTariffCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarTariffCode);
                
                TableSchema.TableColumn colvarIsApproved = new TableSchema.TableColumn(schema);
                colvarIsApproved.ColumnName = "IsApproved";
                colvarIsApproved.DataType = DbType.Boolean;
                colvarIsApproved.MaxLength = 0;
                colvarIsApproved.AutoIncrement = false;
                colvarIsApproved.IsNullable = true;
                colvarIsApproved.IsPrimaryKey = false;
                colvarIsApproved.IsForeignKey = false;
                colvarIsApproved.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsApproved);
                
                TableSchema.TableColumn colvarApprovedBy = new TableSchema.TableColumn(schema);
                colvarApprovedBy.ColumnName = "ApprovedBy";
                colvarApprovedBy.DataType = DbType.Int32;
                colvarApprovedBy.MaxLength = 0;
                colvarApprovedBy.AutoIncrement = false;
                colvarApprovedBy.IsNullable = true;
                colvarApprovedBy.IsPrimaryKey = false;
                colvarApprovedBy.IsForeignKey = false;
                colvarApprovedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarApprovedBy);
                
                TableSchema.TableColumn colvarReplacedBy = new TableSchema.TableColumn(schema);
                colvarReplacedBy.ColumnName = "ReplacedBy";
                colvarReplacedBy.DataType = DbType.Int32;
                colvarReplacedBy.MaxLength = 0;
                colvarReplacedBy.AutoIncrement = false;
                colvarReplacedBy.IsNullable = true;
                colvarReplacedBy.IsPrimaryKey = false;
                colvarReplacedBy.IsForeignKey = false;
                colvarReplacedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarReplacedBy);
                
                TableSchema.TableColumn colvarApprovedDate = new TableSchema.TableColumn(schema);
                colvarApprovedDate.ColumnName = "ApprovedDate";
                colvarApprovedDate.DataType = DbType.DateTime;
                colvarApprovedDate.MaxLength = 0;
                colvarApprovedDate.AutoIncrement = false;
                colvarApprovedDate.IsNullable = true;
                colvarApprovedDate.IsPrimaryKey = false;
                colvarApprovedDate.IsForeignKey = false;
                colvarApprovedDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarApprovedDate);
                
                TableSchema.TableColumn colvarPreviousMeterID = new TableSchema.TableColumn(schema);
                colvarPreviousMeterID.ColumnName = "PreviousMeterID";
                colvarPreviousMeterID.DataType = DbType.Int32;
                colvarPreviousMeterID.MaxLength = 0;
                colvarPreviousMeterID.AutoIncrement = false;
                colvarPreviousMeterID.IsNullable = true;
                colvarPreviousMeterID.IsPrimaryKey = false;
                colvarPreviousMeterID.IsForeignKey = false;
                colvarPreviousMeterID.IsReadOnly = false;
                
                schema.Columns.Add(colvarPreviousMeterID);
                
                TableSchema.TableColumn colvarMeterStatusID = new TableSchema.TableColumn(schema);
                colvarMeterStatusID.ColumnName = "MeterStatusID";
                colvarMeterStatusID.DataType = DbType.Int32;
                colvarMeterStatusID.MaxLength = 0;
                colvarMeterStatusID.AutoIncrement = false;
                colvarMeterStatusID.IsNullable = true;
                colvarMeterStatusID.IsPrimaryKey = false;
                colvarMeterStatusID.IsForeignKey = false;
                colvarMeterStatusID.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterStatusID);
                
                TableSchema.TableColumn colvarReplacementDate = new TableSchema.TableColumn(schema);
                colvarReplacementDate.ColumnName = "ReplacementDate";
                colvarReplacementDate.DataType = DbType.DateTime;
                colvarReplacementDate.MaxLength = 0;
                colvarReplacementDate.AutoIncrement = false;
                colvarReplacementDate.IsNullable = true;
                colvarReplacementDate.IsPrimaryKey = false;
                colvarReplacementDate.IsForeignKey = false;
                colvarReplacementDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarReplacementDate);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["PrimaryProvider"].AddSchema("VwTblMeterReplacement",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VwTblMeterReplacement()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VwTblMeterReplacement(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VwTblMeterReplacement(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VwTblMeterReplacement(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("ReplaceID")]
        [Bindable(true)]
        public int ReplaceID 
	    {
		    get
		    {
			    return GetColumnValue<int>("ReplaceID");
		    }
            set 
		    {
			    SetColumnValue("ReplaceID", value);
            }
        }
	      
        [XmlAttribute("MeterID")]
        [Bindable(true)]
        public int? MeterID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("MeterID");
		    }
            set 
		    {
			    SetColumnValue("MeterID", value);
            }
        }
	      
        [XmlAttribute("MeterNo")]
        [Bindable(true)]
        public string MeterNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("MeterNo");
		    }
            set 
		    {
			    SetColumnValue("MeterNo", value);
            }
        }
	      
        [XmlAttribute("AccountNo")]
        [Bindable(true)]
        public string AccountNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("AccountNo");
		    }
            set 
		    {
			    SetColumnValue("AccountNo", value);
            }
        }
	      
        [XmlAttribute("MeterIssueDate")]
        [Bindable(true)]
        public DateTime? MeterIssueDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("MeterIssueDate");
		    }
            set 
		    {
			    SetColumnValue("MeterIssueDate", value);
            }
        }
	      
        [XmlAttribute("IssueID")]
        [Bindable(true)]
        public int? IssueID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("IssueID");
		    }
            set 
		    {
			    SetColumnValue("IssueID", value);
            }
        }
	      
        [XmlAttribute("CunsumerID")]
        [Bindable(true)]
        public int? CunsumerID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("CunsumerID");
		    }
            set 
		    {
			    SetColumnValue("CunsumerID", value);
            }
        }
	      
        [XmlAttribute("ConsumerName")]
        [Bindable(true)]
        public string ConsumerName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerName");
		    }
            set 
		    {
			    SetColumnValue("ConsumerName", value);
            }
        }
	      
        [XmlAttribute("CunsumerEmail")]
        [Bindable(true)]
        public string CunsumerEmail 
	    {
		    get
		    {
			    return GetColumnValue<string>("CunsumerEmail");
		    }
            set 
		    {
			    SetColumnValue("CunsumerEmail", value);
            }
        }
	      
        [XmlAttribute("ConsumerResidensePhoneNo")]
        [Bindable(true)]
        public string ConsumerResidensePhoneNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerResidensePhoneNo");
		    }
            set 
		    {
			    SetColumnValue("ConsumerResidensePhoneNo", value);
            }
        }
	      
        [XmlAttribute("CunsumerAddress")]
        [Bindable(true)]
        public string CunsumerAddress 
	    {
		    get
		    {
			    return GetColumnValue<string>("CunsumerAddress");
		    }
            set 
		    {
			    SetColumnValue("CunsumerAddress", value);
            }
        }
	      
        [XmlAttribute("ConsumerMobileNo")]
        [Bindable(true)]
        public string ConsumerMobileNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerMobileNo");
		    }
            set 
		    {
			    SetColumnValue("ConsumerMobileNo", value);
            }
        }
	      
        [XmlAttribute("ConsumerNo")]
        [Bindable(true)]
        public string ConsumerNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerNo");
		    }
            set 
		    {
			    SetColumnValue("ConsumerNo", value);
            }
        }
	      
        [XmlAttribute("ConsumerNIC")]
        [Bindable(true)]
        public string ConsumerNIC 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerNIC");
		    }
            set 
		    {
			    SetColumnValue("ConsumerNIC", value);
            }
        }
	      
        [XmlAttribute("ConsumerCNICExpiryDate")]
        [Bindable(true)]
        public string ConsumerCNICExpiryDate 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerCNICExpiryDate");
		    }
            set 
		    {
			    SetColumnValue("ConsumerCNICExpiryDate", value);
            }
        }
	      
        [XmlAttribute("TariffID")]
        [Bindable(true)]
        public int? TariffID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("TariffID");
		    }
            set 
		    {
			    SetColumnValue("TariffID", value);
            }
        }
	      
        [XmlAttribute("TariffName")]
        [Bindable(true)]
        public string TariffName 
	    {
		    get
		    {
			    return GetColumnValue<string>("TariffName");
		    }
            set 
		    {
			    SetColumnValue("TariffName", value);
            }
        }
	      
        [XmlAttribute("TariffCode")]
        [Bindable(true)]
        public string TariffCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("TariffCode");
		    }
            set 
		    {
			    SetColumnValue("TariffCode", value);
            }
        }
	      
        [XmlAttribute("IsApproved")]
        [Bindable(true)]
        public bool? IsApproved 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("IsApproved");
		    }
            set 
		    {
			    SetColumnValue("IsApproved", value);
            }
        }
	      
        [XmlAttribute("ApprovedBy")]
        [Bindable(true)]
        public int? ApprovedBy 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ApprovedBy");
		    }
            set 
		    {
			    SetColumnValue("ApprovedBy", value);
            }
        }
	      
        [XmlAttribute("ReplacedBy")]
        [Bindable(true)]
        public int? ReplacedBy 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ReplacedBy");
		    }
            set 
		    {
			    SetColumnValue("ReplacedBy", value);
            }
        }
	      
        [XmlAttribute("ApprovedDate")]
        [Bindable(true)]
        public DateTime? ApprovedDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ApprovedDate");
		    }
            set 
		    {
			    SetColumnValue("ApprovedDate", value);
            }
        }
	      
        [XmlAttribute("PreviousMeterID")]
        [Bindable(true)]
        public int? PreviousMeterID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("PreviousMeterID");
		    }
            set 
		    {
			    SetColumnValue("PreviousMeterID", value);
            }
        }
	      
        [XmlAttribute("MeterStatusID")]
        [Bindable(true)]
        public int? MeterStatusID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("MeterStatusID");
		    }
            set 
		    {
			    SetColumnValue("MeterStatusID", value);
            }
        }
	      
        [XmlAttribute("ReplacementDate")]
        [Bindable(true)]
        public DateTime? ReplacementDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ReplacementDate");
		    }
            set 
		    {
			    SetColumnValue("ReplacementDate", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string ReplaceID = @"ReplaceID";
            
            public static string MeterID = @"MeterID";
            
            public static string MeterNo = @"MeterNo";
            
            public static string AccountNo = @"AccountNo";
            
            public static string MeterIssueDate = @"MeterIssueDate";
            
            public static string IssueID = @"IssueID";
            
            public static string CunsumerID = @"CunsumerID";
            
            public static string ConsumerName = @"ConsumerName";
            
            public static string CunsumerEmail = @"CunsumerEmail";
            
            public static string ConsumerResidensePhoneNo = @"ConsumerResidensePhoneNo";
            
            public static string CunsumerAddress = @"CunsumerAddress";
            
            public static string ConsumerMobileNo = @"ConsumerMobileNo";
            
            public static string ConsumerNo = @"ConsumerNo";
            
            public static string ConsumerNIC = @"ConsumerNIC";
            
            public static string ConsumerCNICExpiryDate = @"ConsumerCNICExpiryDate";
            
            public static string TariffID = @"TariffID";
            
            public static string TariffName = @"TariffName";
            
            public static string TariffCode = @"TariffCode";
            
            public static string IsApproved = @"IsApproved";
            
            public static string ApprovedBy = @"ApprovedBy";
            
            public static string ReplacedBy = @"ReplacedBy";
            
            public static string ApprovedDate = @"ApprovedDate";
            
            public static string PreviousMeterID = @"PreviousMeterID";
            
            public static string MeterStatusID = @"MeterStatusID";
            
            public static string ReplacementDate = @"ReplacementDate";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
