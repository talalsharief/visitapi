using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SmartCBSDataAccess{
    /// <summary>
    /// Strongly-typed collection for the VwTblPMTReading class.
    /// </summary>
    [Serializable]
    public partial class VwTblPMTReadingCollection : ReadOnlyList<VwTblPMTReading, VwTblPMTReadingCollection>
    {        
        public VwTblPMTReadingCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the VwTblPMTReadings view.
    /// </summary>
    [Serializable]
    public partial class VwTblPMTReading : ReadOnlyRecord<VwTblPMTReading>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("VwTblPMTReadings", TableType.View, DataService.GetInstance("PrimaryProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarPMTReadingID = new TableSchema.TableColumn(schema);
                colvarPMTReadingID.ColumnName = "PMTReadingID";
                colvarPMTReadingID.DataType = DbType.Int32;
                colvarPMTReadingID.MaxLength = 0;
                colvarPMTReadingID.AutoIncrement = false;
                colvarPMTReadingID.IsNullable = false;
                colvarPMTReadingID.IsPrimaryKey = false;
                colvarPMTReadingID.IsForeignKey = false;
                colvarPMTReadingID.IsReadOnly = false;
                
                schema.Columns.Add(colvarPMTReadingID);
                
                TableSchema.TableColumn colvarPMTReadingMonth = new TableSchema.TableColumn(schema);
                colvarPMTReadingMonth.ColumnName = "PMTReadingMonth";
                colvarPMTReadingMonth.DataType = DbType.AnsiString;
                colvarPMTReadingMonth.MaxLength = 50;
                colvarPMTReadingMonth.AutoIncrement = false;
                colvarPMTReadingMonth.IsNullable = true;
                colvarPMTReadingMonth.IsPrimaryKey = false;
                colvarPMTReadingMonth.IsForeignKey = false;
                colvarPMTReadingMonth.IsReadOnly = false;
                
                schema.Columns.Add(colvarPMTReadingMonth);
                
                TableSchema.TableColumn colvarPMTReadingYear = new TableSchema.TableColumn(schema);
                colvarPMTReadingYear.ColumnName = "PMTReadingYear";
                colvarPMTReadingYear.DataType = DbType.AnsiString;
                colvarPMTReadingYear.MaxLength = 50;
                colvarPMTReadingYear.AutoIncrement = false;
                colvarPMTReadingYear.IsNullable = true;
                colvarPMTReadingYear.IsPrimaryKey = false;
                colvarPMTReadingYear.IsForeignKey = false;
                colvarPMTReadingYear.IsReadOnly = false;
                
                schema.Columns.Add(colvarPMTReadingYear);
                
                TableSchema.TableColumn colvarPreviousReading = new TableSchema.TableColumn(schema);
                colvarPreviousReading.ColumnName = "PreviousReading";
                colvarPreviousReading.DataType = DbType.Decimal;
                colvarPreviousReading.MaxLength = 0;
                colvarPreviousReading.AutoIncrement = false;
                colvarPreviousReading.IsNullable = true;
                colvarPreviousReading.IsPrimaryKey = false;
                colvarPreviousReading.IsForeignKey = false;
                colvarPreviousReading.IsReadOnly = false;
                
                schema.Columns.Add(colvarPreviousReading);
                
                TableSchema.TableColumn colvarCurrentReading = new TableSchema.TableColumn(schema);
                colvarCurrentReading.ColumnName = "CurrentReading";
                colvarCurrentReading.DataType = DbType.Decimal;
                colvarCurrentReading.MaxLength = 0;
                colvarCurrentReading.AutoIncrement = false;
                colvarCurrentReading.IsNullable = true;
                colvarCurrentReading.IsPrimaryKey = false;
                colvarCurrentReading.IsForeignKey = false;
                colvarCurrentReading.IsReadOnly = false;
                
                schema.Columns.Add(colvarCurrentReading);
                
                TableSchema.TableColumn colvarTotalUnits = new TableSchema.TableColumn(schema);
                colvarTotalUnits.ColumnName = "TotalUnits";
                colvarTotalUnits.DataType = DbType.Decimal;
                colvarTotalUnits.MaxLength = 0;
                colvarTotalUnits.AutoIncrement = false;
                colvarTotalUnits.IsNullable = true;
                colvarTotalUnits.IsPrimaryKey = false;
                colvarTotalUnits.IsForeignKey = false;
                colvarTotalUnits.IsReadOnly = false;
                
                schema.Columns.Add(colvarTotalUnits);
                
                TableSchema.TableColumn colvarMultiplyingFactor = new TableSchema.TableColumn(schema);
                colvarMultiplyingFactor.ColumnName = "MultiplyingFactor";
                colvarMultiplyingFactor.DataType = DbType.Decimal;
                colvarMultiplyingFactor.MaxLength = 0;
                colvarMultiplyingFactor.AutoIncrement = false;
                colvarMultiplyingFactor.IsNullable = true;
                colvarMultiplyingFactor.IsPrimaryKey = false;
                colvarMultiplyingFactor.IsForeignKey = false;
                colvarMultiplyingFactor.IsReadOnly = false;
                
                schema.Columns.Add(colvarMultiplyingFactor);
                
                TableSchema.TableColumn colvarUnitsConsumed = new TableSchema.TableColumn(schema);
                colvarUnitsConsumed.ColumnName = "UnitsConsumed";
                colvarUnitsConsumed.DataType = DbType.Decimal;
                colvarUnitsConsumed.MaxLength = 0;
                colvarUnitsConsumed.AutoIncrement = false;
                colvarUnitsConsumed.IsNullable = true;
                colvarUnitsConsumed.IsPrimaryKey = false;
                colvarUnitsConsumed.IsForeignKey = false;
                colvarUnitsConsumed.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitsConsumed);
                
                TableSchema.TableColumn colvarPMTReadingDate = new TableSchema.TableColumn(schema);
                colvarPMTReadingDate.ColumnName = "PMTReadingDate";
                colvarPMTReadingDate.DataType = DbType.DateTime;
                colvarPMTReadingDate.MaxLength = 0;
                colvarPMTReadingDate.AutoIncrement = false;
                colvarPMTReadingDate.IsNullable = true;
                colvarPMTReadingDate.IsPrimaryKey = false;
                colvarPMTReadingDate.IsForeignKey = false;
                colvarPMTReadingDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarPMTReadingDate);
                
                TableSchema.TableColumn colvarPMTImage = new TableSchema.TableColumn(schema);
                colvarPMTImage.ColumnName = "PMTImage";
                colvarPMTImage.DataType = DbType.AnsiString;
                colvarPMTImage.MaxLength = 200;
                colvarPMTImage.AutoIncrement = false;
                colvarPMTImage.IsNullable = true;
                colvarPMTImage.IsPrimaryKey = false;
                colvarPMTImage.IsForeignKey = false;
                colvarPMTImage.IsReadOnly = false;
                
                schema.Columns.Add(colvarPMTImage);
                
                TableSchema.TableColumn colvarBranchID = new TableSchema.TableColumn(schema);
                colvarBranchID.ColumnName = "BranchID";
                colvarBranchID.DataType = DbType.Int32;
                colvarBranchID.MaxLength = 0;
                colvarBranchID.AutoIncrement = false;
                colvarBranchID.IsNullable = false;
                colvarBranchID.IsPrimaryKey = false;
                colvarBranchID.IsForeignKey = false;
                colvarBranchID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchID);
                
                TableSchema.TableColumn colvarBranchCode = new TableSchema.TableColumn(schema);
                colvarBranchCode.ColumnName = "BranchCode";
                colvarBranchCode.DataType = DbType.AnsiString;
                colvarBranchCode.MaxLength = 50;
                colvarBranchCode.AutoIncrement = false;
                colvarBranchCode.IsNullable = true;
                colvarBranchCode.IsPrimaryKey = false;
                colvarBranchCode.IsForeignKey = false;
                colvarBranchCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchCode);
                
                TableSchema.TableColumn colvarBranchName = new TableSchema.TableColumn(schema);
                colvarBranchName.ColumnName = "BranchName";
                colvarBranchName.DataType = DbType.AnsiString;
                colvarBranchName.MaxLength = 150;
                colvarBranchName.AutoIncrement = false;
                colvarBranchName.IsNullable = true;
                colvarBranchName.IsPrimaryKey = false;
                colvarBranchName.IsForeignKey = false;
                colvarBranchName.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchName);
                
                TableSchema.TableColumn colvarPmtid = new TableSchema.TableColumn(schema);
                colvarPmtid.ColumnName = "PMTID";
                colvarPmtid.DataType = DbType.Int32;
                colvarPmtid.MaxLength = 0;
                colvarPmtid.AutoIncrement = false;
                colvarPmtid.IsNullable = true;
                colvarPmtid.IsPrimaryKey = false;
                colvarPmtid.IsForeignKey = false;
                colvarPmtid.IsReadOnly = false;
                
                schema.Columns.Add(colvarPmtid);
                
                TableSchema.TableColumn colvarPMTNo = new TableSchema.TableColumn(schema);
                colvarPMTNo.ColumnName = "PMTNo";
                colvarPMTNo.DataType = DbType.AnsiString;
                colvarPMTNo.MaxLength = 50;
                colvarPMTNo.AutoIncrement = false;
                colvarPMTNo.IsNullable = true;
                colvarPMTNo.IsPrimaryKey = false;
                colvarPMTNo.IsForeignKey = false;
                colvarPMTNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarPMTNo);
                
                TableSchema.TableColumn colvarPMTCode = new TableSchema.TableColumn(schema);
                colvarPMTCode.ColumnName = "PMTCode";
                colvarPMTCode.DataType = DbType.AnsiString;
                colvarPMTCode.MaxLength = 50;
                colvarPMTCode.AutoIncrement = false;
                colvarPMTCode.IsNullable = true;
                colvarPMTCode.IsPrimaryKey = false;
                colvarPMTCode.IsForeignKey = false;
                colvarPMTCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPMTCode);
                
                TableSchema.TableColumn colvarPMTStatusID = new TableSchema.TableColumn(schema);
                colvarPMTStatusID.ColumnName = "PMTStatusID";
                colvarPMTStatusID.DataType = DbType.Int32;
                colvarPMTStatusID.MaxLength = 0;
                colvarPMTStatusID.AutoIncrement = false;
                colvarPMTStatusID.IsNullable = true;
                colvarPMTStatusID.IsPrimaryKey = false;
                colvarPMTStatusID.IsForeignKey = false;
                colvarPMTStatusID.IsReadOnly = false;
                
                schema.Columns.Add(colvarPMTStatusID);
                
                TableSchema.TableColumn colvarPMTStatusName = new TableSchema.TableColumn(schema);
                colvarPMTStatusName.ColumnName = "PMTStatusName";
                colvarPMTStatusName.DataType = DbType.AnsiString;
                colvarPMTStatusName.MaxLength = 50;
                colvarPMTStatusName.AutoIncrement = false;
                colvarPMTStatusName.IsNullable = true;
                colvarPMTStatusName.IsPrimaryKey = false;
                colvarPMTStatusName.IsForeignKey = false;
                colvarPMTStatusName.IsReadOnly = false;
                
                schema.Columns.Add(colvarPMTStatusName);
                
                TableSchema.TableColumn colvarPMTReadID = new TableSchema.TableColumn(schema);
                colvarPMTReadID.ColumnName = "PMTReadID";
                colvarPMTReadID.DataType = DbType.Int32;
                colvarPMTReadID.MaxLength = 0;
                colvarPMTReadID.AutoIncrement = false;
                colvarPMTReadID.IsNullable = false;
                colvarPMTReadID.IsPrimaryKey = false;
                colvarPMTReadID.IsForeignKey = false;
                colvarPMTReadID.IsReadOnly = false;
                
                schema.Columns.Add(colvarPMTReadID);
                
                TableSchema.TableColumn colvarPMTReadModeName = new TableSchema.TableColumn(schema);
                colvarPMTReadModeName.ColumnName = "PMTReadModeName";
                colvarPMTReadModeName.DataType = DbType.AnsiString;
                colvarPMTReadModeName.MaxLength = 50;
                colvarPMTReadModeName.AutoIncrement = false;
                colvarPMTReadModeName.IsNullable = true;
                colvarPMTReadModeName.IsPrimaryKey = false;
                colvarPMTReadModeName.IsForeignKey = false;
                colvarPMTReadModeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarPMTReadModeName);
                
                TableSchema.TableColumn colvarPMTReadCode = new TableSchema.TableColumn(schema);
                colvarPMTReadCode.ColumnName = "PMTReadCode";
                colvarPMTReadCode.DataType = DbType.AnsiString;
                colvarPMTReadCode.MaxLength = 50;
                colvarPMTReadCode.AutoIncrement = false;
                colvarPMTReadCode.IsNullable = true;
                colvarPMTReadCode.IsPrimaryKey = false;
                colvarPMTReadCode.IsForeignKey = false;
                colvarPMTReadCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarPMTReadCode);
                
                TableSchema.TableColumn colvarEmployeeID = new TableSchema.TableColumn(schema);
                colvarEmployeeID.ColumnName = "EmployeeID";
                colvarEmployeeID.DataType = DbType.Int32;
                colvarEmployeeID.MaxLength = 0;
                colvarEmployeeID.AutoIncrement = false;
                colvarEmployeeID.IsNullable = false;
                colvarEmployeeID.IsPrimaryKey = false;
                colvarEmployeeID.IsForeignKey = false;
                colvarEmployeeID.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmployeeID);
                
                TableSchema.TableColumn colvarEmployeeCode = new TableSchema.TableColumn(schema);
                colvarEmployeeCode.ColumnName = "EmployeeCode";
                colvarEmployeeCode.DataType = DbType.AnsiString;
                colvarEmployeeCode.MaxLength = 20;
                colvarEmployeeCode.AutoIncrement = false;
                colvarEmployeeCode.IsNullable = true;
                colvarEmployeeCode.IsPrimaryKey = false;
                colvarEmployeeCode.IsForeignKey = false;
                colvarEmployeeCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmployeeCode);
                
                TableSchema.TableColumn colvarEmployeeName = new TableSchema.TableColumn(schema);
                colvarEmployeeName.ColumnName = "EmployeeName";
                colvarEmployeeName.DataType = DbType.AnsiString;
                colvarEmployeeName.MaxLength = 100;
                colvarEmployeeName.AutoIncrement = false;
                colvarEmployeeName.IsNullable = true;
                colvarEmployeeName.IsPrimaryKey = false;
                colvarEmployeeName.IsForeignKey = false;
                colvarEmployeeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmployeeName);
                
                TableSchema.TableColumn colvarEmailAddress = new TableSchema.TableColumn(schema);
                colvarEmailAddress.ColumnName = "EmailAddress";
                colvarEmailAddress.DataType = DbType.AnsiString;
                colvarEmailAddress.MaxLength = 50;
                colvarEmailAddress.AutoIncrement = false;
                colvarEmailAddress.IsNullable = true;
                colvarEmailAddress.IsPrimaryKey = false;
                colvarEmailAddress.IsForeignKey = false;
                colvarEmailAddress.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmailAddress);
                
                TableSchema.TableColumn colvarMobileNo = new TableSchema.TableColumn(schema);
                colvarMobileNo.ColumnName = "MobileNo";
                colvarMobileNo.DataType = DbType.AnsiString;
                colvarMobileNo.MaxLength = 50;
                colvarMobileNo.AutoIncrement = false;
                colvarMobileNo.IsNullable = true;
                colvarMobileNo.IsPrimaryKey = false;
                colvarMobileNo.IsForeignKey = false;
                colvarMobileNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarMobileNo);
                
                TableSchema.TableColumn colvarPhoneNo = new TableSchema.TableColumn(schema);
                colvarPhoneNo.ColumnName = "PhoneNo";
                colvarPhoneNo.DataType = DbType.AnsiString;
                colvarPhoneNo.MaxLength = 50;
                colvarPhoneNo.AutoIncrement = false;
                colvarPhoneNo.IsNullable = true;
                colvarPhoneNo.IsPrimaryKey = false;
                colvarPhoneNo.IsForeignKey = false;
                colvarPhoneNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarPhoneNo);
                
                TableSchema.TableColumn colvarAddress = new TableSchema.TableColumn(schema);
                colvarAddress.ColumnName = "Address";
                colvarAddress.DataType = DbType.AnsiString;
                colvarAddress.MaxLength = 250;
                colvarAddress.AutoIncrement = false;
                colvarAddress.IsNullable = true;
                colvarAddress.IsPrimaryKey = false;
                colvarAddress.IsForeignKey = false;
                colvarAddress.IsReadOnly = false;
                
                schema.Columns.Add(colvarAddress);
                
                TableSchema.TableColumn colvarNic = new TableSchema.TableColumn(schema);
                colvarNic.ColumnName = "NIC";
                colvarNic.DataType = DbType.AnsiString;
                colvarNic.MaxLength = 50;
                colvarNic.AutoIncrement = false;
                colvarNic.IsNullable = true;
                colvarNic.IsPrimaryKey = false;
                colvarNic.IsForeignKey = false;
                colvarNic.IsReadOnly = false;
                
                schema.Columns.Add(colvarNic);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["PrimaryProvider"].AddSchema("VwTblPMTReadings",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VwTblPMTReading()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VwTblPMTReading(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VwTblPMTReading(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VwTblPMTReading(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("PMTReadingID")]
        [Bindable(true)]
        public int PMTReadingID 
	    {
		    get
		    {
			    return GetColumnValue<int>("PMTReadingID");
		    }
            set 
		    {
			    SetColumnValue("PMTReadingID", value);
            }
        }
	      
        [XmlAttribute("PMTReadingMonth")]
        [Bindable(true)]
        public string PMTReadingMonth 
	    {
		    get
		    {
			    return GetColumnValue<string>("PMTReadingMonth");
		    }
            set 
		    {
			    SetColumnValue("PMTReadingMonth", value);
            }
        }
	      
        [XmlAttribute("PMTReadingYear")]
        [Bindable(true)]
        public string PMTReadingYear 
	    {
		    get
		    {
			    return GetColumnValue<string>("PMTReadingYear");
		    }
            set 
		    {
			    SetColumnValue("PMTReadingYear", value);
            }
        }
	      
        [XmlAttribute("PreviousReading")]
        [Bindable(true)]
        public decimal? PreviousReading 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("PreviousReading");
		    }
            set 
		    {
			    SetColumnValue("PreviousReading", value);
            }
        }
	      
        [XmlAttribute("CurrentReading")]
        [Bindable(true)]
        public decimal? CurrentReading 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("CurrentReading");
		    }
            set 
		    {
			    SetColumnValue("CurrentReading", value);
            }
        }
	      
        [XmlAttribute("TotalUnits")]
        [Bindable(true)]
        public decimal? TotalUnits 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("TotalUnits");
		    }
            set 
		    {
			    SetColumnValue("TotalUnits", value);
            }
        }
	      
        [XmlAttribute("MultiplyingFactor")]
        [Bindable(true)]
        public decimal? MultiplyingFactor 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("MultiplyingFactor");
		    }
            set 
		    {
			    SetColumnValue("MultiplyingFactor", value);
            }
        }
	      
        [XmlAttribute("UnitsConsumed")]
        [Bindable(true)]
        public decimal? UnitsConsumed 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("UnitsConsumed");
		    }
            set 
		    {
			    SetColumnValue("UnitsConsumed", value);
            }
        }
	      
        [XmlAttribute("PMTReadingDate")]
        [Bindable(true)]
        public DateTime? PMTReadingDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("PMTReadingDate");
		    }
            set 
		    {
			    SetColumnValue("PMTReadingDate", value);
            }
        }
	      
        [XmlAttribute("PMTImage")]
        [Bindable(true)]
        public string PMTImage 
	    {
		    get
		    {
			    return GetColumnValue<string>("PMTImage");
		    }
            set 
		    {
			    SetColumnValue("PMTImage", value);
            }
        }
	      
        [XmlAttribute("BranchID")]
        [Bindable(true)]
        public int BranchID 
	    {
		    get
		    {
			    return GetColumnValue<int>("BranchID");
		    }
            set 
		    {
			    SetColumnValue("BranchID", value);
            }
        }
	      
        [XmlAttribute("BranchCode")]
        [Bindable(true)]
        public string BranchCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("BranchCode");
		    }
            set 
		    {
			    SetColumnValue("BranchCode", value);
            }
        }
	      
        [XmlAttribute("BranchName")]
        [Bindable(true)]
        public string BranchName 
	    {
		    get
		    {
			    return GetColumnValue<string>("BranchName");
		    }
            set 
		    {
			    SetColumnValue("BranchName", value);
            }
        }
	      
        [XmlAttribute("Pmtid")]
        [Bindable(true)]
        public int? Pmtid 
	    {
		    get
		    {
			    return GetColumnValue<int?>("PMTID");
		    }
            set 
		    {
			    SetColumnValue("PMTID", value);
            }
        }
	      
        [XmlAttribute("PMTNo")]
        [Bindable(true)]
        public string PMTNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("PMTNo");
		    }
            set 
		    {
			    SetColumnValue("PMTNo", value);
            }
        }
	      
        [XmlAttribute("PMTCode")]
        [Bindable(true)]
        public string PMTCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("PMTCode");
		    }
            set 
		    {
			    SetColumnValue("PMTCode", value);
            }
        }
	      
        [XmlAttribute("PMTStatusID")]
        [Bindable(true)]
        public int? PMTStatusID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("PMTStatusID");
		    }
            set 
		    {
			    SetColumnValue("PMTStatusID", value);
            }
        }
	      
        [XmlAttribute("PMTStatusName")]
        [Bindable(true)]
        public string PMTStatusName 
	    {
		    get
		    {
			    return GetColumnValue<string>("PMTStatusName");
		    }
            set 
		    {
			    SetColumnValue("PMTStatusName", value);
            }
        }
	      
        [XmlAttribute("PMTReadID")]
        [Bindable(true)]
        public int PMTReadID 
	    {
		    get
		    {
			    return GetColumnValue<int>("PMTReadID");
		    }
            set 
		    {
			    SetColumnValue("PMTReadID", value);
            }
        }
	      
        [XmlAttribute("PMTReadModeName")]
        [Bindable(true)]
        public string PMTReadModeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("PMTReadModeName");
		    }
            set 
		    {
			    SetColumnValue("PMTReadModeName", value);
            }
        }
	      
        [XmlAttribute("PMTReadCode")]
        [Bindable(true)]
        public string PMTReadCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("PMTReadCode");
		    }
            set 
		    {
			    SetColumnValue("PMTReadCode", value);
            }
        }
	      
        [XmlAttribute("EmployeeID")]
        [Bindable(true)]
        public int EmployeeID 
	    {
		    get
		    {
			    return GetColumnValue<int>("EmployeeID");
		    }
            set 
		    {
			    SetColumnValue("EmployeeID", value);
            }
        }
	      
        [XmlAttribute("EmployeeCode")]
        [Bindable(true)]
        public string EmployeeCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("EmployeeCode");
		    }
            set 
		    {
			    SetColumnValue("EmployeeCode", value);
            }
        }
	      
        [XmlAttribute("EmployeeName")]
        [Bindable(true)]
        public string EmployeeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("EmployeeName");
		    }
            set 
		    {
			    SetColumnValue("EmployeeName", value);
            }
        }
	      
        [XmlAttribute("EmailAddress")]
        [Bindable(true)]
        public string EmailAddress 
	    {
		    get
		    {
			    return GetColumnValue<string>("EmailAddress");
		    }
            set 
		    {
			    SetColumnValue("EmailAddress", value);
            }
        }
	      
        [XmlAttribute("MobileNo")]
        [Bindable(true)]
        public string MobileNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("MobileNo");
		    }
            set 
		    {
			    SetColumnValue("MobileNo", value);
            }
        }
	      
        [XmlAttribute("PhoneNo")]
        [Bindable(true)]
        public string PhoneNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("PhoneNo");
		    }
            set 
		    {
			    SetColumnValue("PhoneNo", value);
            }
        }
	      
        [XmlAttribute("Address")]
        [Bindable(true)]
        public string Address 
	    {
		    get
		    {
			    return GetColumnValue<string>("Address");
		    }
            set 
		    {
			    SetColumnValue("Address", value);
            }
        }
	      
        [XmlAttribute("Nic")]
        [Bindable(true)]
        public string Nic 
	    {
		    get
		    {
			    return GetColumnValue<string>("NIC");
		    }
            set 
		    {
			    SetColumnValue("NIC", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string PMTReadingID = @"PMTReadingID";
            
            public static string PMTReadingMonth = @"PMTReadingMonth";
            
            public static string PMTReadingYear = @"PMTReadingYear";
            
            public static string PreviousReading = @"PreviousReading";
            
            public static string CurrentReading = @"CurrentReading";
            
            public static string TotalUnits = @"TotalUnits";
            
            public static string MultiplyingFactor = @"MultiplyingFactor";
            
            public static string UnitsConsumed = @"UnitsConsumed";
            
            public static string PMTReadingDate = @"PMTReadingDate";
            
            public static string PMTImage = @"PMTImage";
            
            public static string BranchID = @"BranchID";
            
            public static string BranchCode = @"BranchCode";
            
            public static string BranchName = @"BranchName";
            
            public static string Pmtid = @"PMTID";
            
            public static string PMTNo = @"PMTNo";
            
            public static string PMTCode = @"PMTCode";
            
            public static string PMTStatusID = @"PMTStatusID";
            
            public static string PMTStatusName = @"PMTStatusName";
            
            public static string PMTReadID = @"PMTReadID";
            
            public static string PMTReadModeName = @"PMTReadModeName";
            
            public static string PMTReadCode = @"PMTReadCode";
            
            public static string EmployeeID = @"EmployeeID";
            
            public static string EmployeeCode = @"EmployeeCode";
            
            public static string EmployeeName = @"EmployeeName";
            
            public static string EmailAddress = @"EmailAddress";
            
            public static string MobileNo = @"MobileNo";
            
            public static string PhoneNo = @"PhoneNo";
            
            public static string Address = @"Address";
            
            public static string Nic = @"NIC";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
