using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SmartCBSDataAccess{
    /// <summary>
    /// Strongly-typed collection for the VwTblMeterReading class.
    /// </summary>
    [Serializable]
    public partial class VwTblMeterReadingCollection : ReadOnlyList<VwTblMeterReading, VwTblMeterReadingCollection>
    {        
        public VwTblMeterReadingCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the VwTblMeterReading view.
    /// </summary>
    [Serializable]
    public partial class VwTblMeterReading : ReadOnlyRecord<VwTblMeterReading>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("VwTblMeterReading", TableType.View, DataService.GetInstance("PrimaryProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarMeterReadingID = new TableSchema.TableColumn(schema);
                colvarMeterReadingID.ColumnName = "MeterReadingID";
                colvarMeterReadingID.DataType = DbType.Int32;
                colvarMeterReadingID.MaxLength = 0;
                colvarMeterReadingID.AutoIncrement = false;
                colvarMeterReadingID.IsNullable = false;
                colvarMeterReadingID.IsPrimaryKey = false;
                colvarMeterReadingID.IsForeignKey = false;
                colvarMeterReadingID.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterReadingID);
                
                TableSchema.TableColumn colvarMeterReadingMonth = new TableSchema.TableColumn(schema);
                colvarMeterReadingMonth.ColumnName = "MeterReadingMonth";
                colvarMeterReadingMonth.DataType = DbType.AnsiString;
                colvarMeterReadingMonth.MaxLength = 50;
                colvarMeterReadingMonth.AutoIncrement = false;
                colvarMeterReadingMonth.IsNullable = true;
                colvarMeterReadingMonth.IsPrimaryKey = false;
                colvarMeterReadingMonth.IsForeignKey = false;
                colvarMeterReadingMonth.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterReadingMonth);
                
                TableSchema.TableColumn colvarMeterReadingYear = new TableSchema.TableColumn(schema);
                colvarMeterReadingYear.ColumnName = "MeterReadingYear";
                colvarMeterReadingYear.DataType = DbType.AnsiString;
                colvarMeterReadingYear.MaxLength = 50;
                colvarMeterReadingYear.AutoIncrement = false;
                colvarMeterReadingYear.IsNullable = true;
                colvarMeterReadingYear.IsPrimaryKey = false;
                colvarMeterReadingYear.IsForeignKey = false;
                colvarMeterReadingYear.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterReadingYear);
                
                TableSchema.TableColumn colvarCurrentReading = new TableSchema.TableColumn(schema);
                colvarCurrentReading.ColumnName = "CurrentReading";
                colvarCurrentReading.DataType = DbType.Decimal;
                colvarCurrentReading.MaxLength = 0;
                colvarCurrentReading.AutoIncrement = false;
                colvarCurrentReading.IsNullable = true;
                colvarCurrentReading.IsPrimaryKey = false;
                colvarCurrentReading.IsForeignKey = false;
                colvarCurrentReading.IsReadOnly = false;
                
                schema.Columns.Add(colvarCurrentReading);
                
                TableSchema.TableColumn colvarPreviousReading = new TableSchema.TableColumn(schema);
                colvarPreviousReading.ColumnName = "PreviousReading";
                colvarPreviousReading.DataType = DbType.Decimal;
                colvarPreviousReading.MaxLength = 0;
                colvarPreviousReading.AutoIncrement = false;
                colvarPreviousReading.IsNullable = true;
                colvarPreviousReading.IsPrimaryKey = false;
                colvarPreviousReading.IsForeignKey = false;
                colvarPreviousReading.IsReadOnly = false;
                
                schema.Columns.Add(colvarPreviousReading);
                
                TableSchema.TableColumn colvarMeterReadBy = new TableSchema.TableColumn(schema);
                colvarMeterReadBy.ColumnName = "MeterReadBy";
                colvarMeterReadBy.DataType = DbType.Int32;
                colvarMeterReadBy.MaxLength = 0;
                colvarMeterReadBy.AutoIncrement = false;
                colvarMeterReadBy.IsNullable = true;
                colvarMeterReadBy.IsPrimaryKey = false;
                colvarMeterReadBy.IsForeignKey = false;
                colvarMeterReadBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterReadBy);
                
                TableSchema.TableColumn colvarULCreatedBy = new TableSchema.TableColumn(schema);
                colvarULCreatedBy.ColumnName = "ULCreatedBy";
                colvarULCreatedBy.DataType = DbType.Int32;
                colvarULCreatedBy.MaxLength = 0;
                colvarULCreatedBy.AutoIncrement = false;
                colvarULCreatedBy.IsNullable = true;
                colvarULCreatedBy.IsPrimaryKey = false;
                colvarULCreatedBy.IsForeignKey = false;
                colvarULCreatedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarULCreatedBy);
                
                TableSchema.TableColumn colvarULUpdatedBy = new TableSchema.TableColumn(schema);
                colvarULUpdatedBy.ColumnName = "ULUpdatedBy";
                colvarULUpdatedBy.DataType = DbType.Int32;
                colvarULUpdatedBy.MaxLength = 0;
                colvarULUpdatedBy.AutoIncrement = false;
                colvarULUpdatedBy.IsNullable = true;
                colvarULUpdatedBy.IsPrimaryKey = false;
                colvarULUpdatedBy.IsForeignKey = false;
                colvarULUpdatedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarULUpdatedBy);
                
                TableSchema.TableColumn colvarCreatedOn = new TableSchema.TableColumn(schema);
                colvarCreatedOn.ColumnName = "CreatedOn";
                colvarCreatedOn.DataType = DbType.DateTime;
                colvarCreatedOn.MaxLength = 0;
                colvarCreatedOn.AutoIncrement = false;
                colvarCreatedOn.IsNullable = true;
                colvarCreatedOn.IsPrimaryKey = false;
                colvarCreatedOn.IsForeignKey = false;
                colvarCreatedOn.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreatedOn);
                
                TableSchema.TableColumn colvarModifiedOn = new TableSchema.TableColumn(schema);
                colvarModifiedOn.ColumnName = "ModifiedOn";
                colvarModifiedOn.DataType = DbType.DateTime;
                colvarModifiedOn.MaxLength = 0;
                colvarModifiedOn.AutoIncrement = false;
                colvarModifiedOn.IsNullable = true;
                colvarModifiedOn.IsPrimaryKey = false;
                colvarModifiedOn.IsForeignKey = false;
                colvarModifiedOn.IsReadOnly = false;
                
                schema.Columns.Add(colvarModifiedOn);
                
                TableSchema.TableColumn colvarMeterID = new TableSchema.TableColumn(schema);
                colvarMeterID.ColumnName = "MeterID";
                colvarMeterID.DataType = DbType.Int32;
                colvarMeterID.MaxLength = 0;
                colvarMeterID.AutoIncrement = false;
                colvarMeterID.IsNullable = true;
                colvarMeterID.IsPrimaryKey = false;
                colvarMeterID.IsForeignKey = false;
                colvarMeterID.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterID);
                
                TableSchema.TableColumn colvarMeterNo = new TableSchema.TableColumn(schema);
                colvarMeterNo.ColumnName = "MeterNo";
                colvarMeterNo.DataType = DbType.AnsiString;
                colvarMeterNo.MaxLength = -1;
                colvarMeterNo.AutoIncrement = false;
                colvarMeterNo.IsNullable = true;
                colvarMeterNo.IsPrimaryKey = false;
                colvarMeterNo.IsForeignKey = false;
                colvarMeterNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterNo);
                
                TableSchema.TableColumn colvarAccountNo = new TableSchema.TableColumn(schema);
                colvarAccountNo.ColumnName = "AccountNo";
                colvarAccountNo.DataType = DbType.AnsiString;
                colvarAccountNo.MaxLength = -1;
                colvarAccountNo.AutoIncrement = false;
                colvarAccountNo.IsNullable = true;
                colvarAccountNo.IsPrimaryKey = false;
                colvarAccountNo.IsForeignKey = false;
                colvarAccountNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarAccountNo);
                
                TableSchema.TableColumn colvarMeterReadModeID = new TableSchema.TableColumn(schema);
                colvarMeterReadModeID.ColumnName = "MeterReadModeID";
                colvarMeterReadModeID.DataType = DbType.Int32;
                colvarMeterReadModeID.MaxLength = 0;
                colvarMeterReadModeID.AutoIncrement = false;
                colvarMeterReadModeID.IsNullable = false;
                colvarMeterReadModeID.IsPrimaryKey = false;
                colvarMeterReadModeID.IsForeignKey = false;
                colvarMeterReadModeID.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterReadModeID);
                
                TableSchema.TableColumn colvarMeterReadModeName = new TableSchema.TableColumn(schema);
                colvarMeterReadModeName.ColumnName = "MeterReadModeName";
                colvarMeterReadModeName.DataType = DbType.AnsiString;
                colvarMeterReadModeName.MaxLength = 50;
                colvarMeterReadModeName.AutoIncrement = false;
                colvarMeterReadModeName.IsNullable = true;
                colvarMeterReadModeName.IsPrimaryKey = false;
                colvarMeterReadModeName.IsForeignKey = false;
                colvarMeterReadModeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterReadModeName);
                
                TableSchema.TableColumn colvarMeterReadCode = new TableSchema.TableColumn(schema);
                colvarMeterReadCode.ColumnName = "MeterReadCode";
                colvarMeterReadCode.DataType = DbType.AnsiString;
                colvarMeterReadCode.MaxLength = 50;
                colvarMeterReadCode.AutoIncrement = false;
                colvarMeterReadCode.IsNullable = true;
                colvarMeterReadCode.IsPrimaryKey = false;
                colvarMeterReadCode.IsForeignKey = false;
                colvarMeterReadCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterReadCode);
                
                TableSchema.TableColumn colvarEmployeeID = new TableSchema.TableColumn(schema);
                colvarEmployeeID.ColumnName = "EmployeeID";
                colvarEmployeeID.DataType = DbType.Int32;
                colvarEmployeeID.MaxLength = 0;
                colvarEmployeeID.AutoIncrement = false;
                colvarEmployeeID.IsNullable = false;
                colvarEmployeeID.IsPrimaryKey = false;
                colvarEmployeeID.IsForeignKey = false;
                colvarEmployeeID.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmployeeID);
                
                TableSchema.TableColumn colvarEmployeeCode = new TableSchema.TableColumn(schema);
                colvarEmployeeCode.ColumnName = "EmployeeCode";
                colvarEmployeeCode.DataType = DbType.AnsiString;
                colvarEmployeeCode.MaxLength = 20;
                colvarEmployeeCode.AutoIncrement = false;
                colvarEmployeeCode.IsNullable = true;
                colvarEmployeeCode.IsPrimaryKey = false;
                colvarEmployeeCode.IsForeignKey = false;
                colvarEmployeeCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmployeeCode);
                
                TableSchema.TableColumn colvarEmployeeName = new TableSchema.TableColumn(schema);
                colvarEmployeeName.ColumnName = "EmployeeName";
                colvarEmployeeName.DataType = DbType.AnsiString;
                colvarEmployeeName.MaxLength = 100;
                colvarEmployeeName.AutoIncrement = false;
                colvarEmployeeName.IsNullable = true;
                colvarEmployeeName.IsPrimaryKey = false;
                colvarEmployeeName.IsForeignKey = false;
                colvarEmployeeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmployeeName);
                
                TableSchema.TableColumn colvarEmailAddress = new TableSchema.TableColumn(schema);
                colvarEmailAddress.ColumnName = "EmailAddress";
                colvarEmailAddress.DataType = DbType.AnsiString;
                colvarEmailAddress.MaxLength = 50;
                colvarEmailAddress.AutoIncrement = false;
                colvarEmailAddress.IsNullable = true;
                colvarEmailAddress.IsPrimaryKey = false;
                colvarEmailAddress.IsForeignKey = false;
                colvarEmailAddress.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmailAddress);
                
                TableSchema.TableColumn colvarMobileNo = new TableSchema.TableColumn(schema);
                colvarMobileNo.ColumnName = "MobileNo";
                colvarMobileNo.DataType = DbType.AnsiString;
                colvarMobileNo.MaxLength = 50;
                colvarMobileNo.AutoIncrement = false;
                colvarMobileNo.IsNullable = true;
                colvarMobileNo.IsPrimaryKey = false;
                colvarMobileNo.IsForeignKey = false;
                colvarMobileNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarMobileNo);
                
                TableSchema.TableColumn colvarPhoneNo = new TableSchema.TableColumn(schema);
                colvarPhoneNo.ColumnName = "PhoneNo";
                colvarPhoneNo.DataType = DbType.AnsiString;
                colvarPhoneNo.MaxLength = 50;
                colvarPhoneNo.AutoIncrement = false;
                colvarPhoneNo.IsNullable = true;
                colvarPhoneNo.IsPrimaryKey = false;
                colvarPhoneNo.IsForeignKey = false;
                colvarPhoneNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarPhoneNo);
                
                TableSchema.TableColumn colvarAddress = new TableSchema.TableColumn(schema);
                colvarAddress.ColumnName = "Address";
                colvarAddress.DataType = DbType.AnsiString;
                colvarAddress.MaxLength = 250;
                colvarAddress.AutoIncrement = false;
                colvarAddress.IsNullable = true;
                colvarAddress.IsPrimaryKey = false;
                colvarAddress.IsForeignKey = false;
                colvarAddress.IsReadOnly = false;
                
                schema.Columns.Add(colvarAddress);
                
                TableSchema.TableColumn colvarNic = new TableSchema.TableColumn(schema);
                colvarNic.ColumnName = "NIC";
                colvarNic.DataType = DbType.AnsiString;
                colvarNic.MaxLength = 50;
                colvarNic.AutoIncrement = false;
                colvarNic.IsNullable = true;
                colvarNic.IsPrimaryKey = false;
                colvarNic.IsForeignKey = false;
                colvarNic.IsReadOnly = false;
                
                schema.Columns.Add(colvarNic);
                
                TableSchema.TableColumn colvarCunsumerID = new TableSchema.TableColumn(schema);
                colvarCunsumerID.ColumnName = "CunsumerID";
                colvarCunsumerID.DataType = DbType.Int32;
                colvarCunsumerID.MaxLength = 0;
                colvarCunsumerID.AutoIncrement = false;
                colvarCunsumerID.IsNullable = true;
                colvarCunsumerID.IsPrimaryKey = false;
                colvarCunsumerID.IsForeignKey = false;
                colvarCunsumerID.IsReadOnly = false;
                
                schema.Columns.Add(colvarCunsumerID);
                
                TableSchema.TableColumn colvarConsumerName = new TableSchema.TableColumn(schema);
                colvarConsumerName.ColumnName = "ConsumerName";
                colvarConsumerName.DataType = DbType.AnsiString;
                colvarConsumerName.MaxLength = 50;
                colvarConsumerName.AutoIncrement = false;
                colvarConsumerName.IsNullable = true;
                colvarConsumerName.IsPrimaryKey = false;
                colvarConsumerName.IsForeignKey = false;
                colvarConsumerName.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerName);
                
                TableSchema.TableColumn colvarCunsumerEmail = new TableSchema.TableColumn(schema);
                colvarCunsumerEmail.ColumnName = "CunsumerEmail";
                colvarCunsumerEmail.DataType = DbType.AnsiString;
                colvarCunsumerEmail.MaxLength = 50;
                colvarCunsumerEmail.AutoIncrement = false;
                colvarCunsumerEmail.IsNullable = true;
                colvarCunsumerEmail.IsPrimaryKey = false;
                colvarCunsumerEmail.IsForeignKey = false;
                colvarCunsumerEmail.IsReadOnly = false;
                
                schema.Columns.Add(colvarCunsumerEmail);
                
                TableSchema.TableColumn colvarConsumerResidensePhoneNo = new TableSchema.TableColumn(schema);
                colvarConsumerResidensePhoneNo.ColumnName = "ConsumerResidensePhoneNo";
                colvarConsumerResidensePhoneNo.DataType = DbType.AnsiString;
                colvarConsumerResidensePhoneNo.MaxLength = 50;
                colvarConsumerResidensePhoneNo.AutoIncrement = false;
                colvarConsumerResidensePhoneNo.IsNullable = true;
                colvarConsumerResidensePhoneNo.IsPrimaryKey = false;
                colvarConsumerResidensePhoneNo.IsForeignKey = false;
                colvarConsumerResidensePhoneNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerResidensePhoneNo);
                
                TableSchema.TableColumn colvarCunsumerAddress = new TableSchema.TableColumn(schema);
                colvarCunsumerAddress.ColumnName = "CunsumerAddress";
                colvarCunsumerAddress.DataType = DbType.AnsiString;
                colvarCunsumerAddress.MaxLength = -1;
                colvarCunsumerAddress.AutoIncrement = false;
                colvarCunsumerAddress.IsNullable = true;
                colvarCunsumerAddress.IsPrimaryKey = false;
                colvarCunsumerAddress.IsForeignKey = false;
                colvarCunsumerAddress.IsReadOnly = false;
                
                schema.Columns.Add(colvarCunsumerAddress);
                
                TableSchema.TableColumn colvarConsumerMobileNo = new TableSchema.TableColumn(schema);
                colvarConsumerMobileNo.ColumnName = "ConsumerMobileNo";
                colvarConsumerMobileNo.DataType = DbType.AnsiString;
                colvarConsumerMobileNo.MaxLength = 50;
                colvarConsumerMobileNo.AutoIncrement = false;
                colvarConsumerMobileNo.IsNullable = true;
                colvarConsumerMobileNo.IsPrimaryKey = false;
                colvarConsumerMobileNo.IsForeignKey = false;
                colvarConsumerMobileNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerMobileNo);
                
                TableSchema.TableColumn colvarConsumerNo = new TableSchema.TableColumn(schema);
                colvarConsumerNo.ColumnName = "ConsumerNo";
                colvarConsumerNo.DataType = DbType.AnsiString;
                colvarConsumerNo.MaxLength = -1;
                colvarConsumerNo.AutoIncrement = false;
                colvarConsumerNo.IsNullable = true;
                colvarConsumerNo.IsPrimaryKey = false;
                colvarConsumerNo.IsForeignKey = false;
                colvarConsumerNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerNo);
                
                TableSchema.TableColumn colvarConsumerNIC = new TableSchema.TableColumn(schema);
                colvarConsumerNIC.ColumnName = "ConsumerNIC";
                colvarConsumerNIC.DataType = DbType.AnsiString;
                colvarConsumerNIC.MaxLength = 70;
                colvarConsumerNIC.AutoIncrement = false;
                colvarConsumerNIC.IsNullable = true;
                colvarConsumerNIC.IsPrimaryKey = false;
                colvarConsumerNIC.IsForeignKey = false;
                colvarConsumerNIC.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerNIC);
                
                TableSchema.TableColumn colvarCLoad = new TableSchema.TableColumn(schema);
                colvarCLoad.ColumnName = "CLoad";
                colvarCLoad.DataType = DbType.Int32;
                colvarCLoad.MaxLength = 0;
                colvarCLoad.AutoIncrement = false;
                colvarCLoad.IsNullable = true;
                colvarCLoad.IsPrimaryKey = false;
                colvarCLoad.IsForeignKey = false;
                colvarCLoad.IsReadOnly = false;
                
                schema.Columns.Add(colvarCLoad);
                
                TableSchema.TableColumn colvarMeterImage = new TableSchema.TableColumn(schema);
                colvarMeterImage.ColumnName = "MeterImage";
                colvarMeterImage.DataType = DbType.AnsiString;
                colvarMeterImage.MaxLength = -1;
                colvarMeterImage.AutoIncrement = false;
                colvarMeterImage.IsNullable = true;
                colvarMeterImage.IsPrimaryKey = false;
                colvarMeterImage.IsForeignKey = false;
                colvarMeterImage.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterImage);
                
                TableSchema.TableColumn colvarMeterReadingDate = new TableSchema.TableColumn(schema);
                colvarMeterReadingDate.ColumnName = "MeterReadingDate";
                colvarMeterReadingDate.DataType = DbType.DateTime;
                colvarMeterReadingDate.MaxLength = 0;
                colvarMeterReadingDate.AutoIncrement = false;
                colvarMeterReadingDate.IsNullable = false;
                colvarMeterReadingDate.IsPrimaryKey = false;
                colvarMeterReadingDate.IsForeignKey = false;
                colvarMeterReadingDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterReadingDate);
                
                TableSchema.TableColumn colvarBranchID = new TableSchema.TableColumn(schema);
                colvarBranchID.ColumnName = "BranchID";
                colvarBranchID.DataType = DbType.Int32;
                colvarBranchID.MaxLength = 0;
                colvarBranchID.AutoIncrement = false;
                colvarBranchID.IsNullable = true;
                colvarBranchID.IsPrimaryKey = false;
                colvarBranchID.IsForeignKey = false;
                colvarBranchID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchID);
                
                TableSchema.TableColumn colvarBranchCode = new TableSchema.TableColumn(schema);
                colvarBranchCode.ColumnName = "BranchCode";
                colvarBranchCode.DataType = DbType.AnsiString;
                colvarBranchCode.MaxLength = 50;
                colvarBranchCode.AutoIncrement = false;
                colvarBranchCode.IsNullable = true;
                colvarBranchCode.IsPrimaryKey = false;
                colvarBranchCode.IsForeignKey = false;
                colvarBranchCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchCode);
                
                TableSchema.TableColumn colvarBranchName = new TableSchema.TableColumn(schema);
                colvarBranchName.ColumnName = "BranchName";
                colvarBranchName.DataType = DbType.AnsiString;
                colvarBranchName.MaxLength = 150;
                colvarBranchName.AutoIncrement = false;
                colvarBranchName.IsNullable = true;
                colvarBranchName.IsPrimaryKey = false;
                colvarBranchName.IsForeignKey = false;
                colvarBranchName.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchName);
                
                TableSchema.TableColumn colvarMeterReadingUserID = new TableSchema.TableColumn(schema);
                colvarMeterReadingUserID.ColumnName = "MeterReadingUserID";
                colvarMeterReadingUserID.DataType = DbType.Int32;
                colvarMeterReadingUserID.MaxLength = 0;
                colvarMeterReadingUserID.AutoIncrement = false;
                colvarMeterReadingUserID.IsNullable = true;
                colvarMeterReadingUserID.IsPrimaryKey = false;
                colvarMeterReadingUserID.IsForeignKey = false;
                colvarMeterReadingUserID.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterReadingUserID);
                
                TableSchema.TableColumn colvarUserName = new TableSchema.TableColumn(schema);
                colvarUserName.ColumnName = "UserName";
                colvarUserName.DataType = DbType.AnsiString;
                colvarUserName.MaxLength = 50;
                colvarUserName.AutoIncrement = false;
                colvarUserName.IsNullable = true;
                colvarUserName.IsPrimaryKey = false;
                colvarUserName.IsForeignKey = false;
                colvarUserName.IsReadOnly = false;
                
                schema.Columns.Add(colvarUserName);
                
                TableSchema.TableColumn colvarPassword = new TableSchema.TableColumn(schema);
                colvarPassword.ColumnName = "Password";
                colvarPassword.DataType = DbType.AnsiString;
                colvarPassword.MaxLength = 50;
                colvarPassword.AutoIncrement = false;
                colvarPassword.IsNullable = true;
                colvarPassword.IsPrimaryKey = false;
                colvarPassword.IsForeignKey = false;
                colvarPassword.IsReadOnly = false;
                
                schema.Columns.Add(colvarPassword);
                
                TableSchema.TableColumn colvarExpr1 = new TableSchema.TableColumn(schema);
                colvarExpr1.ColumnName = "Expr1";
                colvarExpr1.DataType = DbType.AnsiString;
                colvarExpr1.MaxLength = 50;
                colvarExpr1.AutoIncrement = false;
                colvarExpr1.IsNullable = true;
                colvarExpr1.IsPrimaryKey = false;
                colvarExpr1.IsForeignKey = false;
                colvarExpr1.IsReadOnly = false;
                
                schema.Columns.Add(colvarExpr1);
                
                TableSchema.TableColumn colvarTariffID = new TableSchema.TableColumn(schema);
                colvarTariffID.ColumnName = "TariffID";
                colvarTariffID.DataType = DbType.Int32;
                colvarTariffID.MaxLength = 0;
                colvarTariffID.AutoIncrement = false;
                colvarTariffID.IsNullable = true;
                colvarTariffID.IsPrimaryKey = false;
                colvarTariffID.IsForeignKey = false;
                colvarTariffID.IsReadOnly = false;
                
                schema.Columns.Add(colvarTariffID);
                
                TableSchema.TableColumn colvarTariffName = new TableSchema.TableColumn(schema);
                colvarTariffName.ColumnName = "TariffName";
                colvarTariffName.DataType = DbType.AnsiString;
                colvarTariffName.MaxLength = 50;
                colvarTariffName.AutoIncrement = false;
                colvarTariffName.IsNullable = true;
                colvarTariffName.IsPrimaryKey = false;
                colvarTariffName.IsForeignKey = false;
                colvarTariffName.IsReadOnly = false;
                
                schema.Columns.Add(colvarTariffName);
                
                TableSchema.TableColumn colvarTariffCode = new TableSchema.TableColumn(schema);
                colvarTariffCode.ColumnName = "TariffCode";
                colvarTariffCode.DataType = DbType.AnsiString;
                colvarTariffCode.MaxLength = 50;
                colvarTariffCode.AutoIncrement = false;
                colvarTariffCode.IsNullable = true;
                colvarTariffCode.IsPrimaryKey = false;
                colvarTariffCode.IsForeignKey = false;
                colvarTariffCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarTariffCode);
                
                TableSchema.TableColumn colvarReadingInsertedBy = new TableSchema.TableColumn(schema);
                colvarReadingInsertedBy.ColumnName = "ReadingInsertedBy";
                colvarReadingInsertedBy.DataType = DbType.Int32;
                colvarReadingInsertedBy.MaxLength = 0;
                colvarReadingInsertedBy.AutoIncrement = false;
                colvarReadingInsertedBy.IsNullable = true;
                colvarReadingInsertedBy.IsPrimaryKey = false;
                colvarReadingInsertedBy.IsForeignKey = false;
                colvarReadingInsertedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarReadingInsertedBy);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["PrimaryProvider"].AddSchema("VwTblMeterReading",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VwTblMeterReading()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VwTblMeterReading(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VwTblMeterReading(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VwTblMeterReading(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("MeterReadingID")]
        [Bindable(true)]
        public int MeterReadingID 
	    {
		    get
		    {
			    return GetColumnValue<int>("MeterReadingID");
		    }
            set 
		    {
			    SetColumnValue("MeterReadingID", value);
            }
        }
	      
        [XmlAttribute("MeterReadingMonth")]
        [Bindable(true)]
        public string MeterReadingMonth 
	    {
		    get
		    {
			    return GetColumnValue<string>("MeterReadingMonth");
		    }
            set 
		    {
			    SetColumnValue("MeterReadingMonth", value);
            }
        }
	      
        [XmlAttribute("MeterReadingYear")]
        [Bindable(true)]
        public string MeterReadingYear 
	    {
		    get
		    {
			    return GetColumnValue<string>("MeterReadingYear");
		    }
            set 
		    {
			    SetColumnValue("MeterReadingYear", value);
            }
        }
	      
        [XmlAttribute("CurrentReading")]
        [Bindable(true)]
        public decimal? CurrentReading 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("CurrentReading");
		    }
            set 
		    {
			    SetColumnValue("CurrentReading", value);
            }
        }
	      
        [XmlAttribute("PreviousReading")]
        [Bindable(true)]
        public decimal? PreviousReading 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("PreviousReading");
		    }
            set 
		    {
			    SetColumnValue("PreviousReading", value);
            }
        }
	      
        [XmlAttribute("MeterReadBy")]
        [Bindable(true)]
        public int? MeterReadBy 
	    {
		    get
		    {
			    return GetColumnValue<int?>("MeterReadBy");
		    }
            set 
		    {
			    SetColumnValue("MeterReadBy", value);
            }
        }
	      
        [XmlAttribute("ULCreatedBy")]
        [Bindable(true)]
        public int? ULCreatedBy 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ULCreatedBy");
		    }
            set 
		    {
			    SetColumnValue("ULCreatedBy", value);
            }
        }
	      
        [XmlAttribute("ULUpdatedBy")]
        [Bindable(true)]
        public int? ULUpdatedBy 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ULUpdatedBy");
		    }
            set 
		    {
			    SetColumnValue("ULUpdatedBy", value);
            }
        }
	      
        [XmlAttribute("CreatedOn")]
        [Bindable(true)]
        public DateTime? CreatedOn 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("CreatedOn");
		    }
            set 
		    {
			    SetColumnValue("CreatedOn", value);
            }
        }
	      
        [XmlAttribute("ModifiedOn")]
        [Bindable(true)]
        public DateTime? ModifiedOn 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ModifiedOn");
		    }
            set 
		    {
			    SetColumnValue("ModifiedOn", value);
            }
        }
	      
        [XmlAttribute("MeterID")]
        [Bindable(true)]
        public int? MeterID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("MeterID");
		    }
            set 
		    {
			    SetColumnValue("MeterID", value);
            }
        }
	      
        [XmlAttribute("MeterNo")]
        [Bindable(true)]
        public string MeterNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("MeterNo");
		    }
            set 
		    {
			    SetColumnValue("MeterNo", value);
            }
        }
	      
        [XmlAttribute("AccountNo")]
        [Bindable(true)]
        public string AccountNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("AccountNo");
		    }
            set 
		    {
			    SetColumnValue("AccountNo", value);
            }
        }
	      
        [XmlAttribute("MeterReadModeID")]
        [Bindable(true)]
        public int MeterReadModeID 
	    {
		    get
		    {
			    return GetColumnValue<int>("MeterReadModeID");
		    }
            set 
		    {
			    SetColumnValue("MeterReadModeID", value);
            }
        }
	      
        [XmlAttribute("MeterReadModeName")]
        [Bindable(true)]
        public string MeterReadModeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("MeterReadModeName");
		    }
            set 
		    {
			    SetColumnValue("MeterReadModeName", value);
            }
        }
	      
        [XmlAttribute("MeterReadCode")]
        [Bindable(true)]
        public string MeterReadCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("MeterReadCode");
		    }
            set 
		    {
			    SetColumnValue("MeterReadCode", value);
            }
        }
	      
        [XmlAttribute("EmployeeID")]
        [Bindable(true)]
        public int EmployeeID 
	    {
		    get
		    {
			    return GetColumnValue<int>("EmployeeID");
		    }
            set 
		    {
			    SetColumnValue("EmployeeID", value);
            }
        }
	      
        [XmlAttribute("EmployeeCode")]
        [Bindable(true)]
        public string EmployeeCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("EmployeeCode");
		    }
            set 
		    {
			    SetColumnValue("EmployeeCode", value);
            }
        }
	      
        [XmlAttribute("EmployeeName")]
        [Bindable(true)]
        public string EmployeeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("EmployeeName");
		    }
            set 
		    {
			    SetColumnValue("EmployeeName", value);
            }
        }
	      
        [XmlAttribute("EmailAddress")]
        [Bindable(true)]
        public string EmailAddress 
	    {
		    get
		    {
			    return GetColumnValue<string>("EmailAddress");
		    }
            set 
		    {
			    SetColumnValue("EmailAddress", value);
            }
        }
	      
        [XmlAttribute("MobileNo")]
        [Bindable(true)]
        public string MobileNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("MobileNo");
		    }
            set 
		    {
			    SetColumnValue("MobileNo", value);
            }
        }
	      
        [XmlAttribute("PhoneNo")]
        [Bindable(true)]
        public string PhoneNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("PhoneNo");
		    }
            set 
		    {
			    SetColumnValue("PhoneNo", value);
            }
        }
	      
        [XmlAttribute("Address")]
        [Bindable(true)]
        public string Address 
	    {
		    get
		    {
			    return GetColumnValue<string>("Address");
		    }
            set 
		    {
			    SetColumnValue("Address", value);
            }
        }
	      
        [XmlAttribute("Nic")]
        [Bindable(true)]
        public string Nic 
	    {
		    get
		    {
			    return GetColumnValue<string>("NIC");
		    }
            set 
		    {
			    SetColumnValue("NIC", value);
            }
        }
	      
        [XmlAttribute("CunsumerID")]
        [Bindable(true)]
        public int? CunsumerID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("CunsumerID");
		    }
            set 
		    {
			    SetColumnValue("CunsumerID", value);
            }
        }
	      
        [XmlAttribute("ConsumerName")]
        [Bindable(true)]
        public string ConsumerName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerName");
		    }
            set 
		    {
			    SetColumnValue("ConsumerName", value);
            }
        }
	      
        [XmlAttribute("CunsumerEmail")]
        [Bindable(true)]
        public string CunsumerEmail 
	    {
		    get
		    {
			    return GetColumnValue<string>("CunsumerEmail");
		    }
            set 
		    {
			    SetColumnValue("CunsumerEmail", value);
            }
        }
	      
        [XmlAttribute("ConsumerResidensePhoneNo")]
        [Bindable(true)]
        public string ConsumerResidensePhoneNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerResidensePhoneNo");
		    }
            set 
		    {
			    SetColumnValue("ConsumerResidensePhoneNo", value);
            }
        }
	      
        [XmlAttribute("CunsumerAddress")]
        [Bindable(true)]
        public string CunsumerAddress 
	    {
		    get
		    {
			    return GetColumnValue<string>("CunsumerAddress");
		    }
            set 
		    {
			    SetColumnValue("CunsumerAddress", value);
            }
        }
	      
        [XmlAttribute("ConsumerMobileNo")]
        [Bindable(true)]
        public string ConsumerMobileNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerMobileNo");
		    }
            set 
		    {
			    SetColumnValue("ConsumerMobileNo", value);
            }
        }
	      
        [XmlAttribute("ConsumerNo")]
        [Bindable(true)]
        public string ConsumerNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerNo");
		    }
            set 
		    {
			    SetColumnValue("ConsumerNo", value);
            }
        }
	      
        [XmlAttribute("ConsumerNIC")]
        [Bindable(true)]
        public string ConsumerNIC 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerNIC");
		    }
            set 
		    {
			    SetColumnValue("ConsumerNIC", value);
            }
        }
	      
        [XmlAttribute("CLoad")]
        [Bindable(true)]
        public int? CLoad 
	    {
		    get
		    {
			    return GetColumnValue<int?>("CLoad");
		    }
            set 
		    {
			    SetColumnValue("CLoad", value);
            }
        }
	      
        [XmlAttribute("MeterImage")]
        [Bindable(true)]
        public string MeterImage 
	    {
		    get
		    {
			    return GetColumnValue<string>("MeterImage");
		    }
            set 
		    {
			    SetColumnValue("MeterImage", value);
            }
        }
	      
        [XmlAttribute("MeterReadingDate")]
        [Bindable(true)]
        public DateTime MeterReadingDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime>("MeterReadingDate");
		    }
            set 
		    {
			    SetColumnValue("MeterReadingDate", value);
            }
        }
	      
        [XmlAttribute("BranchID")]
        [Bindable(true)]
        public int? BranchID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("BranchID");
		    }
            set 
		    {
			    SetColumnValue("BranchID", value);
            }
        }
	      
        [XmlAttribute("BranchCode")]
        [Bindable(true)]
        public string BranchCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("BranchCode");
		    }
            set 
		    {
			    SetColumnValue("BranchCode", value);
            }
        }
	      
        [XmlAttribute("BranchName")]
        [Bindable(true)]
        public string BranchName 
	    {
		    get
		    {
			    return GetColumnValue<string>("BranchName");
		    }
            set 
		    {
			    SetColumnValue("BranchName", value);
            }
        }
	      
        [XmlAttribute("MeterReadingUserID")]
        [Bindable(true)]
        public int? MeterReadingUserID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("MeterReadingUserID");
		    }
            set 
		    {
			    SetColumnValue("MeterReadingUserID", value);
            }
        }
	      
        [XmlAttribute("UserName")]
        [Bindable(true)]
        public string UserName 
	    {
		    get
		    {
			    return GetColumnValue<string>("UserName");
		    }
            set 
		    {
			    SetColumnValue("UserName", value);
            }
        }
	      
        [XmlAttribute("Password")]
        [Bindable(true)]
        public string Password 
	    {
		    get
		    {
			    return GetColumnValue<string>("Password");
		    }
            set 
		    {
			    SetColumnValue("Password", value);
            }
        }
	      
        [XmlAttribute("Expr1")]
        [Bindable(true)]
        public string Expr1 
	    {
		    get
		    {
			    return GetColumnValue<string>("Expr1");
		    }
            set 
		    {
			    SetColumnValue("Expr1", value);
            }
        }
	      
        [XmlAttribute("TariffID")]
        [Bindable(true)]
        public int? TariffID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("TariffID");
		    }
            set 
		    {
			    SetColumnValue("TariffID", value);
            }
        }
	      
        [XmlAttribute("TariffName")]
        [Bindable(true)]
        public string TariffName 
	    {
		    get
		    {
			    return GetColumnValue<string>("TariffName");
		    }
            set 
		    {
			    SetColumnValue("TariffName", value);
            }
        }
	      
        [XmlAttribute("TariffCode")]
        [Bindable(true)]
        public string TariffCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("TariffCode");
		    }
            set 
		    {
			    SetColumnValue("TariffCode", value);
            }
        }
	      
        [XmlAttribute("ReadingInsertedBy")]
        [Bindable(true)]
        public int? ReadingInsertedBy 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ReadingInsertedBy");
		    }
            set 
		    {
			    SetColumnValue("ReadingInsertedBy", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string MeterReadingID = @"MeterReadingID";
            
            public static string MeterReadingMonth = @"MeterReadingMonth";
            
            public static string MeterReadingYear = @"MeterReadingYear";
            
            public static string CurrentReading = @"CurrentReading";
            
            public static string PreviousReading = @"PreviousReading";
            
            public static string MeterReadBy = @"MeterReadBy";
            
            public static string ULCreatedBy = @"ULCreatedBy";
            
            public static string ULUpdatedBy = @"ULUpdatedBy";
            
            public static string CreatedOn = @"CreatedOn";
            
            public static string ModifiedOn = @"ModifiedOn";
            
            public static string MeterID = @"MeterID";
            
            public static string MeterNo = @"MeterNo";
            
            public static string AccountNo = @"AccountNo";
            
            public static string MeterReadModeID = @"MeterReadModeID";
            
            public static string MeterReadModeName = @"MeterReadModeName";
            
            public static string MeterReadCode = @"MeterReadCode";
            
            public static string EmployeeID = @"EmployeeID";
            
            public static string EmployeeCode = @"EmployeeCode";
            
            public static string EmployeeName = @"EmployeeName";
            
            public static string EmailAddress = @"EmailAddress";
            
            public static string MobileNo = @"MobileNo";
            
            public static string PhoneNo = @"PhoneNo";
            
            public static string Address = @"Address";
            
            public static string Nic = @"NIC";
            
            public static string CunsumerID = @"CunsumerID";
            
            public static string ConsumerName = @"ConsumerName";
            
            public static string CunsumerEmail = @"CunsumerEmail";
            
            public static string ConsumerResidensePhoneNo = @"ConsumerResidensePhoneNo";
            
            public static string CunsumerAddress = @"CunsumerAddress";
            
            public static string ConsumerMobileNo = @"ConsumerMobileNo";
            
            public static string ConsumerNo = @"ConsumerNo";
            
            public static string ConsumerNIC = @"ConsumerNIC";
            
            public static string CLoad = @"CLoad";
            
            public static string MeterImage = @"MeterImage";
            
            public static string MeterReadingDate = @"MeterReadingDate";
            
            public static string BranchID = @"BranchID";
            
            public static string BranchCode = @"BranchCode";
            
            public static string BranchName = @"BranchName";
            
            public static string MeterReadingUserID = @"MeterReadingUserID";
            
            public static string UserName = @"UserName";
            
            public static string Password = @"Password";
            
            public static string Expr1 = @"Expr1";
            
            public static string TariffID = @"TariffID";
            
            public static string TariffName = @"TariffName";
            
            public static string TariffCode = @"TariffCode";
            
            public static string ReadingInsertedBy = @"ReadingInsertedBy";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
