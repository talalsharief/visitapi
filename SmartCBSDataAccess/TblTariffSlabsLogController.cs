using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SmartCBSDataAccess
{
    /// <summary>
    /// Controller class for TblTariffSlabsLog
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TblTariffSlabsLogController
    {
        // Preload our schema..
        TblTariffSlabsLog thisSchemaLoad = new TblTariffSlabsLog();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TblTariffSlabsLogCollection FetchAll()
        {
            TblTariffSlabsLogCollection coll = new TblTariffSlabsLogCollection();
            Query qry = new Query(TblTariffSlabsLog.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblTariffSlabsLogCollection FetchByID(object TariffSlabsLogID)
        {
            TblTariffSlabsLogCollection coll = new TblTariffSlabsLogCollection().Where("TariffSlabsLogID", TariffSlabsLogID).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblTariffSlabsLogCollection FetchByQuery(Query qry)
        {
            TblTariffSlabsLogCollection coll = new TblTariffSlabsLogCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object TariffSlabsLogID)
        {
            return (TblTariffSlabsLog.Delete(TariffSlabsLogID) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object TariffSlabsLogID)
        {
            return (TblTariffSlabsLog.Destroy(TariffSlabsLogID) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int? TariffSlabID,int? TariffID,int? UnitsFrom,int? UnitsTo,decimal? Rate,DateTime? TrUpdatedOn,int? TrUpdatedBy,DateTime? TrCreatedOn,int? TrCreatedBy)
	    {
		    TblTariffSlabsLog item = new TblTariffSlabsLog();
		    
            item.TariffSlabID = TariffSlabID;
            
            item.TariffID = TariffID;
            
            item.UnitsFrom = UnitsFrom;
            
            item.UnitsTo = UnitsTo;
            
            item.Rate = Rate;
            
            item.TrUpdatedOn = TrUpdatedOn;
            
            item.TrUpdatedBy = TrUpdatedBy;
            
            item.TrCreatedOn = TrCreatedOn;
            
            item.TrCreatedBy = TrCreatedBy;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int TariffSlabsLogID,int? TariffSlabID,int? TariffID,int? UnitsFrom,int? UnitsTo,decimal? Rate,DateTime? TrUpdatedOn,int? TrUpdatedBy,DateTime? TrCreatedOn,int? TrCreatedBy)
	    {
		    TblTariffSlabsLog item = new TblTariffSlabsLog();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.TariffSlabsLogID = TariffSlabsLogID;
				
			item.TariffSlabID = TariffSlabID;
				
			item.TariffID = TariffID;
				
			item.UnitsFrom = UnitsFrom;
				
			item.UnitsTo = UnitsTo;
				
			item.Rate = Rate;
				
			item.TrUpdatedOn = TrUpdatedOn;
				
			item.TrUpdatedBy = TrUpdatedBy;
				
			item.TrCreatedOn = TrCreatedOn;
				
			item.TrCreatedBy = TrCreatedBy;
				
	        item.Save(UserName);
	    }
    }
}
