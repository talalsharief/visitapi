using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SmartCBSDataAccess{
    /// <summary>
    /// Strongly-typed collection for the VwBillDetail class.
    /// </summary>
    [Serializable]
    public partial class VwBillDetailCollection : ReadOnlyList<VwBillDetail, VwBillDetailCollection>
    {        
        public VwBillDetailCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the VwBillDetail view.
    /// </summary>
    [Serializable]
    public partial class VwBillDetail : ReadOnlyRecord<VwBillDetail>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("VwBillDetail", TableType.View, DataService.GetInstance("PrimaryProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarBillDetailID = new TableSchema.TableColumn(schema);
                colvarBillDetailID.ColumnName = "BillDetailID";
                colvarBillDetailID.DataType = DbType.Int32;
                colvarBillDetailID.MaxLength = 0;
                colvarBillDetailID.AutoIncrement = false;
                colvarBillDetailID.IsNullable = false;
                colvarBillDetailID.IsPrimaryKey = false;
                colvarBillDetailID.IsForeignKey = false;
                colvarBillDetailID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillDetailID);
                
                TableSchema.TableColumn colvarRateApplicableReff = new TableSchema.TableColumn(schema);
                colvarRateApplicableReff.ColumnName = "RateApplicableReff";
                colvarRateApplicableReff.DataType = DbType.AnsiString;
                colvarRateApplicableReff.MaxLength = 100;
                colvarRateApplicableReff.AutoIncrement = false;
                colvarRateApplicableReff.IsNullable = true;
                colvarRateApplicableReff.IsPrimaryKey = false;
                colvarRateApplicableReff.IsForeignKey = false;
                colvarRateApplicableReff.IsReadOnly = false;
                
                schema.Columns.Add(colvarRateApplicableReff);
                
                TableSchema.TableColumn colvarRateApplicableValue = new TableSchema.TableColumn(schema);
                colvarRateApplicableValue.ColumnName = "RateApplicableValue";
                colvarRateApplicableValue.DataType = DbType.Int32;
                colvarRateApplicableValue.MaxLength = 0;
                colvarRateApplicableValue.AutoIncrement = false;
                colvarRateApplicableValue.IsNullable = true;
                colvarRateApplicableValue.IsPrimaryKey = false;
                colvarRateApplicableValue.IsForeignKey = false;
                colvarRateApplicableValue.IsReadOnly = false;
                
                schema.Columns.Add(colvarRateApplicableValue);
                
                TableSchema.TableColumn colvarChargeAmount = new TableSchema.TableColumn(schema);
                colvarChargeAmount.ColumnName = "ChargeAmount";
                colvarChargeAmount.DataType = DbType.Decimal;
                colvarChargeAmount.MaxLength = 0;
                colvarChargeAmount.AutoIncrement = false;
                colvarChargeAmount.IsNullable = true;
                colvarChargeAmount.IsPrimaryKey = false;
                colvarChargeAmount.IsForeignKey = false;
                colvarChargeAmount.IsReadOnly = false;
                
                schema.Columns.Add(colvarChargeAmount);
                
                TableSchema.TableColumn colvarBillID = new TableSchema.TableColumn(schema);
                colvarBillID.ColumnName = "BillID";
                colvarBillID.DataType = DbType.Int32;
                colvarBillID.MaxLength = 0;
                colvarBillID.AutoIncrement = false;
                colvarBillID.IsNullable = false;
                colvarBillID.IsPrimaryKey = false;
                colvarBillID.IsForeignKey = false;
                colvarBillID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillID);
                
                TableSchema.TableColumn colvarBillNo = new TableSchema.TableColumn(schema);
                colvarBillNo.ColumnName = "BillNo";
                colvarBillNo.DataType = DbType.AnsiString;
                colvarBillNo.MaxLength = 100;
                colvarBillNo.AutoIncrement = false;
                colvarBillNo.IsNullable = true;
                colvarBillNo.IsPrimaryKey = false;
                colvarBillNo.IsForeignKey = false;
                colvarBillNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillNo);
                
                TableSchema.TableColumn colvarNoOfMonths = new TableSchema.TableColumn(schema);
                colvarNoOfMonths.ColumnName = "NoOfMonths";
                colvarNoOfMonths.DataType = DbType.Int32;
                colvarNoOfMonths.MaxLength = 0;
                colvarNoOfMonths.AutoIncrement = false;
                colvarNoOfMonths.IsNullable = true;
                colvarNoOfMonths.IsPrimaryKey = false;
                colvarNoOfMonths.IsForeignKey = false;
                colvarNoOfMonths.IsReadOnly = false;
                
                schema.Columns.Add(colvarNoOfMonths);
                
                TableSchema.TableColumn colvarSLoad = new TableSchema.TableColumn(schema);
                colvarSLoad.ColumnName = "SLoad";
                colvarSLoad.DataType = DbType.Int32;
                colvarSLoad.MaxLength = 0;
                colvarSLoad.AutoIncrement = false;
                colvarSLoad.IsNullable = true;
                colvarSLoad.IsPrimaryKey = false;
                colvarSLoad.IsForeignKey = false;
                colvarSLoad.IsReadOnly = false;
                
                schema.Columns.Add(colvarSLoad);
                
                TableSchema.TableColumn colvarTotalSD = new TableSchema.TableColumn(schema);
                colvarTotalSD.ColumnName = "TotalSD";
                colvarTotalSD.DataType = DbType.Decimal;
                colvarTotalSD.MaxLength = 0;
                colvarTotalSD.AutoIncrement = false;
                colvarTotalSD.IsNullable = true;
                colvarTotalSD.IsPrimaryKey = false;
                colvarTotalSD.IsForeignKey = false;
                colvarTotalSD.IsReadOnly = false;
                
                schema.Columns.Add(colvarTotalSD);
                
                TableSchema.TableColumn colvarIssueDate = new TableSchema.TableColumn(schema);
                colvarIssueDate.ColumnName = "IssueDate";
                colvarIssueDate.DataType = DbType.DateTime;
                colvarIssueDate.MaxLength = 0;
                colvarIssueDate.AutoIncrement = false;
                colvarIssueDate.IsNullable = true;
                colvarIssueDate.IsPrimaryKey = false;
                colvarIssueDate.IsForeignKey = false;
                colvarIssueDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarIssueDate);
                
                TableSchema.TableColumn colvarDueDate = new TableSchema.TableColumn(schema);
                colvarDueDate.ColumnName = "DueDate";
                colvarDueDate.DataType = DbType.DateTime;
                colvarDueDate.MaxLength = 0;
                colvarDueDate.AutoIncrement = false;
                colvarDueDate.IsNullable = true;
                colvarDueDate.IsPrimaryKey = false;
                colvarDueDate.IsForeignKey = false;
                colvarDueDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarDueDate);
                
                TableSchema.TableColumn colvarBillingMonth = new TableSchema.TableColumn(schema);
                colvarBillingMonth.ColumnName = "BillingMonth";
                colvarBillingMonth.DataType = DbType.AnsiString;
                colvarBillingMonth.MaxLength = 50;
                colvarBillingMonth.AutoIncrement = false;
                colvarBillingMonth.IsNullable = true;
                colvarBillingMonth.IsPrimaryKey = false;
                colvarBillingMonth.IsForeignKey = false;
                colvarBillingMonth.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillingMonth);
                
                TableSchema.TableColumn colvarBillingYear = new TableSchema.TableColumn(schema);
                colvarBillingYear.ColumnName = "BillingYear";
                colvarBillingYear.DataType = DbType.AnsiString;
                colvarBillingYear.MaxLength = 50;
                colvarBillingYear.AutoIncrement = false;
                colvarBillingYear.IsNullable = true;
                colvarBillingYear.IsPrimaryKey = false;
                colvarBillingYear.IsForeignKey = false;
                colvarBillingYear.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillingYear);
                
                TableSchema.TableColumn colvarUnitsBill = new TableSchema.TableColumn(schema);
                colvarUnitsBill.ColumnName = "UnitsBill";
                colvarUnitsBill.DataType = DbType.Decimal;
                colvarUnitsBill.MaxLength = 0;
                colvarUnitsBill.AutoIncrement = false;
                colvarUnitsBill.IsNullable = false;
                colvarUnitsBill.IsPrimaryKey = false;
                colvarUnitsBill.IsForeignKey = false;
                colvarUnitsBill.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitsBill);
                
                TableSchema.TableColumn colvarUnitsAdjusted = new TableSchema.TableColumn(schema);
                colvarUnitsAdjusted.ColumnName = "UnitsAdjusted";
                colvarUnitsAdjusted.DataType = DbType.Decimal;
                colvarUnitsAdjusted.MaxLength = 0;
                colvarUnitsAdjusted.AutoIncrement = false;
                colvarUnitsAdjusted.IsNullable = true;
                colvarUnitsAdjusted.IsPrimaryKey = false;
                colvarUnitsAdjusted.IsForeignKey = false;
                colvarUnitsAdjusted.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitsAdjusted);
                
                TableSchema.TableColumn colvarAmountPaybleDueDate = new TableSchema.TableColumn(schema);
                colvarAmountPaybleDueDate.ColumnName = "AmountPaybleDueDate";
                colvarAmountPaybleDueDate.DataType = DbType.Decimal;
                colvarAmountPaybleDueDate.MaxLength = 0;
                colvarAmountPaybleDueDate.AutoIncrement = false;
                colvarAmountPaybleDueDate.IsNullable = true;
                colvarAmountPaybleDueDate.IsPrimaryKey = false;
                colvarAmountPaybleDueDate.IsForeignKey = false;
                colvarAmountPaybleDueDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarAmountPaybleDueDate);
                
                TableSchema.TableColumn colvarAmountPaybleAfterDueDate = new TableSchema.TableColumn(schema);
                colvarAmountPaybleAfterDueDate.ColumnName = "AmountPaybleAfterDueDate";
                colvarAmountPaybleAfterDueDate.DataType = DbType.Decimal;
                colvarAmountPaybleAfterDueDate.MaxLength = 0;
                colvarAmountPaybleAfterDueDate.AutoIncrement = false;
                colvarAmountPaybleAfterDueDate.IsNullable = true;
                colvarAmountPaybleAfterDueDate.IsPrimaryKey = false;
                colvarAmountPaybleAfterDueDate.IsForeignKey = false;
                colvarAmountPaybleAfterDueDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarAmountPaybleAfterDueDate);
                
                TableSchema.TableColumn colvarStatus = new TableSchema.TableColumn(schema);
                colvarStatus.ColumnName = "Status";
                colvarStatus.DataType = DbType.AnsiString;
                colvarStatus.MaxLength = 50;
                colvarStatus.AutoIncrement = false;
                colvarStatus.IsNullable = true;
                colvarStatus.IsPrimaryKey = false;
                colvarStatus.IsForeignKey = false;
                colvarStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarStatus);
                
                TableSchema.TableColumn colvarChargesID = new TableSchema.TableColumn(schema);
                colvarChargesID.ColumnName = "ChargesID";
                colvarChargesID.DataType = DbType.Int32;
                colvarChargesID.MaxLength = 0;
                colvarChargesID.AutoIncrement = false;
                colvarChargesID.IsNullable = false;
                colvarChargesID.IsPrimaryKey = false;
                colvarChargesID.IsForeignKey = false;
                colvarChargesID.IsReadOnly = false;
                
                schema.Columns.Add(colvarChargesID);
                
                TableSchema.TableColumn colvarChargesName = new TableSchema.TableColumn(schema);
                colvarChargesName.ColumnName = "ChargesName";
                colvarChargesName.DataType = DbType.AnsiString;
                colvarChargesName.MaxLength = 50;
                colvarChargesName.AutoIncrement = false;
                colvarChargesName.IsNullable = false;
                colvarChargesName.IsPrimaryKey = false;
                colvarChargesName.IsForeignKey = false;
                colvarChargesName.IsReadOnly = false;
                
                schema.Columns.Add(colvarChargesName);
                
                TableSchema.TableColumn colvarFixedAmount = new TableSchema.TableColumn(schema);
                colvarFixedAmount.ColumnName = "FixedAmount";
                colvarFixedAmount.DataType = DbType.Decimal;
                colvarFixedAmount.MaxLength = 0;
                colvarFixedAmount.AutoIncrement = false;
                colvarFixedAmount.IsNullable = true;
                colvarFixedAmount.IsPrimaryKey = false;
                colvarFixedAmount.IsForeignKey = false;
                colvarFixedAmount.IsReadOnly = false;
                
                schema.Columns.Add(colvarFixedAmount);
                
                TableSchema.TableColumn colvarChargeRate = new TableSchema.TableColumn(schema);
                colvarChargeRate.ColumnName = "ChargeRate";
                colvarChargeRate.DataType = DbType.Decimal;
                colvarChargeRate.MaxLength = 0;
                colvarChargeRate.AutoIncrement = false;
                colvarChargeRate.IsNullable = true;
                colvarChargeRate.IsPrimaryKey = false;
                colvarChargeRate.IsForeignKey = false;
                colvarChargeRate.IsReadOnly = false;
                
                schema.Columns.Add(colvarChargeRate);
                
                TableSchema.TableColumn colvarCalculatedFeild = new TableSchema.TableColumn(schema);
                colvarCalculatedFeild.ColumnName = "CalculatedFeild";
                colvarCalculatedFeild.DataType = DbType.AnsiString;
                colvarCalculatedFeild.MaxLength = 50;
                colvarCalculatedFeild.AutoIncrement = false;
                colvarCalculatedFeild.IsNullable = true;
                colvarCalculatedFeild.IsPrimaryKey = false;
                colvarCalculatedFeild.IsForeignKey = false;
                colvarCalculatedFeild.IsReadOnly = false;
                
                schema.Columns.Add(colvarCalculatedFeild);
                
                TableSchema.TableColumn colvarChargesTypeId = new TableSchema.TableColumn(schema);
                colvarChargesTypeId.ColumnName = "ChargesTypeId";
                colvarChargesTypeId.DataType = DbType.Int32;
                colvarChargesTypeId.MaxLength = 0;
                colvarChargesTypeId.AutoIncrement = false;
                colvarChargesTypeId.IsNullable = false;
                colvarChargesTypeId.IsPrimaryKey = false;
                colvarChargesTypeId.IsForeignKey = false;
                colvarChargesTypeId.IsReadOnly = false;
                
                schema.Columns.Add(colvarChargesTypeId);
                
                TableSchema.TableColumn colvarChargesTypeName = new TableSchema.TableColumn(schema);
                colvarChargesTypeName.ColumnName = "ChargesTypeName";
                colvarChargesTypeName.DataType = DbType.AnsiString;
                colvarChargesTypeName.MaxLength = 50;
                colvarChargesTypeName.AutoIncrement = false;
                colvarChargesTypeName.IsNullable = true;
                colvarChargesTypeName.IsPrimaryKey = false;
                colvarChargesTypeName.IsForeignKey = false;
                colvarChargesTypeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarChargesTypeName);
                
                TableSchema.TableColumn colvarIsTax = new TableSchema.TableColumn(schema);
                colvarIsTax.ColumnName = "IsTax";
                colvarIsTax.DataType = DbType.Boolean;
                colvarIsTax.MaxLength = 0;
                colvarIsTax.AutoIncrement = false;
                colvarIsTax.IsNullable = true;
                colvarIsTax.IsPrimaryKey = false;
                colvarIsTax.IsForeignKey = false;
                colvarIsTax.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsTax);
                
                TableSchema.TableColumn colvarActualBillPaybleDueDate = new TableSchema.TableColumn(schema);
                colvarActualBillPaybleDueDate.ColumnName = "ActualBillPaybleDueDate";
                colvarActualBillPaybleDueDate.DataType = DbType.Decimal;
                colvarActualBillPaybleDueDate.MaxLength = 0;
                colvarActualBillPaybleDueDate.AutoIncrement = false;
                colvarActualBillPaybleDueDate.IsNullable = true;
                colvarActualBillPaybleDueDate.IsPrimaryKey = false;
                colvarActualBillPaybleDueDate.IsForeignKey = false;
                colvarActualBillPaybleDueDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarActualBillPaybleDueDate);
                
                TableSchema.TableColumn colvarActualBillPaybleAfterDueDate = new TableSchema.TableColumn(schema);
                colvarActualBillPaybleAfterDueDate.ColumnName = "ActualBillPaybleAfterDueDate";
                colvarActualBillPaybleAfterDueDate.DataType = DbType.Decimal;
                colvarActualBillPaybleAfterDueDate.MaxLength = 0;
                colvarActualBillPaybleAfterDueDate.AutoIncrement = false;
                colvarActualBillPaybleAfterDueDate.IsNullable = true;
                colvarActualBillPaybleAfterDueDate.IsPrimaryKey = false;
                colvarActualBillPaybleAfterDueDate.IsForeignKey = false;
                colvarActualBillPaybleAfterDueDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarActualBillPaybleAfterDueDate);
                
                TableSchema.TableColumn colvarTotalArears = new TableSchema.TableColumn(schema);
                colvarTotalArears.ColumnName = "TotalArears";
                colvarTotalArears.DataType = DbType.Decimal;
                colvarTotalArears.MaxLength = 0;
                colvarTotalArears.AutoIncrement = false;
                colvarTotalArears.IsNullable = true;
                colvarTotalArears.IsPrimaryKey = false;
                colvarTotalArears.IsForeignKey = false;
                colvarTotalArears.IsReadOnly = false;
                
                schema.Columns.Add(colvarTotalArears);
                
                TableSchema.TableColumn colvarBillUpto = new TableSchema.TableColumn(schema);
                colvarBillUpto.ColumnName = "BillUpto";
                colvarBillUpto.DataType = DbType.Decimal;
                colvarBillUpto.MaxLength = 0;
                colvarBillUpto.AutoIncrement = false;
                colvarBillUpto.IsNullable = true;
                colvarBillUpto.IsPrimaryKey = false;
                colvarBillUpto.IsForeignKey = false;
                colvarBillUpto.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillUpto);
                
                TableSchema.TableColumn colvarBillCreatedBy = new TableSchema.TableColumn(schema);
                colvarBillCreatedBy.ColumnName = "BillCreatedBy";
                colvarBillCreatedBy.DataType = DbType.Int32;
                colvarBillCreatedBy.MaxLength = 0;
                colvarBillCreatedBy.AutoIncrement = false;
                colvarBillCreatedBy.IsNullable = true;
                colvarBillCreatedBy.IsPrimaryKey = false;
                colvarBillCreatedBy.IsForeignKey = false;
                colvarBillCreatedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillCreatedBy);
                
                TableSchema.TableColumn colvarBranchID = new TableSchema.TableColumn(schema);
                colvarBranchID.ColumnName = "BranchID";
                colvarBranchID.DataType = DbType.Int32;
                colvarBranchID.MaxLength = 0;
                colvarBranchID.AutoIncrement = false;
                colvarBranchID.IsNullable = true;
                colvarBranchID.IsPrimaryKey = false;
                colvarBranchID.IsForeignKey = false;
                colvarBranchID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchID);
                
                TableSchema.TableColumn colvarMeterID = new TableSchema.TableColumn(schema);
                colvarMeterID.ColumnName = "MeterID";
                colvarMeterID.DataType = DbType.Int32;
                colvarMeterID.MaxLength = 0;
                colvarMeterID.AutoIncrement = false;
                colvarMeterID.IsNullable = true;
                colvarMeterID.IsPrimaryKey = false;
                colvarMeterID.IsForeignKey = false;
                colvarMeterID.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterID);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["PrimaryProvider"].AddSchema("VwBillDetail",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VwBillDetail()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VwBillDetail(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VwBillDetail(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VwBillDetail(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("BillDetailID")]
        [Bindable(true)]
        public int BillDetailID 
	    {
		    get
		    {
			    return GetColumnValue<int>("BillDetailID");
		    }
            set 
		    {
			    SetColumnValue("BillDetailID", value);
            }
        }
	      
        [XmlAttribute("RateApplicableReff")]
        [Bindable(true)]
        public string RateApplicableReff 
	    {
		    get
		    {
			    return GetColumnValue<string>("RateApplicableReff");
		    }
            set 
		    {
			    SetColumnValue("RateApplicableReff", value);
            }
        }
	      
        [XmlAttribute("RateApplicableValue")]
        [Bindable(true)]
        public int? RateApplicableValue 
	    {
		    get
		    {
			    return GetColumnValue<int?>("RateApplicableValue");
		    }
            set 
		    {
			    SetColumnValue("RateApplicableValue", value);
            }
        }
	      
        [XmlAttribute("ChargeAmount")]
        [Bindable(true)]
        public decimal? ChargeAmount 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("ChargeAmount");
		    }
            set 
		    {
			    SetColumnValue("ChargeAmount", value);
            }
        }
	      
        [XmlAttribute("BillID")]
        [Bindable(true)]
        public int BillID 
	    {
		    get
		    {
			    return GetColumnValue<int>("BillID");
		    }
            set 
		    {
			    SetColumnValue("BillID", value);
            }
        }
	      
        [XmlAttribute("BillNo")]
        [Bindable(true)]
        public string BillNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("BillNo");
		    }
            set 
		    {
			    SetColumnValue("BillNo", value);
            }
        }
	      
        [XmlAttribute("NoOfMonths")]
        [Bindable(true)]
        public int? NoOfMonths 
	    {
		    get
		    {
			    return GetColumnValue<int?>("NoOfMonths");
		    }
            set 
		    {
			    SetColumnValue("NoOfMonths", value);
            }
        }
	      
        [XmlAttribute("SLoad")]
        [Bindable(true)]
        public int? SLoad 
	    {
		    get
		    {
			    return GetColumnValue<int?>("SLoad");
		    }
            set 
		    {
			    SetColumnValue("SLoad", value);
            }
        }
	      
        [XmlAttribute("TotalSD")]
        [Bindable(true)]
        public decimal? TotalSD 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("TotalSD");
		    }
            set 
		    {
			    SetColumnValue("TotalSD", value);
            }
        }
	      
        [XmlAttribute("IssueDate")]
        [Bindable(true)]
        public DateTime? IssueDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("IssueDate");
		    }
            set 
		    {
			    SetColumnValue("IssueDate", value);
            }
        }
	      
        [XmlAttribute("DueDate")]
        [Bindable(true)]
        public DateTime? DueDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("DueDate");
		    }
            set 
		    {
			    SetColumnValue("DueDate", value);
            }
        }
	      
        [XmlAttribute("BillingMonth")]
        [Bindable(true)]
        public string BillingMonth 
	    {
		    get
		    {
			    return GetColumnValue<string>("BillingMonth");
		    }
            set 
		    {
			    SetColumnValue("BillingMonth", value);
            }
        }
	      
        [XmlAttribute("BillingYear")]
        [Bindable(true)]
        public string BillingYear 
	    {
		    get
		    {
			    return GetColumnValue<string>("BillingYear");
		    }
            set 
		    {
			    SetColumnValue("BillingYear", value);
            }
        }
	      
        [XmlAttribute("UnitsBill")]
        [Bindable(true)]
        public decimal UnitsBill 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("UnitsBill");
		    }
            set 
		    {
			    SetColumnValue("UnitsBill", value);
            }
        }
	      
        [XmlAttribute("UnitsAdjusted")]
        [Bindable(true)]
        public decimal? UnitsAdjusted 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("UnitsAdjusted");
		    }
            set 
		    {
			    SetColumnValue("UnitsAdjusted", value);
            }
        }
	      
        [XmlAttribute("AmountPaybleDueDate")]
        [Bindable(true)]
        public decimal? AmountPaybleDueDate 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("AmountPaybleDueDate");
		    }
            set 
		    {
			    SetColumnValue("AmountPaybleDueDate", value);
            }
        }
	      
        [XmlAttribute("AmountPaybleAfterDueDate")]
        [Bindable(true)]
        public decimal? AmountPaybleAfterDueDate 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("AmountPaybleAfterDueDate");
		    }
            set 
		    {
			    SetColumnValue("AmountPaybleAfterDueDate", value);
            }
        }
	      
        [XmlAttribute("Status")]
        [Bindable(true)]
        public string Status 
	    {
		    get
		    {
			    return GetColumnValue<string>("Status");
		    }
            set 
		    {
			    SetColumnValue("Status", value);
            }
        }
	      
        [XmlAttribute("ChargesID")]
        [Bindable(true)]
        public int ChargesID 
	    {
		    get
		    {
			    return GetColumnValue<int>("ChargesID");
		    }
            set 
		    {
			    SetColumnValue("ChargesID", value);
            }
        }
	      
        [XmlAttribute("ChargesName")]
        [Bindable(true)]
        public string ChargesName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ChargesName");
		    }
            set 
		    {
			    SetColumnValue("ChargesName", value);
            }
        }
	      
        [XmlAttribute("FixedAmount")]
        [Bindable(true)]
        public decimal? FixedAmount 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("FixedAmount");
		    }
            set 
		    {
			    SetColumnValue("FixedAmount", value);
            }
        }
	      
        [XmlAttribute("ChargeRate")]
        [Bindable(true)]
        public decimal? ChargeRate 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("ChargeRate");
		    }
            set 
		    {
			    SetColumnValue("ChargeRate", value);
            }
        }
	      
        [XmlAttribute("CalculatedFeild")]
        [Bindable(true)]
        public string CalculatedFeild 
	    {
		    get
		    {
			    return GetColumnValue<string>("CalculatedFeild");
		    }
            set 
		    {
			    SetColumnValue("CalculatedFeild", value);
            }
        }
	      
        [XmlAttribute("ChargesTypeId")]
        [Bindable(true)]
        public int ChargesTypeId 
	    {
		    get
		    {
			    return GetColumnValue<int>("ChargesTypeId");
		    }
            set 
		    {
			    SetColumnValue("ChargesTypeId", value);
            }
        }
	      
        [XmlAttribute("ChargesTypeName")]
        [Bindable(true)]
        public string ChargesTypeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ChargesTypeName");
		    }
            set 
		    {
			    SetColumnValue("ChargesTypeName", value);
            }
        }
	      
        [XmlAttribute("IsTax")]
        [Bindable(true)]
        public bool? IsTax 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("IsTax");
		    }
            set 
		    {
			    SetColumnValue("IsTax", value);
            }
        }
	      
        [XmlAttribute("ActualBillPaybleDueDate")]
        [Bindable(true)]
        public decimal? ActualBillPaybleDueDate 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("ActualBillPaybleDueDate");
		    }
            set 
		    {
			    SetColumnValue("ActualBillPaybleDueDate", value);
            }
        }
	      
        [XmlAttribute("ActualBillPaybleAfterDueDate")]
        [Bindable(true)]
        public decimal? ActualBillPaybleAfterDueDate 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("ActualBillPaybleAfterDueDate");
		    }
            set 
		    {
			    SetColumnValue("ActualBillPaybleAfterDueDate", value);
            }
        }
	      
        [XmlAttribute("TotalArears")]
        [Bindable(true)]
        public decimal? TotalArears 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("TotalArears");
		    }
            set 
		    {
			    SetColumnValue("TotalArears", value);
            }
        }
	      
        [XmlAttribute("BillUpto")]
        [Bindable(true)]
        public decimal? BillUpto 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("BillUpto");
		    }
            set 
		    {
			    SetColumnValue("BillUpto", value);
            }
        }
	      
        [XmlAttribute("BillCreatedBy")]
        [Bindable(true)]
        public int? BillCreatedBy 
	    {
		    get
		    {
			    return GetColumnValue<int?>("BillCreatedBy");
		    }
            set 
		    {
			    SetColumnValue("BillCreatedBy", value);
            }
        }
	      
        [XmlAttribute("BranchID")]
        [Bindable(true)]
        public int? BranchID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("BranchID");
		    }
            set 
		    {
			    SetColumnValue("BranchID", value);
            }
        }
	      
        [XmlAttribute("MeterID")]
        [Bindable(true)]
        public int? MeterID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("MeterID");
		    }
            set 
		    {
			    SetColumnValue("MeterID", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string BillDetailID = @"BillDetailID";
            
            public static string RateApplicableReff = @"RateApplicableReff";
            
            public static string RateApplicableValue = @"RateApplicableValue";
            
            public static string ChargeAmount = @"ChargeAmount";
            
            public static string BillID = @"BillID";
            
            public static string BillNo = @"BillNo";
            
            public static string NoOfMonths = @"NoOfMonths";
            
            public static string SLoad = @"SLoad";
            
            public static string TotalSD = @"TotalSD";
            
            public static string IssueDate = @"IssueDate";
            
            public static string DueDate = @"DueDate";
            
            public static string BillingMonth = @"BillingMonth";
            
            public static string BillingYear = @"BillingYear";
            
            public static string UnitsBill = @"UnitsBill";
            
            public static string UnitsAdjusted = @"UnitsAdjusted";
            
            public static string AmountPaybleDueDate = @"AmountPaybleDueDate";
            
            public static string AmountPaybleAfterDueDate = @"AmountPaybleAfterDueDate";
            
            public static string Status = @"Status";
            
            public static string ChargesID = @"ChargesID";
            
            public static string ChargesName = @"ChargesName";
            
            public static string FixedAmount = @"FixedAmount";
            
            public static string ChargeRate = @"ChargeRate";
            
            public static string CalculatedFeild = @"CalculatedFeild";
            
            public static string ChargesTypeId = @"ChargesTypeId";
            
            public static string ChargesTypeName = @"ChargesTypeName";
            
            public static string IsTax = @"IsTax";
            
            public static string ActualBillPaybleDueDate = @"ActualBillPaybleDueDate";
            
            public static string ActualBillPaybleAfterDueDate = @"ActualBillPaybleAfterDueDate";
            
            public static string TotalArears = @"TotalArears";
            
            public static string BillUpto = @"BillUpto";
            
            public static string BillCreatedBy = @"BillCreatedBy";
            
            public static string BranchID = @"BranchID";
            
            public static string MeterID = @"MeterID";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
