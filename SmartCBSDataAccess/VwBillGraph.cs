using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SmartCBSDataAccess{
    /// <summary>
    /// Strongly-typed collection for the VwBillGraph class.
    /// </summary>
    [Serializable]
    public partial class VwBillGraphCollection : ReadOnlyList<VwBillGraph, VwBillGraphCollection>
    {        
        public VwBillGraphCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the VwBillGraph view.
    /// </summary>
    [Serializable]
    public partial class VwBillGraph : ReadOnlyRecord<VwBillGraph>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("VwBillGraph", TableType.View, DataService.GetInstance("PrimaryProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarConsumerName = new TableSchema.TableColumn(schema);
                colvarConsumerName.ColumnName = "ConsumerName";
                colvarConsumerName.DataType = DbType.AnsiString;
                colvarConsumerName.MaxLength = 50;
                colvarConsumerName.AutoIncrement = false;
                colvarConsumerName.IsNullable = true;
                colvarConsumerName.IsPrimaryKey = false;
                colvarConsumerName.IsForeignKey = false;
                colvarConsumerName.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerName);
                
                TableSchema.TableColumn colvarCunsumerID = new TableSchema.TableColumn(schema);
                colvarCunsumerID.ColumnName = "CunsumerID";
                colvarCunsumerID.DataType = DbType.Int32;
                colvarCunsumerID.MaxLength = 0;
                colvarCunsumerID.AutoIncrement = false;
                colvarCunsumerID.IsNullable = false;
                colvarCunsumerID.IsPrimaryKey = false;
                colvarCunsumerID.IsForeignKey = false;
                colvarCunsumerID.IsReadOnly = false;
                
                schema.Columns.Add(colvarCunsumerID);
                
                TableSchema.TableColumn colvarMeterNo = new TableSchema.TableColumn(schema);
                colvarMeterNo.ColumnName = "MeterNo";
                colvarMeterNo.DataType = DbType.AnsiString;
                colvarMeterNo.MaxLength = -1;
                colvarMeterNo.AutoIncrement = false;
                colvarMeterNo.IsNullable = true;
                colvarMeterNo.IsPrimaryKey = false;
                colvarMeterNo.IsForeignKey = false;
                colvarMeterNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterNo);
                
                TableSchema.TableColumn colvarBillID = new TableSchema.TableColumn(schema);
                colvarBillID.ColumnName = "BillID";
                colvarBillID.DataType = DbType.Int32;
                colvarBillID.MaxLength = 0;
                colvarBillID.AutoIncrement = false;
                colvarBillID.IsNullable = false;
                colvarBillID.IsPrimaryKey = false;
                colvarBillID.IsForeignKey = false;
                colvarBillID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillID);
                
                TableSchema.TableColumn colvarBillNo = new TableSchema.TableColumn(schema);
                colvarBillNo.ColumnName = "BillNo";
                colvarBillNo.DataType = DbType.AnsiString;
                colvarBillNo.MaxLength = 100;
                colvarBillNo.AutoIncrement = false;
                colvarBillNo.IsNullable = true;
                colvarBillNo.IsPrimaryKey = false;
                colvarBillNo.IsForeignKey = false;
                colvarBillNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillNo);
                
                TableSchema.TableColumn colvarUnitsBill = new TableSchema.TableColumn(schema);
                colvarUnitsBill.ColumnName = "UnitsBill";
                colvarUnitsBill.DataType = DbType.Decimal;
                colvarUnitsBill.MaxLength = 0;
                colvarUnitsBill.AutoIncrement = false;
                colvarUnitsBill.IsNullable = false;
                colvarUnitsBill.IsPrimaryKey = false;
                colvarUnitsBill.IsForeignKey = false;
                colvarUnitsBill.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitsBill);
                
                TableSchema.TableColumn colvarMeterID = new TableSchema.TableColumn(schema);
                colvarMeterID.ColumnName = "MeterID";
                colvarMeterID.DataType = DbType.Int32;
                colvarMeterID.MaxLength = 0;
                colvarMeterID.AutoIncrement = false;
                colvarMeterID.IsNullable = true;
                colvarMeterID.IsPrimaryKey = false;
                colvarMeterID.IsForeignKey = false;
                colvarMeterID.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterID);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["PrimaryProvider"].AddSchema("VwBillGraph",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VwBillGraph()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VwBillGraph(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VwBillGraph(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VwBillGraph(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("ConsumerName")]
        [Bindable(true)]
        public string ConsumerName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerName");
		    }
            set 
		    {
			    SetColumnValue("ConsumerName", value);
            }
        }
	      
        [XmlAttribute("CunsumerID")]
        [Bindable(true)]
        public int CunsumerID 
	    {
		    get
		    {
			    return GetColumnValue<int>("CunsumerID");
		    }
            set 
		    {
			    SetColumnValue("CunsumerID", value);
            }
        }
	      
        [XmlAttribute("MeterNo")]
        [Bindable(true)]
        public string MeterNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("MeterNo");
		    }
            set 
		    {
			    SetColumnValue("MeterNo", value);
            }
        }
	      
        [XmlAttribute("BillID")]
        [Bindable(true)]
        public int BillID 
	    {
		    get
		    {
			    return GetColumnValue<int>("BillID");
		    }
            set 
		    {
			    SetColumnValue("BillID", value);
            }
        }
	      
        [XmlAttribute("BillNo")]
        [Bindable(true)]
        public string BillNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("BillNo");
		    }
            set 
		    {
			    SetColumnValue("BillNo", value);
            }
        }
	      
        [XmlAttribute("UnitsBill")]
        [Bindable(true)]
        public decimal UnitsBill 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("UnitsBill");
		    }
            set 
		    {
			    SetColumnValue("UnitsBill", value);
            }
        }
	      
        [XmlAttribute("MeterID")]
        [Bindable(true)]
        public int? MeterID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("MeterID");
		    }
            set 
		    {
			    SetColumnValue("MeterID", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string ConsumerName = @"ConsumerName";
            
            public static string CunsumerID = @"CunsumerID";
            
            public static string MeterNo = @"MeterNo";
            
            public static string BillID = @"BillID";
            
            public static string BillNo = @"BillNo";
            
            public static string UnitsBill = @"UnitsBill";
            
            public static string MeterID = @"MeterID";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
