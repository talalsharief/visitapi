using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SmartCBSDataAccess{
    /// <summary>
    /// Strongly-typed collection for the VwTblAdvertisement class.
    /// </summary>
    [Serializable]
    public partial class VwTblAdvertisementCollection : ReadOnlyList<VwTblAdvertisement, VwTblAdvertisementCollection>
    {        
        public VwTblAdvertisementCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the VwTblAdvertisement view.
    /// </summary>
    [Serializable]
    public partial class VwTblAdvertisement : ReadOnlyRecord<VwTblAdvertisement>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("VwTblAdvertisement", TableType.View, DataService.GetInstance("PrimaryProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarAdvertiseID = new TableSchema.TableColumn(schema);
                colvarAdvertiseID.ColumnName = "AdvertiseID";
                colvarAdvertiseID.DataType = DbType.Int32;
                colvarAdvertiseID.MaxLength = 0;
                colvarAdvertiseID.AutoIncrement = false;
                colvarAdvertiseID.IsNullable = false;
                colvarAdvertiseID.IsPrimaryKey = false;
                colvarAdvertiseID.IsForeignKey = false;
                colvarAdvertiseID.IsReadOnly = false;
                
                schema.Columns.Add(colvarAdvertiseID);
                
                TableSchema.TableColumn colvarImageURL = new TableSchema.TableColumn(schema);
                colvarImageURL.ColumnName = "ImageURL";
                colvarImageURL.DataType = DbType.AnsiString;
                colvarImageURL.MaxLength = -1;
                colvarImageURL.AutoIncrement = false;
                colvarImageURL.IsNullable = true;
                colvarImageURL.IsPrimaryKey = false;
                colvarImageURL.IsForeignKey = false;
                colvarImageURL.IsReadOnly = false;
                
                schema.Columns.Add(colvarImageURL);
                
                TableSchema.TableColumn colvarStartingBillingMonth = new TableSchema.TableColumn(schema);
                colvarStartingBillingMonth.ColumnName = "StartingBillingMonth";
                colvarStartingBillingMonth.DataType = DbType.DateTime;
                colvarStartingBillingMonth.MaxLength = 0;
                colvarStartingBillingMonth.AutoIncrement = false;
                colvarStartingBillingMonth.IsNullable = true;
                colvarStartingBillingMonth.IsPrimaryKey = false;
                colvarStartingBillingMonth.IsForeignKey = false;
                colvarStartingBillingMonth.IsReadOnly = false;
                
                schema.Columns.Add(colvarStartingBillingMonth);
                
                TableSchema.TableColumn colvarEndingBillingMonth = new TableSchema.TableColumn(schema);
                colvarEndingBillingMonth.ColumnName = "EndingBillingMonth";
                colvarEndingBillingMonth.DataType = DbType.DateTime;
                colvarEndingBillingMonth.MaxLength = 0;
                colvarEndingBillingMonth.AutoIncrement = false;
                colvarEndingBillingMonth.IsNullable = true;
                colvarEndingBillingMonth.IsPrimaryKey = false;
                colvarEndingBillingMonth.IsForeignKey = false;
                colvarEndingBillingMonth.IsReadOnly = false;
                
                schema.Columns.Add(colvarEndingBillingMonth);
                
                TableSchema.TableColumn colvarIsActive = new TableSchema.TableColumn(schema);
                colvarIsActive.ColumnName = "IsActive";
                colvarIsActive.DataType = DbType.Boolean;
                colvarIsActive.MaxLength = 0;
                colvarIsActive.AutoIncrement = false;
                colvarIsActive.IsNullable = true;
                colvarIsActive.IsPrimaryKey = false;
                colvarIsActive.IsForeignKey = false;
                colvarIsActive.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsActive);
                
                TableSchema.TableColumn colvarAdvertiseName = new TableSchema.TableColumn(schema);
                colvarAdvertiseName.ColumnName = "AdvertiseName";
                colvarAdvertiseName.DataType = DbType.AnsiString;
                colvarAdvertiseName.MaxLength = -1;
                colvarAdvertiseName.AutoIncrement = false;
                colvarAdvertiseName.IsNullable = true;
                colvarAdvertiseName.IsPrimaryKey = false;
                colvarAdvertiseName.IsForeignKey = false;
                colvarAdvertiseName.IsReadOnly = false;
                
                schema.Columns.Add(colvarAdvertiseName);
                
                TableSchema.TableColumn colvarAdsLocationID = new TableSchema.TableColumn(schema);
                colvarAdsLocationID.ColumnName = "AdsLocationID";
                colvarAdsLocationID.DataType = DbType.Int32;
                colvarAdsLocationID.MaxLength = 0;
                colvarAdsLocationID.AutoIncrement = false;
                colvarAdsLocationID.IsNullable = false;
                colvarAdsLocationID.IsPrimaryKey = false;
                colvarAdsLocationID.IsForeignKey = false;
                colvarAdsLocationID.IsReadOnly = false;
                
                schema.Columns.Add(colvarAdsLocationID);
                
                TableSchema.TableColumn colvarPosition = new TableSchema.TableColumn(schema);
                colvarPosition.ColumnName = "Position";
                colvarPosition.DataType = DbType.AnsiString;
                colvarPosition.MaxLength = 50;
                colvarPosition.AutoIncrement = false;
                colvarPosition.IsNullable = true;
                colvarPosition.IsPrimaryKey = false;
                colvarPosition.IsForeignKey = false;
                colvarPosition.IsReadOnly = false;
                
                schema.Columns.Add(colvarPosition);
                
                TableSchema.TableColumn colvarHeight = new TableSchema.TableColumn(schema);
                colvarHeight.ColumnName = "Height";
                colvarHeight.DataType = DbType.Decimal;
                colvarHeight.MaxLength = 0;
                colvarHeight.AutoIncrement = false;
                colvarHeight.IsNullable = true;
                colvarHeight.IsPrimaryKey = false;
                colvarHeight.IsForeignKey = false;
                colvarHeight.IsReadOnly = false;
                
                schema.Columns.Add(colvarHeight);
                
                TableSchema.TableColumn colvarWidth = new TableSchema.TableColumn(schema);
                colvarWidth.ColumnName = "Width";
                colvarWidth.DataType = DbType.Decimal;
                colvarWidth.MaxLength = 0;
                colvarWidth.AutoIncrement = false;
                colvarWidth.IsNullable = true;
                colvarWidth.IsPrimaryKey = false;
                colvarWidth.IsForeignKey = false;
                colvarWidth.IsReadOnly = false;
                
                schema.Columns.Add(colvarWidth);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["PrimaryProvider"].AddSchema("VwTblAdvertisement",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VwTblAdvertisement()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VwTblAdvertisement(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VwTblAdvertisement(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VwTblAdvertisement(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("AdvertiseID")]
        [Bindable(true)]
        public int AdvertiseID 
	    {
		    get
		    {
			    return GetColumnValue<int>("AdvertiseID");
		    }
            set 
		    {
			    SetColumnValue("AdvertiseID", value);
            }
        }
	      
        [XmlAttribute("ImageURL")]
        [Bindable(true)]
        public string ImageURL 
	    {
		    get
		    {
			    return GetColumnValue<string>("ImageURL");
		    }
            set 
		    {
			    SetColumnValue("ImageURL", value);
            }
        }
	      
        [XmlAttribute("StartingBillingMonth")]
        [Bindable(true)]
        public DateTime? StartingBillingMonth 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("StartingBillingMonth");
		    }
            set 
		    {
			    SetColumnValue("StartingBillingMonth", value);
            }
        }
	      
        [XmlAttribute("EndingBillingMonth")]
        [Bindable(true)]
        public DateTime? EndingBillingMonth 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("EndingBillingMonth");
		    }
            set 
		    {
			    SetColumnValue("EndingBillingMonth", value);
            }
        }
	      
        [XmlAttribute("IsActive")]
        [Bindable(true)]
        public bool? IsActive 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("IsActive");
		    }
            set 
		    {
			    SetColumnValue("IsActive", value);
            }
        }
	      
        [XmlAttribute("AdvertiseName")]
        [Bindable(true)]
        public string AdvertiseName 
	    {
		    get
		    {
			    return GetColumnValue<string>("AdvertiseName");
		    }
            set 
		    {
			    SetColumnValue("AdvertiseName", value);
            }
        }
	      
        [XmlAttribute("AdsLocationID")]
        [Bindable(true)]
        public int AdsLocationID 
	    {
		    get
		    {
			    return GetColumnValue<int>("AdsLocationID");
		    }
            set 
		    {
			    SetColumnValue("AdsLocationID", value);
            }
        }
	      
        [XmlAttribute("Position")]
        [Bindable(true)]
        public string Position 
	    {
		    get
		    {
			    return GetColumnValue<string>("Position");
		    }
            set 
		    {
			    SetColumnValue("Position", value);
            }
        }
	      
        [XmlAttribute("Height")]
        [Bindable(true)]
        public decimal? Height 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Height");
		    }
            set 
		    {
			    SetColumnValue("Height", value);
            }
        }
	      
        [XmlAttribute("Width")]
        [Bindable(true)]
        public decimal? Width 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("Width");
		    }
            set 
		    {
			    SetColumnValue("Width", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string AdvertiseID = @"AdvertiseID";
            
            public static string ImageURL = @"ImageURL";
            
            public static string StartingBillingMonth = @"StartingBillingMonth";
            
            public static string EndingBillingMonth = @"EndingBillingMonth";
            
            public static string IsActive = @"IsActive";
            
            public static string AdvertiseName = @"AdvertiseName";
            
            public static string AdsLocationID = @"AdsLocationID";
            
            public static string Position = @"Position";
            
            public static string Height = @"Height";
            
            public static string Width = @"Width";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
