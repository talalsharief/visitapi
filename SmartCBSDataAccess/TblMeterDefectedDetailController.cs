using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SmartCBSDataAccess
{
    /// <summary>
    /// Controller class for TblMeterDefectedDetail
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TblMeterDefectedDetailController
    {
        // Preload our schema..
        TblMeterDefectedDetail thisSchemaLoad = new TblMeterDefectedDetail();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TblMeterDefectedDetailCollection FetchAll()
        {
            TblMeterDefectedDetailCollection coll = new TblMeterDefectedDetailCollection();
            Query qry = new Query(TblMeterDefectedDetail.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblMeterDefectedDetailCollection FetchByID(object MeterDefectedDetailID)
        {
            TblMeterDefectedDetailCollection coll = new TblMeterDefectedDetailCollection().Where("MeterDefectedDetailID", MeterDefectedDetailID).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblMeterDefectedDetailCollection FetchByQuery(Query qry)
        {
            TblMeterDefectedDetailCollection coll = new TblMeterDefectedDetailCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object MeterDefectedDetailID)
        {
            return (TblMeterDefectedDetail.Delete(MeterDefectedDetailID) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object MeterDefectedDetailID)
        {
            return (TblMeterDefectedDetail.Destroy(MeterDefectedDetailID) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int? MeterID,int? ConsumerID,bool? IsDefected,DateTime? CreatedOn,DateTime? ModifiedOn,int? MeterDefectedID)
	    {
		    TblMeterDefectedDetail item = new TblMeterDefectedDetail();
		    
            item.MeterID = MeterID;
            
            item.ConsumerID = ConsumerID;
            
            item.IsDefected = IsDefected;
            
            item.CreatedOn = CreatedOn;
            
            item.ModifiedOn = ModifiedOn;
            
            item.MeterDefectedID = MeterDefectedID;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int MeterDefectedDetailID,int? MeterID,int? ConsumerID,bool? IsDefected,DateTime? CreatedOn,DateTime? ModifiedOn,int? MeterDefectedID)
	    {
		    TblMeterDefectedDetail item = new TblMeterDefectedDetail();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.MeterDefectedDetailID = MeterDefectedDetailID;
				
			item.MeterID = MeterID;
				
			item.ConsumerID = ConsumerID;
				
			item.IsDefected = IsDefected;
				
			item.CreatedOn = CreatedOn;
				
			item.ModifiedOn = ModifiedOn;
				
			item.MeterDefectedID = MeterDefectedID;
				
	        item.Save(UserName);
	    }
    }
}
