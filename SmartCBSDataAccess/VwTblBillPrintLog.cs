using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SmartCBSDataAccess{
    /// <summary>
    /// Strongly-typed collection for the VwTblBillPrintLog class.
    /// </summary>
    [Serializable]
    public partial class VwTblBillPrintLogCollection : ReadOnlyList<VwTblBillPrintLog, VwTblBillPrintLogCollection>
    {        
        public VwTblBillPrintLogCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the VwTblBillPrintLog view.
    /// </summary>
    [Serializable]
    public partial class VwTblBillPrintLog : ReadOnlyRecord<VwTblBillPrintLog>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("VwTblBillPrintLog", TableType.View, DataService.GetInstance("PrimaryProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarBillPrintLogID = new TableSchema.TableColumn(schema);
                colvarBillPrintLogID.ColumnName = "BillPrintLogID";
                colvarBillPrintLogID.DataType = DbType.Int32;
                colvarBillPrintLogID.MaxLength = 0;
                colvarBillPrintLogID.AutoIncrement = false;
                colvarBillPrintLogID.IsNullable = false;
                colvarBillPrintLogID.IsPrimaryKey = false;
                colvarBillPrintLogID.IsForeignKey = false;
                colvarBillPrintLogID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillPrintLogID);
                
                TableSchema.TableColumn colvarBillPrintTime = new TableSchema.TableColumn(schema);
                colvarBillPrintTime.ColumnName = "BillPrintTime";
                colvarBillPrintTime.DataType = DbType.DateTime;
                colvarBillPrintTime.MaxLength = 0;
                colvarBillPrintTime.AutoIncrement = false;
                colvarBillPrintTime.IsNullable = true;
                colvarBillPrintTime.IsPrimaryKey = false;
                colvarBillPrintTime.IsForeignKey = false;
                colvarBillPrintTime.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillPrintTime);
                
                TableSchema.TableColumn colvarActivity = new TableSchema.TableColumn(schema);
                colvarActivity.ColumnName = "Activity";
                colvarActivity.DataType = DbType.AnsiString;
                colvarActivity.MaxLength = 50;
                colvarActivity.AutoIncrement = false;
                colvarActivity.IsNullable = true;
                colvarActivity.IsPrimaryKey = false;
                colvarActivity.IsForeignKey = false;
                colvarActivity.IsReadOnly = false;
                
                schema.Columns.Add(colvarActivity);
                
                TableSchema.TableColumn colvarBillID = new TableSchema.TableColumn(schema);
                colvarBillID.ColumnName = "BillID";
                colvarBillID.DataType = DbType.Int32;
                colvarBillID.MaxLength = 0;
                colvarBillID.AutoIncrement = false;
                colvarBillID.IsNullable = false;
                colvarBillID.IsPrimaryKey = false;
                colvarBillID.IsForeignKey = false;
                colvarBillID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillID);
                
                TableSchema.TableColumn colvarBillNo = new TableSchema.TableColumn(schema);
                colvarBillNo.ColumnName = "BillNo";
                colvarBillNo.DataType = DbType.AnsiString;
                colvarBillNo.MaxLength = 100;
                colvarBillNo.AutoIncrement = false;
                colvarBillNo.IsNullable = true;
                colvarBillNo.IsPrimaryKey = false;
                colvarBillNo.IsForeignKey = false;
                colvarBillNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillNo);
                
                TableSchema.TableColumn colvarBillingMonth = new TableSchema.TableColumn(schema);
                colvarBillingMonth.ColumnName = "BillingMonth";
                colvarBillingMonth.DataType = DbType.AnsiString;
                colvarBillingMonth.MaxLength = 50;
                colvarBillingMonth.AutoIncrement = false;
                colvarBillingMonth.IsNullable = false;
                colvarBillingMonth.IsPrimaryKey = false;
                colvarBillingMonth.IsForeignKey = false;
                colvarBillingMonth.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillingMonth);
                
                TableSchema.TableColumn colvarBillingYear = new TableSchema.TableColumn(schema);
                colvarBillingYear.ColumnName = "BillingYear";
                colvarBillingYear.DataType = DbType.AnsiString;
                colvarBillingYear.MaxLength = 50;
                colvarBillingYear.AutoIncrement = false;
                colvarBillingYear.IsNullable = false;
                colvarBillingYear.IsPrimaryKey = false;
                colvarBillingYear.IsForeignKey = false;
                colvarBillingYear.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillingYear);
                
                TableSchema.TableColumn colvarUnitsBill = new TableSchema.TableColumn(schema);
                colvarUnitsBill.ColumnName = "UnitsBill";
                colvarUnitsBill.DataType = DbType.Decimal;
                colvarUnitsBill.MaxLength = 0;
                colvarUnitsBill.AutoIncrement = false;
                colvarUnitsBill.IsNullable = false;
                colvarUnitsBill.IsPrimaryKey = false;
                colvarUnitsBill.IsForeignKey = false;
                colvarUnitsBill.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitsBill);
                
                TableSchema.TableColumn colvarAmountPaybleDueDate = new TableSchema.TableColumn(schema);
                colvarAmountPaybleDueDate.ColumnName = "AmountPaybleDueDate";
                colvarAmountPaybleDueDate.DataType = DbType.Decimal;
                colvarAmountPaybleDueDate.MaxLength = 0;
                colvarAmountPaybleDueDate.AutoIncrement = false;
                colvarAmountPaybleDueDate.IsNullable = true;
                colvarAmountPaybleDueDate.IsPrimaryKey = false;
                colvarAmountPaybleDueDate.IsForeignKey = false;
                colvarAmountPaybleDueDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarAmountPaybleDueDate);
                
                TableSchema.TableColumn colvarAmountPaybleAfterDueDate = new TableSchema.TableColumn(schema);
                colvarAmountPaybleAfterDueDate.ColumnName = "AmountPaybleAfterDueDate";
                colvarAmountPaybleAfterDueDate.DataType = DbType.Decimal;
                colvarAmountPaybleAfterDueDate.MaxLength = 0;
                colvarAmountPaybleAfterDueDate.AutoIncrement = false;
                colvarAmountPaybleAfterDueDate.IsNullable = true;
                colvarAmountPaybleAfterDueDate.IsPrimaryKey = false;
                colvarAmountPaybleAfterDueDate.IsForeignKey = false;
                colvarAmountPaybleAfterDueDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarAmountPaybleAfterDueDate);
                
                TableSchema.TableColumn colvarActualBillPaybleDueDate = new TableSchema.TableColumn(schema);
                colvarActualBillPaybleDueDate.ColumnName = "ActualBillPaybleDueDate";
                colvarActualBillPaybleDueDate.DataType = DbType.Decimal;
                colvarActualBillPaybleDueDate.MaxLength = 0;
                colvarActualBillPaybleDueDate.AutoIncrement = false;
                colvarActualBillPaybleDueDate.IsNullable = true;
                colvarActualBillPaybleDueDate.IsPrimaryKey = false;
                colvarActualBillPaybleDueDate.IsForeignKey = false;
                colvarActualBillPaybleDueDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarActualBillPaybleDueDate);
                
                TableSchema.TableColumn colvarActualBillPaybleAfterDueDate = new TableSchema.TableColumn(schema);
                colvarActualBillPaybleAfterDueDate.ColumnName = "ActualBillPaybleAfterDueDate";
                colvarActualBillPaybleAfterDueDate.DataType = DbType.Decimal;
                colvarActualBillPaybleAfterDueDate.MaxLength = 0;
                colvarActualBillPaybleAfterDueDate.AutoIncrement = false;
                colvarActualBillPaybleAfterDueDate.IsNullable = true;
                colvarActualBillPaybleAfterDueDate.IsPrimaryKey = false;
                colvarActualBillPaybleAfterDueDate.IsForeignKey = false;
                colvarActualBillPaybleAfterDueDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarActualBillPaybleAfterDueDate);
                
                TableSchema.TableColumn colvarUserLoginId = new TableSchema.TableColumn(schema);
                colvarUserLoginId.ColumnName = "UserLoginId";
                colvarUserLoginId.DataType = DbType.Int32;
                colvarUserLoginId.MaxLength = 0;
                colvarUserLoginId.AutoIncrement = false;
                colvarUserLoginId.IsNullable = false;
                colvarUserLoginId.IsPrimaryKey = false;
                colvarUserLoginId.IsForeignKey = false;
                colvarUserLoginId.IsReadOnly = false;
                
                schema.Columns.Add(colvarUserLoginId);
                
                TableSchema.TableColumn colvarUserName = new TableSchema.TableColumn(schema);
                colvarUserName.ColumnName = "UserName";
                colvarUserName.DataType = DbType.AnsiString;
                colvarUserName.MaxLength = 50;
                colvarUserName.AutoIncrement = false;
                colvarUserName.IsNullable = false;
                colvarUserName.IsPrimaryKey = false;
                colvarUserName.IsForeignKey = false;
                colvarUserName.IsReadOnly = false;
                
                schema.Columns.Add(colvarUserName);
                
                TableSchema.TableColumn colvarEmailAddress = new TableSchema.TableColumn(schema);
                colvarEmailAddress.ColumnName = "EmailAddress";
                colvarEmailAddress.DataType = DbType.AnsiString;
                colvarEmailAddress.MaxLength = 50;
                colvarEmailAddress.AutoIncrement = false;
                colvarEmailAddress.IsNullable = true;
                colvarEmailAddress.IsPrimaryKey = false;
                colvarEmailAddress.IsForeignKey = false;
                colvarEmailAddress.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmailAddress);
                
                TableSchema.TableColumn colvarUserRoleId = new TableSchema.TableColumn(schema);
                colvarUserRoleId.ColumnName = "UserRoleId";
                colvarUserRoleId.DataType = DbType.Int32;
                colvarUserRoleId.MaxLength = 0;
                colvarUserRoleId.AutoIncrement = false;
                colvarUserRoleId.IsNullable = false;
                colvarUserRoleId.IsPrimaryKey = false;
                colvarUserRoleId.IsForeignKey = false;
                colvarUserRoleId.IsReadOnly = false;
                
                schema.Columns.Add(colvarUserRoleId);
                
                TableSchema.TableColumn colvarBranchID = new TableSchema.TableColumn(schema);
                colvarBranchID.ColumnName = "BranchID";
                colvarBranchID.DataType = DbType.Int32;
                colvarBranchID.MaxLength = 0;
                colvarBranchID.AutoIncrement = false;
                colvarBranchID.IsNullable = false;
                colvarBranchID.IsPrimaryKey = false;
                colvarBranchID.IsForeignKey = false;
                colvarBranchID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchID);
                
                TableSchema.TableColumn colvarBranchCode = new TableSchema.TableColumn(schema);
                colvarBranchCode.ColumnName = "BranchCode";
                colvarBranchCode.DataType = DbType.AnsiString;
                colvarBranchCode.MaxLength = 50;
                colvarBranchCode.AutoIncrement = false;
                colvarBranchCode.IsNullable = true;
                colvarBranchCode.IsPrimaryKey = false;
                colvarBranchCode.IsForeignKey = false;
                colvarBranchCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchCode);
                
                TableSchema.TableColumn colvarBranchName = new TableSchema.TableColumn(schema);
                colvarBranchName.ColumnName = "BranchName";
                colvarBranchName.DataType = DbType.AnsiString;
                colvarBranchName.MaxLength = 150;
                colvarBranchName.AutoIncrement = false;
                colvarBranchName.IsNullable = true;
                colvarBranchName.IsPrimaryKey = false;
                colvarBranchName.IsForeignKey = false;
                colvarBranchName.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchName);
                
                TableSchema.TableColumn colvarExpr1 = new TableSchema.TableColumn(schema);
                colvarExpr1.ColumnName = "Expr1";
                colvarExpr1.DataType = DbType.Int32;
                colvarExpr1.MaxLength = 0;
                colvarExpr1.AutoIncrement = false;
                colvarExpr1.IsNullable = false;
                colvarExpr1.IsPrimaryKey = false;
                colvarExpr1.IsForeignKey = false;
                colvarExpr1.IsReadOnly = false;
                
                schema.Columns.Add(colvarExpr1);
                
                TableSchema.TableColumn colvarUserRoleName = new TableSchema.TableColumn(schema);
                colvarUserRoleName.ColumnName = "UserRoleName";
                colvarUserRoleName.DataType = DbType.AnsiString;
                colvarUserRoleName.MaxLength = 50;
                colvarUserRoleName.AutoIncrement = false;
                colvarUserRoleName.IsNullable = true;
                colvarUserRoleName.IsPrimaryKey = false;
                colvarUserRoleName.IsForeignKey = false;
                colvarUserRoleName.IsReadOnly = false;
                
                schema.Columns.Add(colvarUserRoleName);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["PrimaryProvider"].AddSchema("VwTblBillPrintLog",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VwTblBillPrintLog()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VwTblBillPrintLog(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VwTblBillPrintLog(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VwTblBillPrintLog(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("BillPrintLogID")]
        [Bindable(true)]
        public int BillPrintLogID 
	    {
		    get
		    {
			    return GetColumnValue<int>("BillPrintLogID");
		    }
            set 
		    {
			    SetColumnValue("BillPrintLogID", value);
            }
        }
	      
        [XmlAttribute("BillPrintTime")]
        [Bindable(true)]
        public DateTime? BillPrintTime 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("BillPrintTime");
		    }
            set 
		    {
			    SetColumnValue("BillPrintTime", value);
            }
        }
	      
        [XmlAttribute("Activity")]
        [Bindable(true)]
        public string Activity 
	    {
		    get
		    {
			    return GetColumnValue<string>("Activity");
		    }
            set 
		    {
			    SetColumnValue("Activity", value);
            }
        }
	      
        [XmlAttribute("BillID")]
        [Bindable(true)]
        public int BillID 
	    {
		    get
		    {
			    return GetColumnValue<int>("BillID");
		    }
            set 
		    {
			    SetColumnValue("BillID", value);
            }
        }
	      
        [XmlAttribute("BillNo")]
        [Bindable(true)]
        public string BillNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("BillNo");
		    }
            set 
		    {
			    SetColumnValue("BillNo", value);
            }
        }
	      
        [XmlAttribute("BillingMonth")]
        [Bindable(true)]
        public string BillingMonth 
	    {
		    get
		    {
			    return GetColumnValue<string>("BillingMonth");
		    }
            set 
		    {
			    SetColumnValue("BillingMonth", value);
            }
        }
	      
        [XmlAttribute("BillingYear")]
        [Bindable(true)]
        public string BillingYear 
	    {
		    get
		    {
			    return GetColumnValue<string>("BillingYear");
		    }
            set 
		    {
			    SetColumnValue("BillingYear", value);
            }
        }
	      
        [XmlAttribute("UnitsBill")]
        [Bindable(true)]
        public decimal UnitsBill 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("UnitsBill");
		    }
            set 
		    {
			    SetColumnValue("UnitsBill", value);
            }
        }
	      
        [XmlAttribute("AmountPaybleDueDate")]
        [Bindable(true)]
        public decimal? AmountPaybleDueDate 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("AmountPaybleDueDate");
		    }
            set 
		    {
			    SetColumnValue("AmountPaybleDueDate", value);
            }
        }
	      
        [XmlAttribute("AmountPaybleAfterDueDate")]
        [Bindable(true)]
        public decimal? AmountPaybleAfterDueDate 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("AmountPaybleAfterDueDate");
		    }
            set 
		    {
			    SetColumnValue("AmountPaybleAfterDueDate", value);
            }
        }
	      
        [XmlAttribute("ActualBillPaybleDueDate")]
        [Bindable(true)]
        public decimal? ActualBillPaybleDueDate 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("ActualBillPaybleDueDate");
		    }
            set 
		    {
			    SetColumnValue("ActualBillPaybleDueDate", value);
            }
        }
	      
        [XmlAttribute("ActualBillPaybleAfterDueDate")]
        [Bindable(true)]
        public decimal? ActualBillPaybleAfterDueDate 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("ActualBillPaybleAfterDueDate");
		    }
            set 
		    {
			    SetColumnValue("ActualBillPaybleAfterDueDate", value);
            }
        }
	      
        [XmlAttribute("UserLoginId")]
        [Bindable(true)]
        public int UserLoginId 
	    {
		    get
		    {
			    return GetColumnValue<int>("UserLoginId");
		    }
            set 
		    {
			    SetColumnValue("UserLoginId", value);
            }
        }
	      
        [XmlAttribute("UserName")]
        [Bindable(true)]
        public string UserName 
	    {
		    get
		    {
			    return GetColumnValue<string>("UserName");
		    }
            set 
		    {
			    SetColumnValue("UserName", value);
            }
        }
	      
        [XmlAttribute("EmailAddress")]
        [Bindable(true)]
        public string EmailAddress 
	    {
		    get
		    {
			    return GetColumnValue<string>("EmailAddress");
		    }
            set 
		    {
			    SetColumnValue("EmailAddress", value);
            }
        }
	      
        [XmlAttribute("UserRoleId")]
        [Bindable(true)]
        public int UserRoleId 
	    {
		    get
		    {
			    return GetColumnValue<int>("UserRoleId");
		    }
            set 
		    {
			    SetColumnValue("UserRoleId", value);
            }
        }
	      
        [XmlAttribute("BranchID")]
        [Bindable(true)]
        public int BranchID 
	    {
		    get
		    {
			    return GetColumnValue<int>("BranchID");
		    }
            set 
		    {
			    SetColumnValue("BranchID", value);
            }
        }
	      
        [XmlAttribute("BranchCode")]
        [Bindable(true)]
        public string BranchCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("BranchCode");
		    }
            set 
		    {
			    SetColumnValue("BranchCode", value);
            }
        }
	      
        [XmlAttribute("BranchName")]
        [Bindable(true)]
        public string BranchName 
	    {
		    get
		    {
			    return GetColumnValue<string>("BranchName");
		    }
            set 
		    {
			    SetColumnValue("BranchName", value);
            }
        }
	      
        [XmlAttribute("Expr1")]
        [Bindable(true)]
        public int Expr1 
	    {
		    get
		    {
			    return GetColumnValue<int>("Expr1");
		    }
            set 
		    {
			    SetColumnValue("Expr1", value);
            }
        }
	      
        [XmlAttribute("UserRoleName")]
        [Bindable(true)]
        public string UserRoleName 
	    {
		    get
		    {
			    return GetColumnValue<string>("UserRoleName");
		    }
            set 
		    {
			    SetColumnValue("UserRoleName", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string BillPrintLogID = @"BillPrintLogID";
            
            public static string BillPrintTime = @"BillPrintTime";
            
            public static string Activity = @"Activity";
            
            public static string BillID = @"BillID";
            
            public static string BillNo = @"BillNo";
            
            public static string BillingMonth = @"BillingMonth";
            
            public static string BillingYear = @"BillingYear";
            
            public static string UnitsBill = @"UnitsBill";
            
            public static string AmountPaybleDueDate = @"AmountPaybleDueDate";
            
            public static string AmountPaybleAfterDueDate = @"AmountPaybleAfterDueDate";
            
            public static string ActualBillPaybleDueDate = @"ActualBillPaybleDueDate";
            
            public static string ActualBillPaybleAfterDueDate = @"ActualBillPaybleAfterDueDate";
            
            public static string UserLoginId = @"UserLoginId";
            
            public static string UserName = @"UserName";
            
            public static string EmailAddress = @"EmailAddress";
            
            public static string UserRoleId = @"UserRoleId";
            
            public static string BranchID = @"BranchID";
            
            public static string BranchCode = @"BranchCode";
            
            public static string BranchName = @"BranchName";
            
            public static string Expr1 = @"Expr1";
            
            public static string UserRoleName = @"UserRoleName";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
