using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SmartCBSDataAccess{
    /// <summary>
    /// Strongly-typed collection for the VwTblFeederReading class.
    /// </summary>
    [Serializable]
    public partial class VwTblFeederReadingCollection : ReadOnlyList<VwTblFeederReading, VwTblFeederReadingCollection>
    {        
        public VwTblFeederReadingCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the VwTblFeederReading view.
    /// </summary>
    [Serializable]
    public partial class VwTblFeederReading : ReadOnlyRecord<VwTblFeederReading>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("VwTblFeederReading", TableType.View, DataService.GetInstance("PrimaryProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarFeederReadingID = new TableSchema.TableColumn(schema);
                colvarFeederReadingID.ColumnName = "FeederReadingID";
                colvarFeederReadingID.DataType = DbType.Int32;
                colvarFeederReadingID.MaxLength = 0;
                colvarFeederReadingID.AutoIncrement = false;
                colvarFeederReadingID.IsNullable = false;
                colvarFeederReadingID.IsPrimaryKey = false;
                colvarFeederReadingID.IsForeignKey = false;
                colvarFeederReadingID.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederReadingID);
                
                TableSchema.TableColumn colvarFeederReadingMonth = new TableSchema.TableColumn(schema);
                colvarFeederReadingMonth.ColumnName = "FeederReadingMonth";
                colvarFeederReadingMonth.DataType = DbType.AnsiString;
                colvarFeederReadingMonth.MaxLength = 50;
                colvarFeederReadingMonth.AutoIncrement = false;
                colvarFeederReadingMonth.IsNullable = true;
                colvarFeederReadingMonth.IsPrimaryKey = false;
                colvarFeederReadingMonth.IsForeignKey = false;
                colvarFeederReadingMonth.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederReadingMonth);
                
                TableSchema.TableColumn colvarFeederReadingYear = new TableSchema.TableColumn(schema);
                colvarFeederReadingYear.ColumnName = "FeederReadingYear";
                colvarFeederReadingYear.DataType = DbType.AnsiString;
                colvarFeederReadingYear.MaxLength = 50;
                colvarFeederReadingYear.AutoIncrement = false;
                colvarFeederReadingYear.IsNullable = true;
                colvarFeederReadingYear.IsPrimaryKey = false;
                colvarFeederReadingYear.IsForeignKey = false;
                colvarFeederReadingYear.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederReadingYear);
                
                TableSchema.TableColumn colvarPreviousReading = new TableSchema.TableColumn(schema);
                colvarPreviousReading.ColumnName = "PreviousReading";
                colvarPreviousReading.DataType = DbType.Decimal;
                colvarPreviousReading.MaxLength = 0;
                colvarPreviousReading.AutoIncrement = false;
                colvarPreviousReading.IsNullable = true;
                colvarPreviousReading.IsPrimaryKey = false;
                colvarPreviousReading.IsForeignKey = false;
                colvarPreviousReading.IsReadOnly = false;
                
                schema.Columns.Add(colvarPreviousReading);
                
                TableSchema.TableColumn colvarCurrentReading = new TableSchema.TableColumn(schema);
                colvarCurrentReading.ColumnName = "CurrentReading";
                colvarCurrentReading.DataType = DbType.Decimal;
                colvarCurrentReading.MaxLength = 0;
                colvarCurrentReading.AutoIncrement = false;
                colvarCurrentReading.IsNullable = true;
                colvarCurrentReading.IsPrimaryKey = false;
                colvarCurrentReading.IsForeignKey = false;
                colvarCurrentReading.IsReadOnly = false;
                
                schema.Columns.Add(colvarCurrentReading);
                
                TableSchema.TableColumn colvarTotalUnits = new TableSchema.TableColumn(schema);
                colvarTotalUnits.ColumnName = "TotalUnits";
                colvarTotalUnits.DataType = DbType.Decimal;
                colvarTotalUnits.MaxLength = 0;
                colvarTotalUnits.AutoIncrement = false;
                colvarTotalUnits.IsNullable = true;
                colvarTotalUnits.IsPrimaryKey = false;
                colvarTotalUnits.IsForeignKey = false;
                colvarTotalUnits.IsReadOnly = false;
                
                schema.Columns.Add(colvarTotalUnits);
                
                TableSchema.TableColumn colvarMultiplyingFactor = new TableSchema.TableColumn(schema);
                colvarMultiplyingFactor.ColumnName = "MultiplyingFactor";
                colvarMultiplyingFactor.DataType = DbType.Decimal;
                colvarMultiplyingFactor.MaxLength = 0;
                colvarMultiplyingFactor.AutoIncrement = false;
                colvarMultiplyingFactor.IsNullable = true;
                colvarMultiplyingFactor.IsPrimaryKey = false;
                colvarMultiplyingFactor.IsForeignKey = false;
                colvarMultiplyingFactor.IsReadOnly = false;
                
                schema.Columns.Add(colvarMultiplyingFactor);
                
                TableSchema.TableColumn colvarUnitsConsumed = new TableSchema.TableColumn(schema);
                colvarUnitsConsumed.ColumnName = "UnitsConsumed";
                colvarUnitsConsumed.DataType = DbType.Decimal;
                colvarUnitsConsumed.MaxLength = 0;
                colvarUnitsConsumed.AutoIncrement = false;
                colvarUnitsConsumed.IsNullable = true;
                colvarUnitsConsumed.IsPrimaryKey = false;
                colvarUnitsConsumed.IsForeignKey = false;
                colvarUnitsConsumed.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitsConsumed);
                
                TableSchema.TableColumn colvarFeederReadingDate = new TableSchema.TableColumn(schema);
                colvarFeederReadingDate.ColumnName = "FeederReadingDate";
                colvarFeederReadingDate.DataType = DbType.DateTime;
                colvarFeederReadingDate.MaxLength = 0;
                colvarFeederReadingDate.AutoIncrement = false;
                colvarFeederReadingDate.IsNullable = true;
                colvarFeederReadingDate.IsPrimaryKey = false;
                colvarFeederReadingDate.IsForeignKey = false;
                colvarFeederReadingDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederReadingDate);
                
                TableSchema.TableColumn colvarFeederID = new TableSchema.TableColumn(schema);
                colvarFeederID.ColumnName = "FeederID";
                colvarFeederID.DataType = DbType.Int32;
                colvarFeederID.MaxLength = 0;
                colvarFeederID.AutoIncrement = false;
                colvarFeederID.IsNullable = true;
                colvarFeederID.IsPrimaryKey = false;
                colvarFeederID.IsForeignKey = false;
                colvarFeederID.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederID);
                
                TableSchema.TableColumn colvarFeederNo = new TableSchema.TableColumn(schema);
                colvarFeederNo.ColumnName = "FeederNo";
                colvarFeederNo.DataType = DbType.AnsiString;
                colvarFeederNo.MaxLength = -1;
                colvarFeederNo.AutoIncrement = false;
                colvarFeederNo.IsNullable = true;
                colvarFeederNo.IsPrimaryKey = false;
                colvarFeederNo.IsForeignKey = false;
                colvarFeederNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederNo);
                
                TableSchema.TableColumn colvarFeederCode = new TableSchema.TableColumn(schema);
                colvarFeederCode.ColumnName = "FeederCode";
                colvarFeederCode.DataType = DbType.AnsiString;
                colvarFeederCode.MaxLength = 50;
                colvarFeederCode.AutoIncrement = false;
                colvarFeederCode.IsNullable = true;
                colvarFeederCode.IsPrimaryKey = false;
                colvarFeederCode.IsForeignKey = false;
                colvarFeederCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederCode);
                
                TableSchema.TableColumn colvarFeederStatusID = new TableSchema.TableColumn(schema);
                colvarFeederStatusID.ColumnName = "FeederStatusID";
                colvarFeederStatusID.DataType = DbType.Int32;
                colvarFeederStatusID.MaxLength = 0;
                colvarFeederStatusID.AutoIncrement = false;
                colvarFeederStatusID.IsNullable = true;
                colvarFeederStatusID.IsPrimaryKey = false;
                colvarFeederStatusID.IsForeignKey = false;
                colvarFeederStatusID.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederStatusID);
                
                TableSchema.TableColumn colvarFeederStatusName = new TableSchema.TableColumn(schema);
                colvarFeederStatusName.ColumnName = "FeederStatusName";
                colvarFeederStatusName.DataType = DbType.AnsiString;
                colvarFeederStatusName.MaxLength = 50;
                colvarFeederStatusName.AutoIncrement = false;
                colvarFeederStatusName.IsNullable = true;
                colvarFeederStatusName.IsPrimaryKey = false;
                colvarFeederStatusName.IsForeignKey = false;
                colvarFeederStatusName.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederStatusName);
                
                TableSchema.TableColumn colvarFeederReadModeName = new TableSchema.TableColumn(schema);
                colvarFeederReadModeName.ColumnName = "FeederReadModeName";
                colvarFeederReadModeName.DataType = DbType.AnsiString;
                colvarFeederReadModeName.MaxLength = 50;
                colvarFeederReadModeName.AutoIncrement = false;
                colvarFeederReadModeName.IsNullable = true;
                colvarFeederReadModeName.IsPrimaryKey = false;
                colvarFeederReadModeName.IsForeignKey = false;
                colvarFeederReadModeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederReadModeName);
                
                TableSchema.TableColumn colvarFeederReadCode = new TableSchema.TableColumn(schema);
                colvarFeederReadCode.ColumnName = "FeederReadCode";
                colvarFeederReadCode.DataType = DbType.AnsiString;
                colvarFeederReadCode.MaxLength = 50;
                colvarFeederReadCode.AutoIncrement = false;
                colvarFeederReadCode.IsNullable = true;
                colvarFeederReadCode.IsPrimaryKey = false;
                colvarFeederReadCode.IsForeignKey = false;
                colvarFeederReadCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederReadCode);
                
                TableSchema.TableColumn colvarEmployeeID = new TableSchema.TableColumn(schema);
                colvarEmployeeID.ColumnName = "EmployeeID";
                colvarEmployeeID.DataType = DbType.Int32;
                colvarEmployeeID.MaxLength = 0;
                colvarEmployeeID.AutoIncrement = false;
                colvarEmployeeID.IsNullable = false;
                colvarEmployeeID.IsPrimaryKey = false;
                colvarEmployeeID.IsForeignKey = false;
                colvarEmployeeID.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmployeeID);
                
                TableSchema.TableColumn colvarEmployeeCode = new TableSchema.TableColumn(schema);
                colvarEmployeeCode.ColumnName = "EmployeeCode";
                colvarEmployeeCode.DataType = DbType.AnsiString;
                colvarEmployeeCode.MaxLength = 20;
                colvarEmployeeCode.AutoIncrement = false;
                colvarEmployeeCode.IsNullable = true;
                colvarEmployeeCode.IsPrimaryKey = false;
                colvarEmployeeCode.IsForeignKey = false;
                colvarEmployeeCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmployeeCode);
                
                TableSchema.TableColumn colvarEmployeeName = new TableSchema.TableColumn(schema);
                colvarEmployeeName.ColumnName = "EmployeeName";
                colvarEmployeeName.DataType = DbType.AnsiString;
                colvarEmployeeName.MaxLength = 100;
                colvarEmployeeName.AutoIncrement = false;
                colvarEmployeeName.IsNullable = true;
                colvarEmployeeName.IsPrimaryKey = false;
                colvarEmployeeName.IsForeignKey = false;
                colvarEmployeeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmployeeName);
                
                TableSchema.TableColumn colvarEmailAddress = new TableSchema.TableColumn(schema);
                colvarEmailAddress.ColumnName = "EmailAddress";
                colvarEmailAddress.DataType = DbType.AnsiString;
                colvarEmailAddress.MaxLength = 50;
                colvarEmailAddress.AutoIncrement = false;
                colvarEmailAddress.IsNullable = true;
                colvarEmailAddress.IsPrimaryKey = false;
                colvarEmailAddress.IsForeignKey = false;
                colvarEmailAddress.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmailAddress);
                
                TableSchema.TableColumn colvarMobileNo = new TableSchema.TableColumn(schema);
                colvarMobileNo.ColumnName = "MobileNo";
                colvarMobileNo.DataType = DbType.AnsiString;
                colvarMobileNo.MaxLength = 50;
                colvarMobileNo.AutoIncrement = false;
                colvarMobileNo.IsNullable = true;
                colvarMobileNo.IsPrimaryKey = false;
                colvarMobileNo.IsForeignKey = false;
                colvarMobileNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarMobileNo);
                
                TableSchema.TableColumn colvarPhoneNo = new TableSchema.TableColumn(schema);
                colvarPhoneNo.ColumnName = "PhoneNo";
                colvarPhoneNo.DataType = DbType.AnsiString;
                colvarPhoneNo.MaxLength = 50;
                colvarPhoneNo.AutoIncrement = false;
                colvarPhoneNo.IsNullable = true;
                colvarPhoneNo.IsPrimaryKey = false;
                colvarPhoneNo.IsForeignKey = false;
                colvarPhoneNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarPhoneNo);
                
                TableSchema.TableColumn colvarAddress = new TableSchema.TableColumn(schema);
                colvarAddress.ColumnName = "Address";
                colvarAddress.DataType = DbType.AnsiString;
                colvarAddress.MaxLength = 250;
                colvarAddress.AutoIncrement = false;
                colvarAddress.IsNullable = true;
                colvarAddress.IsPrimaryKey = false;
                colvarAddress.IsForeignKey = false;
                colvarAddress.IsReadOnly = false;
                
                schema.Columns.Add(colvarAddress);
                
                TableSchema.TableColumn colvarNic = new TableSchema.TableColumn(schema);
                colvarNic.ColumnName = "NIC";
                colvarNic.DataType = DbType.AnsiString;
                colvarNic.MaxLength = 50;
                colvarNic.AutoIncrement = false;
                colvarNic.IsNullable = true;
                colvarNic.IsPrimaryKey = false;
                colvarNic.IsForeignKey = false;
                colvarNic.IsReadOnly = false;
                
                schema.Columns.Add(colvarNic);
                
                TableSchema.TableColumn colvarBranchID = new TableSchema.TableColumn(schema);
                colvarBranchID.ColumnName = "BranchID";
                colvarBranchID.DataType = DbType.Int32;
                colvarBranchID.MaxLength = 0;
                colvarBranchID.AutoIncrement = false;
                colvarBranchID.IsNullable = false;
                colvarBranchID.IsPrimaryKey = false;
                colvarBranchID.IsForeignKey = false;
                colvarBranchID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchID);
                
                TableSchema.TableColumn colvarBranchCode = new TableSchema.TableColumn(schema);
                colvarBranchCode.ColumnName = "BranchCode";
                colvarBranchCode.DataType = DbType.AnsiString;
                colvarBranchCode.MaxLength = 50;
                colvarBranchCode.AutoIncrement = false;
                colvarBranchCode.IsNullable = true;
                colvarBranchCode.IsPrimaryKey = false;
                colvarBranchCode.IsForeignKey = false;
                colvarBranchCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchCode);
                
                TableSchema.TableColumn colvarBranchName = new TableSchema.TableColumn(schema);
                colvarBranchName.ColumnName = "BranchName";
                colvarBranchName.DataType = DbType.AnsiString;
                colvarBranchName.MaxLength = 150;
                colvarBranchName.AutoIncrement = false;
                colvarBranchName.IsNullable = true;
                colvarBranchName.IsPrimaryKey = false;
                colvarBranchName.IsForeignKey = false;
                colvarBranchName.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchName);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["PrimaryProvider"].AddSchema("VwTblFeederReading",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VwTblFeederReading()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VwTblFeederReading(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VwTblFeederReading(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VwTblFeederReading(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("FeederReadingID")]
        [Bindable(true)]
        public int FeederReadingID 
	    {
		    get
		    {
			    return GetColumnValue<int>("FeederReadingID");
		    }
            set 
		    {
			    SetColumnValue("FeederReadingID", value);
            }
        }
	      
        [XmlAttribute("FeederReadingMonth")]
        [Bindable(true)]
        public string FeederReadingMonth 
	    {
		    get
		    {
			    return GetColumnValue<string>("FeederReadingMonth");
		    }
            set 
		    {
			    SetColumnValue("FeederReadingMonth", value);
            }
        }
	      
        [XmlAttribute("FeederReadingYear")]
        [Bindable(true)]
        public string FeederReadingYear 
	    {
		    get
		    {
			    return GetColumnValue<string>("FeederReadingYear");
		    }
            set 
		    {
			    SetColumnValue("FeederReadingYear", value);
            }
        }
	      
        [XmlAttribute("PreviousReading")]
        [Bindable(true)]
        public decimal? PreviousReading 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("PreviousReading");
		    }
            set 
		    {
			    SetColumnValue("PreviousReading", value);
            }
        }
	      
        [XmlAttribute("CurrentReading")]
        [Bindable(true)]
        public decimal? CurrentReading 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("CurrentReading");
		    }
            set 
		    {
			    SetColumnValue("CurrentReading", value);
            }
        }
	      
        [XmlAttribute("TotalUnits")]
        [Bindable(true)]
        public decimal? TotalUnits 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("TotalUnits");
		    }
            set 
		    {
			    SetColumnValue("TotalUnits", value);
            }
        }
	      
        [XmlAttribute("MultiplyingFactor")]
        [Bindable(true)]
        public decimal? MultiplyingFactor 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("MultiplyingFactor");
		    }
            set 
		    {
			    SetColumnValue("MultiplyingFactor", value);
            }
        }
	      
        [XmlAttribute("UnitsConsumed")]
        [Bindable(true)]
        public decimal? UnitsConsumed 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("UnitsConsumed");
		    }
            set 
		    {
			    SetColumnValue("UnitsConsumed", value);
            }
        }
	      
        [XmlAttribute("FeederReadingDate")]
        [Bindable(true)]
        public DateTime? FeederReadingDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("FeederReadingDate");
		    }
            set 
		    {
			    SetColumnValue("FeederReadingDate", value);
            }
        }
	      
        [XmlAttribute("FeederID")]
        [Bindable(true)]
        public int? FeederID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("FeederID");
		    }
            set 
		    {
			    SetColumnValue("FeederID", value);
            }
        }
	      
        [XmlAttribute("FeederNo")]
        [Bindable(true)]
        public string FeederNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("FeederNo");
		    }
            set 
		    {
			    SetColumnValue("FeederNo", value);
            }
        }
	      
        [XmlAttribute("FeederCode")]
        [Bindable(true)]
        public string FeederCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("FeederCode");
		    }
            set 
		    {
			    SetColumnValue("FeederCode", value);
            }
        }
	      
        [XmlAttribute("FeederStatusID")]
        [Bindable(true)]
        public int? FeederStatusID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("FeederStatusID");
		    }
            set 
		    {
			    SetColumnValue("FeederStatusID", value);
            }
        }
	      
        [XmlAttribute("FeederStatusName")]
        [Bindable(true)]
        public string FeederStatusName 
	    {
		    get
		    {
			    return GetColumnValue<string>("FeederStatusName");
		    }
            set 
		    {
			    SetColumnValue("FeederStatusName", value);
            }
        }
	      
        [XmlAttribute("FeederReadModeName")]
        [Bindable(true)]
        public string FeederReadModeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("FeederReadModeName");
		    }
            set 
		    {
			    SetColumnValue("FeederReadModeName", value);
            }
        }
	      
        [XmlAttribute("FeederReadCode")]
        [Bindable(true)]
        public string FeederReadCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("FeederReadCode");
		    }
            set 
		    {
			    SetColumnValue("FeederReadCode", value);
            }
        }
	      
        [XmlAttribute("EmployeeID")]
        [Bindable(true)]
        public int EmployeeID 
	    {
		    get
		    {
			    return GetColumnValue<int>("EmployeeID");
		    }
            set 
		    {
			    SetColumnValue("EmployeeID", value);
            }
        }
	      
        [XmlAttribute("EmployeeCode")]
        [Bindable(true)]
        public string EmployeeCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("EmployeeCode");
		    }
            set 
		    {
			    SetColumnValue("EmployeeCode", value);
            }
        }
	      
        [XmlAttribute("EmployeeName")]
        [Bindable(true)]
        public string EmployeeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("EmployeeName");
		    }
            set 
		    {
			    SetColumnValue("EmployeeName", value);
            }
        }
	      
        [XmlAttribute("EmailAddress")]
        [Bindable(true)]
        public string EmailAddress 
	    {
		    get
		    {
			    return GetColumnValue<string>("EmailAddress");
		    }
            set 
		    {
			    SetColumnValue("EmailAddress", value);
            }
        }
	      
        [XmlAttribute("MobileNo")]
        [Bindable(true)]
        public string MobileNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("MobileNo");
		    }
            set 
		    {
			    SetColumnValue("MobileNo", value);
            }
        }
	      
        [XmlAttribute("PhoneNo")]
        [Bindable(true)]
        public string PhoneNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("PhoneNo");
		    }
            set 
		    {
			    SetColumnValue("PhoneNo", value);
            }
        }
	      
        [XmlAttribute("Address")]
        [Bindable(true)]
        public string Address 
	    {
		    get
		    {
			    return GetColumnValue<string>("Address");
		    }
            set 
		    {
			    SetColumnValue("Address", value);
            }
        }
	      
        [XmlAttribute("Nic")]
        [Bindable(true)]
        public string Nic 
	    {
		    get
		    {
			    return GetColumnValue<string>("NIC");
		    }
            set 
		    {
			    SetColumnValue("NIC", value);
            }
        }
	      
        [XmlAttribute("BranchID")]
        [Bindable(true)]
        public int BranchID 
	    {
		    get
		    {
			    return GetColumnValue<int>("BranchID");
		    }
            set 
		    {
			    SetColumnValue("BranchID", value);
            }
        }
	      
        [XmlAttribute("BranchCode")]
        [Bindable(true)]
        public string BranchCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("BranchCode");
		    }
            set 
		    {
			    SetColumnValue("BranchCode", value);
            }
        }
	      
        [XmlAttribute("BranchName")]
        [Bindable(true)]
        public string BranchName 
	    {
		    get
		    {
			    return GetColumnValue<string>("BranchName");
		    }
            set 
		    {
			    SetColumnValue("BranchName", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string FeederReadingID = @"FeederReadingID";
            
            public static string FeederReadingMonth = @"FeederReadingMonth";
            
            public static string FeederReadingYear = @"FeederReadingYear";
            
            public static string PreviousReading = @"PreviousReading";
            
            public static string CurrentReading = @"CurrentReading";
            
            public static string TotalUnits = @"TotalUnits";
            
            public static string MultiplyingFactor = @"MultiplyingFactor";
            
            public static string UnitsConsumed = @"UnitsConsumed";
            
            public static string FeederReadingDate = @"FeederReadingDate";
            
            public static string FeederID = @"FeederID";
            
            public static string FeederNo = @"FeederNo";
            
            public static string FeederCode = @"FeederCode";
            
            public static string FeederStatusID = @"FeederStatusID";
            
            public static string FeederStatusName = @"FeederStatusName";
            
            public static string FeederReadModeName = @"FeederReadModeName";
            
            public static string FeederReadCode = @"FeederReadCode";
            
            public static string EmployeeID = @"EmployeeID";
            
            public static string EmployeeCode = @"EmployeeCode";
            
            public static string EmployeeName = @"EmployeeName";
            
            public static string EmailAddress = @"EmailAddress";
            
            public static string MobileNo = @"MobileNo";
            
            public static string PhoneNo = @"PhoneNo";
            
            public static string Address = @"Address";
            
            public static string Nic = @"NIC";
            
            public static string BranchID = @"BranchID";
            
            public static string BranchCode = @"BranchCode";
            
            public static string BranchName = @"BranchName";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
