using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SmartCBSDataAccess
{
    /// <summary>
    /// Controller class for TblMeterReadingData
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TblMeterReadingDatumController
    {
        // Preload our schema..
        TblMeterReadingDatum thisSchemaLoad = new TblMeterReadingDatum();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TblMeterReadingDatumCollection FetchAll()
        {
            TblMeterReadingDatumCollection coll = new TblMeterReadingDatumCollection();
            Query qry = new Query(TblMeterReadingDatum.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblMeterReadingDatumCollection FetchByID(object DataID)
        {
            TblMeterReadingDatumCollection coll = new TblMeterReadingDatumCollection().Where("DataID", DataID).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblMeterReadingDatumCollection FetchByQuery(Query qry)
        {
            TblMeterReadingDatumCollection coll = new TblMeterReadingDatumCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object DataID)
        {
            return (TblMeterReadingDatum.Delete(DataID) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object DataID)
        {
            return (TblMeterReadingDatum.Destroy(DataID) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(string MeterNo,DateTime? MeterReadingDate,decimal? MeterReading,string Remarks,int? ApprovalStatusID,int? UploadedBy,DateTime? CreatedOn,DateTime? ModifiedOn,string Month,string Year,int? ConsumerID,int? MultiplyingFactor,int? CLoad)
	    {
		    TblMeterReadingDatum item = new TblMeterReadingDatum();
		    
            item.MeterNo = MeterNo;
            
            item.MeterReadingDate = MeterReadingDate;
            
            item.MeterReading = MeterReading;
            
            item.Remarks = Remarks;
            
            item.ApprovalStatusID = ApprovalStatusID;
            
            item.UploadedBy = UploadedBy;
            
            item.CreatedOn = CreatedOn;
            
            item.ModifiedOn = ModifiedOn;
            
            item.Month = Month;
            
            item.Year = Year;
            
            item.ConsumerID = ConsumerID;
            
            item.MultiplyingFactor = MultiplyingFactor;
            
            item.CLoad = CLoad;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int DataID,string MeterNo,DateTime? MeterReadingDate,decimal? MeterReading,string Remarks,int? ApprovalStatusID,int? UploadedBy,DateTime? CreatedOn,DateTime? ModifiedOn,string Month,string Year,int? ConsumerID,int? MultiplyingFactor,int? CLoad)
	    {
		    TblMeterReadingDatum item = new TblMeterReadingDatum();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.DataID = DataID;
				
			item.MeterNo = MeterNo;
				
			item.MeterReadingDate = MeterReadingDate;
				
			item.MeterReading = MeterReading;
				
			item.Remarks = Remarks;
				
			item.ApprovalStatusID = ApprovalStatusID;
				
			item.UploadedBy = UploadedBy;
				
			item.CreatedOn = CreatedOn;
				
			item.ModifiedOn = ModifiedOn;
				
			item.Month = Month;
				
			item.Year = Year;
				
			item.ConsumerID = ConsumerID;
				
			item.MultiplyingFactor = MultiplyingFactor;
				
			item.CLoad = CLoad;
				
	        item.Save(UserName);
	    }
    }
}
