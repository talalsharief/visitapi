using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SmartCBSDataAccess{
    /// <summary>
    /// Strongly-typed collection for the VwBillPaymentDatum class.
    /// </summary>
    [Serializable]
    public partial class VwBillPaymentDatumCollection : ReadOnlyList<VwBillPaymentDatum, VwBillPaymentDatumCollection>
    {        
        public VwBillPaymentDatumCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the VwBillPaymentData view.
    /// </summary>
    [Serializable]
    public partial class VwBillPaymentDatum : ReadOnlyRecord<VwBillPaymentDatum>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("VwBillPaymentData", TableType.View, DataService.GetInstance("PrimaryProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarEmployeeName = new TableSchema.TableColumn(schema);
                colvarEmployeeName.ColumnName = "EmployeeName";
                colvarEmployeeName.DataType = DbType.AnsiString;
                colvarEmployeeName.MaxLength = 100;
                colvarEmployeeName.AutoIncrement = false;
                colvarEmployeeName.IsNullable = true;
                colvarEmployeeName.IsPrimaryKey = false;
                colvarEmployeeName.IsForeignKey = false;
                colvarEmployeeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmployeeName);
                
                TableSchema.TableColumn colvarEmployeeID = new TableSchema.TableColumn(schema);
                colvarEmployeeID.ColumnName = "EmployeeID";
                colvarEmployeeID.DataType = DbType.Int32;
                colvarEmployeeID.MaxLength = 0;
                colvarEmployeeID.AutoIncrement = false;
                colvarEmployeeID.IsNullable = true;
                colvarEmployeeID.IsPrimaryKey = false;
                colvarEmployeeID.IsForeignKey = false;
                colvarEmployeeID.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmployeeID);
                
                TableSchema.TableColumn colvarDataID = new TableSchema.TableColumn(schema);
                colvarDataID.ColumnName = "DataID";
                colvarDataID.DataType = DbType.Int32;
                colvarDataID.MaxLength = 0;
                colvarDataID.AutoIncrement = false;
                colvarDataID.IsNullable = false;
                colvarDataID.IsPrimaryKey = false;
                colvarDataID.IsForeignKey = false;
                colvarDataID.IsReadOnly = false;
                
                schema.Columns.Add(colvarDataID);
                
                TableSchema.TableColumn colvarBillNo = new TableSchema.TableColumn(schema);
                colvarBillNo.ColumnName = "BillNo";
                colvarBillNo.DataType = DbType.AnsiString;
                colvarBillNo.MaxLength = 100;
                colvarBillNo.AutoIncrement = false;
                colvarBillNo.IsNullable = true;
                colvarBillNo.IsPrimaryKey = false;
                colvarBillNo.IsForeignKey = false;
                colvarBillNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillNo);
                
                TableSchema.TableColumn colvarPaymentDate = new TableSchema.TableColumn(schema);
                colvarPaymentDate.ColumnName = "PaymentDate";
                colvarPaymentDate.DataType = DbType.DateTime;
                colvarPaymentDate.MaxLength = 0;
                colvarPaymentDate.AutoIncrement = false;
                colvarPaymentDate.IsNullable = true;
                colvarPaymentDate.IsPrimaryKey = false;
                colvarPaymentDate.IsForeignKey = false;
                colvarPaymentDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentDate);
                
                TableSchema.TableColumn colvarAmountPaid = new TableSchema.TableColumn(schema);
                colvarAmountPaid.ColumnName = "AmountPaid";
                colvarAmountPaid.DataType = DbType.Decimal;
                colvarAmountPaid.MaxLength = 0;
                colvarAmountPaid.AutoIncrement = false;
                colvarAmountPaid.IsNullable = true;
                colvarAmountPaid.IsPrimaryKey = false;
                colvarAmountPaid.IsForeignKey = false;
                colvarAmountPaid.IsReadOnly = false;
                
                schema.Columns.Add(colvarAmountPaid);
                
                TableSchema.TableColumn colvarApprovalStatusID = new TableSchema.TableColumn(schema);
                colvarApprovalStatusID.ColumnName = "ApprovalStatusID";
                colvarApprovalStatusID.DataType = DbType.Int32;
                colvarApprovalStatusID.MaxLength = 0;
                colvarApprovalStatusID.AutoIncrement = false;
                colvarApprovalStatusID.IsNullable = true;
                colvarApprovalStatusID.IsPrimaryKey = false;
                colvarApprovalStatusID.IsForeignKey = false;
                colvarApprovalStatusID.IsReadOnly = false;
                
                schema.Columns.Add(colvarApprovalStatusID);
                
                TableSchema.TableColumn colvarUploadedBy = new TableSchema.TableColumn(schema);
                colvarUploadedBy.ColumnName = "UploadedBy";
                colvarUploadedBy.DataType = DbType.Int32;
                colvarUploadedBy.MaxLength = 0;
                colvarUploadedBy.AutoIncrement = false;
                colvarUploadedBy.IsNullable = true;
                colvarUploadedBy.IsPrimaryKey = false;
                colvarUploadedBy.IsForeignKey = false;
                colvarUploadedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarUploadedBy);
                
                TableSchema.TableColumn colvarCreatedOn = new TableSchema.TableColumn(schema);
                colvarCreatedOn.ColumnName = "CreatedOn";
                colvarCreatedOn.DataType = DbType.DateTime;
                colvarCreatedOn.MaxLength = 0;
                colvarCreatedOn.AutoIncrement = false;
                colvarCreatedOn.IsNullable = true;
                colvarCreatedOn.IsPrimaryKey = false;
                colvarCreatedOn.IsForeignKey = false;
                colvarCreatedOn.IsReadOnly = false;
                
                schema.Columns.Add(colvarCreatedOn);
                
                TableSchema.TableColumn colvarModifiedOn = new TableSchema.TableColumn(schema);
                colvarModifiedOn.ColumnName = "ModifiedOn";
                colvarModifiedOn.DataType = DbType.DateTime;
                colvarModifiedOn.MaxLength = 0;
                colvarModifiedOn.AutoIncrement = false;
                colvarModifiedOn.IsNullable = true;
                colvarModifiedOn.IsPrimaryKey = false;
                colvarModifiedOn.IsForeignKey = false;
                colvarModifiedOn.IsReadOnly = false;
                
                schema.Columns.Add(colvarModifiedOn);
                
                TableSchema.TableColumn colvarRemarks = new TableSchema.TableColumn(schema);
                colvarRemarks.ColumnName = "Remarks";
                colvarRemarks.DataType = DbType.AnsiString;
                colvarRemarks.MaxLength = 150;
                colvarRemarks.AutoIncrement = false;
                colvarRemarks.IsNullable = true;
                colvarRemarks.IsPrimaryKey = false;
                colvarRemarks.IsForeignKey = false;
                colvarRemarks.IsReadOnly = false;
                
                schema.Columns.Add(colvarRemarks);
                
                TableSchema.TableColumn colvarCollectionPoint = new TableSchema.TableColumn(schema);
                colvarCollectionPoint.ColumnName = "CollectionPoint";
                colvarCollectionPoint.DataType = DbType.AnsiString;
                colvarCollectionPoint.MaxLength = 150;
                colvarCollectionPoint.AutoIncrement = false;
                colvarCollectionPoint.IsNullable = true;
                colvarCollectionPoint.IsPrimaryKey = false;
                colvarCollectionPoint.IsForeignKey = false;
                colvarCollectionPoint.IsReadOnly = false;
                
                schema.Columns.Add(colvarCollectionPoint);
                
                TableSchema.TableColumn colvarCollectionPointID = new TableSchema.TableColumn(schema);
                colvarCollectionPointID.ColumnName = "CollectionPointID";
                colvarCollectionPointID.DataType = DbType.Int32;
                colvarCollectionPointID.MaxLength = 0;
                colvarCollectionPointID.AutoIncrement = false;
                colvarCollectionPointID.IsNullable = true;
                colvarCollectionPointID.IsPrimaryKey = false;
                colvarCollectionPointID.IsForeignKey = false;
                colvarCollectionPointID.IsReadOnly = false;
                
                schema.Columns.Add(colvarCollectionPointID);
                
                TableSchema.TableColumn colvarApprovalStatus = new TableSchema.TableColumn(schema);
                colvarApprovalStatus.ColumnName = "ApprovalStatus";
                colvarApprovalStatus.DataType = DbType.AnsiString;
                colvarApprovalStatus.MaxLength = 50;
                colvarApprovalStatus.AutoIncrement = false;
                colvarApprovalStatus.IsNullable = true;
                colvarApprovalStatus.IsPrimaryKey = false;
                colvarApprovalStatus.IsForeignKey = false;
                colvarApprovalStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarApprovalStatus);
                
                TableSchema.TableColumn colvarApprovalID = new TableSchema.TableColumn(schema);
                colvarApprovalID.ColumnName = "ApprovalID";
                colvarApprovalID.DataType = DbType.Int32;
                colvarApprovalID.MaxLength = 0;
                colvarApprovalID.AutoIncrement = false;
                colvarApprovalID.IsNullable = false;
                colvarApprovalID.IsPrimaryKey = false;
                colvarApprovalID.IsForeignKey = false;
                colvarApprovalID.IsReadOnly = false;
                
                schema.Columns.Add(colvarApprovalID);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["PrimaryProvider"].AddSchema("VwBillPaymentData",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VwBillPaymentDatum()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VwBillPaymentDatum(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VwBillPaymentDatum(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VwBillPaymentDatum(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("EmployeeName")]
        [Bindable(true)]
        public string EmployeeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("EmployeeName");
		    }
            set 
		    {
			    SetColumnValue("EmployeeName", value);
            }
        }
	      
        [XmlAttribute("EmployeeID")]
        [Bindable(true)]
        public int? EmployeeID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("EmployeeID");
		    }
            set 
		    {
			    SetColumnValue("EmployeeID", value);
            }
        }
	      
        [XmlAttribute("DataID")]
        [Bindable(true)]
        public int DataID 
	    {
		    get
		    {
			    return GetColumnValue<int>("DataID");
		    }
            set 
		    {
			    SetColumnValue("DataID", value);
            }
        }
	      
        [XmlAttribute("BillNo")]
        [Bindable(true)]
        public string BillNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("BillNo");
		    }
            set 
		    {
			    SetColumnValue("BillNo", value);
            }
        }
	      
        [XmlAttribute("PaymentDate")]
        [Bindable(true)]
        public DateTime? PaymentDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("PaymentDate");
		    }
            set 
		    {
			    SetColumnValue("PaymentDate", value);
            }
        }
	      
        [XmlAttribute("AmountPaid")]
        [Bindable(true)]
        public decimal? AmountPaid 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("AmountPaid");
		    }
            set 
		    {
			    SetColumnValue("AmountPaid", value);
            }
        }
	      
        [XmlAttribute("ApprovalStatusID")]
        [Bindable(true)]
        public int? ApprovalStatusID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ApprovalStatusID");
		    }
            set 
		    {
			    SetColumnValue("ApprovalStatusID", value);
            }
        }
	      
        [XmlAttribute("UploadedBy")]
        [Bindable(true)]
        public int? UploadedBy 
	    {
		    get
		    {
			    return GetColumnValue<int?>("UploadedBy");
		    }
            set 
		    {
			    SetColumnValue("UploadedBy", value);
            }
        }
	      
        [XmlAttribute("CreatedOn")]
        [Bindable(true)]
        public DateTime? CreatedOn 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("CreatedOn");
		    }
            set 
		    {
			    SetColumnValue("CreatedOn", value);
            }
        }
	      
        [XmlAttribute("ModifiedOn")]
        [Bindable(true)]
        public DateTime? ModifiedOn 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("ModifiedOn");
		    }
            set 
		    {
			    SetColumnValue("ModifiedOn", value);
            }
        }
	      
        [XmlAttribute("Remarks")]
        [Bindable(true)]
        public string Remarks 
	    {
		    get
		    {
			    return GetColumnValue<string>("Remarks");
		    }
            set 
		    {
			    SetColumnValue("Remarks", value);
            }
        }
	      
        [XmlAttribute("CollectionPoint")]
        [Bindable(true)]
        public string CollectionPoint 
	    {
		    get
		    {
			    return GetColumnValue<string>("CollectionPoint");
		    }
            set 
		    {
			    SetColumnValue("CollectionPoint", value);
            }
        }
	      
        [XmlAttribute("CollectionPointID")]
        [Bindable(true)]
        public int? CollectionPointID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("CollectionPointID");
		    }
            set 
		    {
			    SetColumnValue("CollectionPointID", value);
            }
        }
	      
        [XmlAttribute("ApprovalStatus")]
        [Bindable(true)]
        public string ApprovalStatus 
	    {
		    get
		    {
			    return GetColumnValue<string>("ApprovalStatus");
		    }
            set 
		    {
			    SetColumnValue("ApprovalStatus", value);
            }
        }
	      
        [XmlAttribute("ApprovalID")]
        [Bindable(true)]
        public int ApprovalID 
	    {
		    get
		    {
			    return GetColumnValue<int>("ApprovalID");
		    }
            set 
		    {
			    SetColumnValue("ApprovalID", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string EmployeeName = @"EmployeeName";
            
            public static string EmployeeID = @"EmployeeID";
            
            public static string DataID = @"DataID";
            
            public static string BillNo = @"BillNo";
            
            public static string PaymentDate = @"PaymentDate";
            
            public static string AmountPaid = @"AmountPaid";
            
            public static string ApprovalStatusID = @"ApprovalStatusID";
            
            public static string UploadedBy = @"UploadedBy";
            
            public static string CreatedOn = @"CreatedOn";
            
            public static string ModifiedOn = @"ModifiedOn";
            
            public static string Remarks = @"Remarks";
            
            public static string CollectionPoint = @"CollectionPoint";
            
            public static string CollectionPointID = @"CollectionPointID";
            
            public static string ApprovalStatus = @"ApprovalStatus";
            
            public static string ApprovalID = @"ApprovalID";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
