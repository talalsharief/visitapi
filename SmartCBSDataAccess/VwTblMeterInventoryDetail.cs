using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SmartCBSDataAccess{
    /// <summary>
    /// Strongly-typed collection for the VwTblMeterInventoryDetail class.
    /// </summary>
    [Serializable]
    public partial class VwTblMeterInventoryDetailCollection : ReadOnlyList<VwTblMeterInventoryDetail, VwTblMeterInventoryDetailCollection>
    {        
        public VwTblMeterInventoryDetailCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the VwTblMeterInventoryDetail view.
    /// </summary>
    [Serializable]
    public partial class VwTblMeterInventoryDetail : ReadOnlyRecord<VwTblMeterInventoryDetail>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("VwTblMeterInventoryDetail", TableType.View, DataService.GetInstance("PrimaryProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarMeterInventoryID = new TableSchema.TableColumn(schema);
                colvarMeterInventoryID.ColumnName = "MeterInventoryID";
                colvarMeterInventoryID.DataType = DbType.Int32;
                colvarMeterInventoryID.MaxLength = 0;
                colvarMeterInventoryID.AutoIncrement = false;
                colvarMeterInventoryID.IsNullable = false;
                colvarMeterInventoryID.IsPrimaryKey = false;
                colvarMeterInventoryID.IsForeignKey = false;
                colvarMeterInventoryID.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterInventoryID);
                
                TableSchema.TableColumn colvarInvCreatedOn = new TableSchema.TableColumn(schema);
                colvarInvCreatedOn.ColumnName = "InvCreatedOn";
                colvarInvCreatedOn.DataType = DbType.DateTime;
                colvarInvCreatedOn.MaxLength = 0;
                colvarInvCreatedOn.AutoIncrement = false;
                colvarInvCreatedOn.IsNullable = true;
                colvarInvCreatedOn.IsPrimaryKey = false;
                colvarInvCreatedOn.IsForeignKey = false;
                colvarInvCreatedOn.IsReadOnly = false;
                
                schema.Columns.Add(colvarInvCreatedOn);
                
                TableSchema.TableColumn colvarQtyInTo = new TableSchema.TableColumn(schema);
                colvarQtyInTo.ColumnName = "QtyInTo";
                colvarQtyInTo.DataType = DbType.Int32;
                colvarQtyInTo.MaxLength = 0;
                colvarQtyInTo.AutoIncrement = false;
                colvarQtyInTo.IsNullable = true;
                colvarQtyInTo.IsPrimaryKey = false;
                colvarQtyInTo.IsForeignKey = false;
                colvarQtyInTo.IsReadOnly = false;
                
                schema.Columns.Add(colvarQtyInTo);
                
                TableSchema.TableColumn colvarEmployeeID = new TableSchema.TableColumn(schema);
                colvarEmployeeID.ColumnName = "EmployeeID";
                colvarEmployeeID.DataType = DbType.Int32;
                colvarEmployeeID.MaxLength = 0;
                colvarEmployeeID.AutoIncrement = false;
                colvarEmployeeID.IsNullable = false;
                colvarEmployeeID.IsPrimaryKey = false;
                colvarEmployeeID.IsForeignKey = false;
                colvarEmployeeID.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmployeeID);
                
                TableSchema.TableColumn colvarEmployeeCode = new TableSchema.TableColumn(schema);
                colvarEmployeeCode.ColumnName = "EmployeeCode";
                colvarEmployeeCode.DataType = DbType.AnsiString;
                colvarEmployeeCode.MaxLength = 20;
                colvarEmployeeCode.AutoIncrement = false;
                colvarEmployeeCode.IsNullable = true;
                colvarEmployeeCode.IsPrimaryKey = false;
                colvarEmployeeCode.IsForeignKey = false;
                colvarEmployeeCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmployeeCode);
                
                TableSchema.TableColumn colvarEmployeeName = new TableSchema.TableColumn(schema);
                colvarEmployeeName.ColumnName = "EmployeeName";
                colvarEmployeeName.DataType = DbType.AnsiString;
                colvarEmployeeName.MaxLength = 100;
                colvarEmployeeName.AutoIncrement = false;
                colvarEmployeeName.IsNullable = true;
                colvarEmployeeName.IsPrimaryKey = false;
                colvarEmployeeName.IsForeignKey = false;
                colvarEmployeeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmployeeName);
                
                TableSchema.TableColumn colvarEmailAddress = new TableSchema.TableColumn(schema);
                colvarEmailAddress.ColumnName = "EmailAddress";
                colvarEmailAddress.DataType = DbType.AnsiString;
                colvarEmailAddress.MaxLength = 50;
                colvarEmailAddress.AutoIncrement = false;
                colvarEmailAddress.IsNullable = true;
                colvarEmailAddress.IsPrimaryKey = false;
                colvarEmailAddress.IsForeignKey = false;
                colvarEmailAddress.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmailAddress);
                
                TableSchema.TableColumn colvarMobileNo = new TableSchema.TableColumn(schema);
                colvarMobileNo.ColumnName = "MobileNo";
                colvarMobileNo.DataType = DbType.AnsiString;
                colvarMobileNo.MaxLength = 50;
                colvarMobileNo.AutoIncrement = false;
                colvarMobileNo.IsNullable = true;
                colvarMobileNo.IsPrimaryKey = false;
                colvarMobileNo.IsForeignKey = false;
                colvarMobileNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarMobileNo);
                
                TableSchema.TableColumn colvarPhoneNo = new TableSchema.TableColumn(schema);
                colvarPhoneNo.ColumnName = "PhoneNo";
                colvarPhoneNo.DataType = DbType.AnsiString;
                colvarPhoneNo.MaxLength = 50;
                colvarPhoneNo.AutoIncrement = false;
                colvarPhoneNo.IsNullable = true;
                colvarPhoneNo.IsPrimaryKey = false;
                colvarPhoneNo.IsForeignKey = false;
                colvarPhoneNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarPhoneNo);
                
                TableSchema.TableColumn colvarAddress = new TableSchema.TableColumn(schema);
                colvarAddress.ColumnName = "Address";
                colvarAddress.DataType = DbType.AnsiString;
                colvarAddress.MaxLength = 250;
                colvarAddress.AutoIncrement = false;
                colvarAddress.IsNullable = true;
                colvarAddress.IsPrimaryKey = false;
                colvarAddress.IsForeignKey = false;
                colvarAddress.IsReadOnly = false;
                
                schema.Columns.Add(colvarAddress);
                
                TableSchema.TableColumn colvarNic = new TableSchema.TableColumn(schema);
                colvarNic.ColumnName = "NIC";
                colvarNic.DataType = DbType.AnsiString;
                colvarNic.MaxLength = 50;
                colvarNic.AutoIncrement = false;
                colvarNic.IsNullable = true;
                colvarNic.IsPrimaryKey = false;
                colvarNic.IsForeignKey = false;
                colvarNic.IsReadOnly = false;
                
                schema.Columns.Add(colvarNic);
                
                TableSchema.TableColumn colvarBranchID = new TableSchema.TableColumn(schema);
                colvarBranchID.ColumnName = "BranchID";
                colvarBranchID.DataType = DbType.Int32;
                colvarBranchID.MaxLength = 0;
                colvarBranchID.AutoIncrement = false;
                colvarBranchID.IsNullable = false;
                colvarBranchID.IsPrimaryKey = false;
                colvarBranchID.IsForeignKey = false;
                colvarBranchID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchID);
                
                TableSchema.TableColumn colvarBranchCode = new TableSchema.TableColumn(schema);
                colvarBranchCode.ColumnName = "BranchCode";
                colvarBranchCode.DataType = DbType.AnsiString;
                colvarBranchCode.MaxLength = 50;
                colvarBranchCode.AutoIncrement = false;
                colvarBranchCode.IsNullable = true;
                colvarBranchCode.IsPrimaryKey = false;
                colvarBranchCode.IsForeignKey = false;
                colvarBranchCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchCode);
                
                TableSchema.TableColumn colvarBranchName = new TableSchema.TableColumn(schema);
                colvarBranchName.ColumnName = "BranchName";
                colvarBranchName.DataType = DbType.AnsiString;
                colvarBranchName.MaxLength = 150;
                colvarBranchName.AutoIncrement = false;
                colvarBranchName.IsNullable = true;
                colvarBranchName.IsPrimaryKey = false;
                colvarBranchName.IsForeignKey = false;
                colvarBranchName.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchName);
                
                TableSchema.TableColumn colvarMeterInvDetID = new TableSchema.TableColumn(schema);
                colvarMeterInvDetID.ColumnName = "MeterInvDetID";
                colvarMeterInvDetID.DataType = DbType.Int32;
                colvarMeterInvDetID.MaxLength = 0;
                colvarMeterInvDetID.AutoIncrement = false;
                colvarMeterInvDetID.IsNullable = false;
                colvarMeterInvDetID.IsPrimaryKey = false;
                colvarMeterInvDetID.IsForeignKey = false;
                colvarMeterInvDetID.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterInvDetID);
                
                TableSchema.TableColumn colvarMeterNo = new TableSchema.TableColumn(schema);
                colvarMeterNo.ColumnName = "MeterNo";
                colvarMeterNo.DataType = DbType.AnsiString;
                colvarMeterNo.MaxLength = 50;
                colvarMeterNo.AutoIncrement = false;
                colvarMeterNo.IsNullable = true;
                colvarMeterNo.IsPrimaryKey = false;
                colvarMeterNo.IsForeignKey = false;
                colvarMeterNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterNo);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["PrimaryProvider"].AddSchema("VwTblMeterInventoryDetail",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VwTblMeterInventoryDetail()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VwTblMeterInventoryDetail(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VwTblMeterInventoryDetail(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VwTblMeterInventoryDetail(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("MeterInventoryID")]
        [Bindable(true)]
        public int MeterInventoryID 
	    {
		    get
		    {
			    return GetColumnValue<int>("MeterInventoryID");
		    }
            set 
		    {
			    SetColumnValue("MeterInventoryID", value);
            }
        }
	      
        [XmlAttribute("InvCreatedOn")]
        [Bindable(true)]
        public DateTime? InvCreatedOn 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("InvCreatedOn");
		    }
            set 
		    {
			    SetColumnValue("InvCreatedOn", value);
            }
        }
	      
        [XmlAttribute("QtyInTo")]
        [Bindable(true)]
        public int? QtyInTo 
	    {
		    get
		    {
			    return GetColumnValue<int?>("QtyInTo");
		    }
            set 
		    {
			    SetColumnValue("QtyInTo", value);
            }
        }
	      
        [XmlAttribute("EmployeeID")]
        [Bindable(true)]
        public int EmployeeID 
	    {
		    get
		    {
			    return GetColumnValue<int>("EmployeeID");
		    }
            set 
		    {
			    SetColumnValue("EmployeeID", value);
            }
        }
	      
        [XmlAttribute("EmployeeCode")]
        [Bindable(true)]
        public string EmployeeCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("EmployeeCode");
		    }
            set 
		    {
			    SetColumnValue("EmployeeCode", value);
            }
        }
	      
        [XmlAttribute("EmployeeName")]
        [Bindable(true)]
        public string EmployeeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("EmployeeName");
		    }
            set 
		    {
			    SetColumnValue("EmployeeName", value);
            }
        }
	      
        [XmlAttribute("EmailAddress")]
        [Bindable(true)]
        public string EmailAddress 
	    {
		    get
		    {
			    return GetColumnValue<string>("EmailAddress");
		    }
            set 
		    {
			    SetColumnValue("EmailAddress", value);
            }
        }
	      
        [XmlAttribute("MobileNo")]
        [Bindable(true)]
        public string MobileNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("MobileNo");
		    }
            set 
		    {
			    SetColumnValue("MobileNo", value);
            }
        }
	      
        [XmlAttribute("PhoneNo")]
        [Bindable(true)]
        public string PhoneNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("PhoneNo");
		    }
            set 
		    {
			    SetColumnValue("PhoneNo", value);
            }
        }
	      
        [XmlAttribute("Address")]
        [Bindable(true)]
        public string Address 
	    {
		    get
		    {
			    return GetColumnValue<string>("Address");
		    }
            set 
		    {
			    SetColumnValue("Address", value);
            }
        }
	      
        [XmlAttribute("Nic")]
        [Bindable(true)]
        public string Nic 
	    {
		    get
		    {
			    return GetColumnValue<string>("NIC");
		    }
            set 
		    {
			    SetColumnValue("NIC", value);
            }
        }
	      
        [XmlAttribute("BranchID")]
        [Bindable(true)]
        public int BranchID 
	    {
		    get
		    {
			    return GetColumnValue<int>("BranchID");
		    }
            set 
		    {
			    SetColumnValue("BranchID", value);
            }
        }
	      
        [XmlAttribute("BranchCode")]
        [Bindable(true)]
        public string BranchCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("BranchCode");
		    }
            set 
		    {
			    SetColumnValue("BranchCode", value);
            }
        }
	      
        [XmlAttribute("BranchName")]
        [Bindable(true)]
        public string BranchName 
	    {
		    get
		    {
			    return GetColumnValue<string>("BranchName");
		    }
            set 
		    {
			    SetColumnValue("BranchName", value);
            }
        }
	      
        [XmlAttribute("MeterInvDetID")]
        [Bindable(true)]
        public int MeterInvDetID 
	    {
		    get
		    {
			    return GetColumnValue<int>("MeterInvDetID");
		    }
            set 
		    {
			    SetColumnValue("MeterInvDetID", value);
            }
        }
	      
        [XmlAttribute("MeterNo")]
        [Bindable(true)]
        public string MeterNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("MeterNo");
		    }
            set 
		    {
			    SetColumnValue("MeterNo", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string MeterInventoryID = @"MeterInventoryID";
            
            public static string InvCreatedOn = @"InvCreatedOn";
            
            public static string QtyInTo = @"QtyInTo";
            
            public static string EmployeeID = @"EmployeeID";
            
            public static string EmployeeCode = @"EmployeeCode";
            
            public static string EmployeeName = @"EmployeeName";
            
            public static string EmailAddress = @"EmailAddress";
            
            public static string MobileNo = @"MobileNo";
            
            public static string PhoneNo = @"PhoneNo";
            
            public static string Address = @"Address";
            
            public static string Nic = @"NIC";
            
            public static string BranchID = @"BranchID";
            
            public static string BranchCode = @"BranchCode";
            
            public static string BranchName = @"BranchName";
            
            public static string MeterInvDetID = @"MeterInvDetID";
            
            public static string MeterNo = @"MeterNo";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
