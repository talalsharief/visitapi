using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SmartCBSDataAccess{
    /// <summary>
    /// Strongly-typed collection for the VwTblFeeder class.
    /// </summary>
    [Serializable]
    public partial class VwTblFeederCollection : ReadOnlyList<VwTblFeeder, VwTblFeederCollection>
    {        
        public VwTblFeederCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the VwTblFeeder view.
    /// </summary>
    [Serializable]
    public partial class VwTblFeeder : ReadOnlyRecord<VwTblFeeder>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("VwTblFeeder", TableType.View, DataService.GetInstance("PrimaryProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarFeederID = new TableSchema.TableColumn(schema);
                colvarFeederID.ColumnName = "FeederID";
                colvarFeederID.DataType = DbType.Int32;
                colvarFeederID.MaxLength = 0;
                colvarFeederID.AutoIncrement = false;
                colvarFeederID.IsNullable = false;
                colvarFeederID.IsPrimaryKey = false;
                colvarFeederID.IsForeignKey = false;
                colvarFeederID.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederID);
                
                TableSchema.TableColumn colvarFeederNo = new TableSchema.TableColumn(schema);
                colvarFeederNo.ColumnName = "FeederNo";
                colvarFeederNo.DataType = DbType.AnsiString;
                colvarFeederNo.MaxLength = -1;
                colvarFeederNo.AutoIncrement = false;
                colvarFeederNo.IsNullable = true;
                colvarFeederNo.IsPrimaryKey = false;
                colvarFeederNo.IsForeignKey = false;
                colvarFeederNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederNo);
                
                TableSchema.TableColumn colvarBrickID = new TableSchema.TableColumn(schema);
                colvarBrickID.ColumnName = "BrickID";
                colvarBrickID.DataType = DbType.Int32;
                colvarBrickID.MaxLength = 0;
                colvarBrickID.AutoIncrement = false;
                colvarBrickID.IsNullable = true;
                colvarBrickID.IsPrimaryKey = false;
                colvarBrickID.IsForeignKey = false;
                colvarBrickID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBrickID);
                
                TableSchema.TableColumn colvarBrickName = new TableSchema.TableColumn(schema);
                colvarBrickName.ColumnName = "BrickName";
                colvarBrickName.DataType = DbType.AnsiString;
                colvarBrickName.MaxLength = 50;
                colvarBrickName.AutoIncrement = false;
                colvarBrickName.IsNullable = true;
                colvarBrickName.IsPrimaryKey = false;
                colvarBrickName.IsForeignKey = false;
                colvarBrickName.IsReadOnly = false;
                
                schema.Columns.Add(colvarBrickName);
                
                TableSchema.TableColumn colvarBrickTypeID = new TableSchema.TableColumn(schema);
                colvarBrickTypeID.ColumnName = "BrickTypeID";
                colvarBrickTypeID.DataType = DbType.Int32;
                colvarBrickTypeID.MaxLength = 0;
                colvarBrickTypeID.AutoIncrement = false;
                colvarBrickTypeID.IsNullable = true;
                colvarBrickTypeID.IsPrimaryKey = false;
                colvarBrickTypeID.IsForeignKey = false;
                colvarBrickTypeID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBrickTypeID);
                
                TableSchema.TableColumn colvarBrickTypeName = new TableSchema.TableColumn(schema);
                colvarBrickTypeName.ColumnName = "BrickTypeName";
                colvarBrickTypeName.DataType = DbType.AnsiString;
                colvarBrickTypeName.MaxLength = 50;
                colvarBrickTypeName.AutoIncrement = false;
                colvarBrickTypeName.IsNullable = true;
                colvarBrickTypeName.IsPrimaryKey = false;
                colvarBrickTypeName.IsForeignKey = false;
                colvarBrickTypeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarBrickTypeName);
                
                TableSchema.TableColumn colvarBrickTypeLevel = new TableSchema.TableColumn(schema);
                colvarBrickTypeLevel.ColumnName = "BrickTypeLevel";
                colvarBrickTypeLevel.DataType = DbType.Int32;
                colvarBrickTypeLevel.MaxLength = 0;
                colvarBrickTypeLevel.AutoIncrement = false;
                colvarBrickTypeLevel.IsNullable = true;
                colvarBrickTypeLevel.IsPrimaryKey = false;
                colvarBrickTypeLevel.IsForeignKey = false;
                colvarBrickTypeLevel.IsReadOnly = false;
                
                schema.Columns.Add(colvarBrickTypeLevel);
                
                TableSchema.TableColumn colvarBranchID = new TableSchema.TableColumn(schema);
                colvarBranchID.ColumnName = "BranchID";
                colvarBranchID.DataType = DbType.Int32;
                colvarBranchID.MaxLength = 0;
                colvarBranchID.AutoIncrement = false;
                colvarBranchID.IsNullable = true;
                colvarBranchID.IsPrimaryKey = false;
                colvarBranchID.IsForeignKey = false;
                colvarBranchID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchID);
                
                TableSchema.TableColumn colvarBranchCode = new TableSchema.TableColumn(schema);
                colvarBranchCode.ColumnName = "BranchCode";
                colvarBranchCode.DataType = DbType.AnsiString;
                colvarBranchCode.MaxLength = 50;
                colvarBranchCode.AutoIncrement = false;
                colvarBranchCode.IsNullable = true;
                colvarBranchCode.IsPrimaryKey = false;
                colvarBranchCode.IsForeignKey = false;
                colvarBranchCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchCode);
                
                TableSchema.TableColumn colvarBranchName = new TableSchema.TableColumn(schema);
                colvarBranchName.ColumnName = "BranchName";
                colvarBranchName.DataType = DbType.AnsiString;
                colvarBranchName.MaxLength = 150;
                colvarBranchName.AutoIncrement = false;
                colvarBranchName.IsNullable = true;
                colvarBranchName.IsPrimaryKey = false;
                colvarBranchName.IsForeignKey = false;
                colvarBranchName.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchName);
                
                TableSchema.TableColumn colvarEmployeeID = new TableSchema.TableColumn(schema);
                colvarEmployeeID.ColumnName = "EmployeeID";
                colvarEmployeeID.DataType = DbType.Int32;
                colvarEmployeeID.MaxLength = 0;
                colvarEmployeeID.AutoIncrement = false;
                colvarEmployeeID.IsNullable = true;
                colvarEmployeeID.IsPrimaryKey = false;
                colvarEmployeeID.IsForeignKey = false;
                colvarEmployeeID.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmployeeID);
                
                TableSchema.TableColumn colvarEmployeeName = new TableSchema.TableColumn(schema);
                colvarEmployeeName.ColumnName = "EmployeeName";
                colvarEmployeeName.DataType = DbType.AnsiString;
                colvarEmployeeName.MaxLength = 100;
                colvarEmployeeName.AutoIncrement = false;
                colvarEmployeeName.IsNullable = true;
                colvarEmployeeName.IsPrimaryKey = false;
                colvarEmployeeName.IsForeignKey = false;
                colvarEmployeeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmployeeName);
                
                TableSchema.TableColumn colvarFeederCreatedBy = new TableSchema.TableColumn(schema);
                colvarFeederCreatedBy.ColumnName = "FeederCreatedBy";
                colvarFeederCreatedBy.DataType = DbType.Int32;
                colvarFeederCreatedBy.MaxLength = 0;
                colvarFeederCreatedBy.AutoIncrement = false;
                colvarFeederCreatedBy.IsNullable = true;
                colvarFeederCreatedBy.IsPrimaryKey = false;
                colvarFeederCreatedBy.IsForeignKey = false;
                colvarFeederCreatedBy.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederCreatedBy);
                
                TableSchema.TableColumn colvarFeederCode = new TableSchema.TableColumn(schema);
                colvarFeederCode.ColumnName = "FeederCode";
                colvarFeederCode.DataType = DbType.AnsiString;
                colvarFeederCode.MaxLength = 50;
                colvarFeederCode.AutoIncrement = false;
                colvarFeederCode.IsNullable = true;
                colvarFeederCode.IsPrimaryKey = false;
                colvarFeederCode.IsForeignKey = false;
                colvarFeederCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederCode);
                
                TableSchema.TableColumn colvarFeederStatusID = new TableSchema.TableColumn(schema);
                colvarFeederStatusID.ColumnName = "FeederStatusID";
                colvarFeederStatusID.DataType = DbType.Int32;
                colvarFeederStatusID.MaxLength = 0;
                colvarFeederStatusID.AutoIncrement = false;
                colvarFeederStatusID.IsNullable = false;
                colvarFeederStatusID.IsPrimaryKey = false;
                colvarFeederStatusID.IsForeignKey = false;
                colvarFeederStatusID.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederStatusID);
                
                TableSchema.TableColumn colvarFeederStatusName = new TableSchema.TableColumn(schema);
                colvarFeederStatusName.ColumnName = "FeederStatusName";
                colvarFeederStatusName.DataType = DbType.AnsiString;
                colvarFeederStatusName.MaxLength = 50;
                colvarFeederStatusName.AutoIncrement = false;
                colvarFeederStatusName.IsNullable = true;
                colvarFeederStatusName.IsPrimaryKey = false;
                colvarFeederStatusName.IsForeignKey = false;
                colvarFeederStatusName.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederStatusName);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["PrimaryProvider"].AddSchema("VwTblFeeder",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VwTblFeeder()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VwTblFeeder(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VwTblFeeder(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VwTblFeeder(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("FeederID")]
        [Bindable(true)]
        public int FeederID 
	    {
		    get
		    {
			    return GetColumnValue<int>("FeederID");
		    }
            set 
		    {
			    SetColumnValue("FeederID", value);
            }
        }
	      
        [XmlAttribute("FeederNo")]
        [Bindable(true)]
        public string FeederNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("FeederNo");
		    }
            set 
		    {
			    SetColumnValue("FeederNo", value);
            }
        }
	      
        [XmlAttribute("BrickID")]
        [Bindable(true)]
        public int? BrickID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("BrickID");
		    }
            set 
		    {
			    SetColumnValue("BrickID", value);
            }
        }
	      
        [XmlAttribute("BrickName")]
        [Bindable(true)]
        public string BrickName 
	    {
		    get
		    {
			    return GetColumnValue<string>("BrickName");
		    }
            set 
		    {
			    SetColumnValue("BrickName", value);
            }
        }
	      
        [XmlAttribute("BrickTypeID")]
        [Bindable(true)]
        public int? BrickTypeID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("BrickTypeID");
		    }
            set 
		    {
			    SetColumnValue("BrickTypeID", value);
            }
        }
	      
        [XmlAttribute("BrickTypeName")]
        [Bindable(true)]
        public string BrickTypeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("BrickTypeName");
		    }
            set 
		    {
			    SetColumnValue("BrickTypeName", value);
            }
        }
	      
        [XmlAttribute("BrickTypeLevel")]
        [Bindable(true)]
        public int? BrickTypeLevel 
	    {
		    get
		    {
			    return GetColumnValue<int?>("BrickTypeLevel");
		    }
            set 
		    {
			    SetColumnValue("BrickTypeLevel", value);
            }
        }
	      
        [XmlAttribute("BranchID")]
        [Bindable(true)]
        public int? BranchID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("BranchID");
		    }
            set 
		    {
			    SetColumnValue("BranchID", value);
            }
        }
	      
        [XmlAttribute("BranchCode")]
        [Bindable(true)]
        public string BranchCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("BranchCode");
		    }
            set 
		    {
			    SetColumnValue("BranchCode", value);
            }
        }
	      
        [XmlAttribute("BranchName")]
        [Bindable(true)]
        public string BranchName 
	    {
		    get
		    {
			    return GetColumnValue<string>("BranchName");
		    }
            set 
		    {
			    SetColumnValue("BranchName", value);
            }
        }
	      
        [XmlAttribute("EmployeeID")]
        [Bindable(true)]
        public int? EmployeeID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("EmployeeID");
		    }
            set 
		    {
			    SetColumnValue("EmployeeID", value);
            }
        }
	      
        [XmlAttribute("EmployeeName")]
        [Bindable(true)]
        public string EmployeeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("EmployeeName");
		    }
            set 
		    {
			    SetColumnValue("EmployeeName", value);
            }
        }
	      
        [XmlAttribute("FeederCreatedBy")]
        [Bindable(true)]
        public int? FeederCreatedBy 
	    {
		    get
		    {
			    return GetColumnValue<int?>("FeederCreatedBy");
		    }
            set 
		    {
			    SetColumnValue("FeederCreatedBy", value);
            }
        }
	      
        [XmlAttribute("FeederCode")]
        [Bindable(true)]
        public string FeederCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("FeederCode");
		    }
            set 
		    {
			    SetColumnValue("FeederCode", value);
            }
        }
	      
        [XmlAttribute("FeederStatusID")]
        [Bindable(true)]
        public int FeederStatusID 
	    {
		    get
		    {
			    return GetColumnValue<int>("FeederStatusID");
		    }
            set 
		    {
			    SetColumnValue("FeederStatusID", value);
            }
        }
	      
        [XmlAttribute("FeederStatusName")]
        [Bindable(true)]
        public string FeederStatusName 
	    {
		    get
		    {
			    return GetColumnValue<string>("FeederStatusName");
		    }
            set 
		    {
			    SetColumnValue("FeederStatusName", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string FeederID = @"FeederID";
            
            public static string FeederNo = @"FeederNo";
            
            public static string BrickID = @"BrickID";
            
            public static string BrickName = @"BrickName";
            
            public static string BrickTypeID = @"BrickTypeID";
            
            public static string BrickTypeName = @"BrickTypeName";
            
            public static string BrickTypeLevel = @"BrickTypeLevel";
            
            public static string BranchID = @"BranchID";
            
            public static string BranchCode = @"BranchCode";
            
            public static string BranchName = @"BranchName";
            
            public static string EmployeeID = @"EmployeeID";
            
            public static string EmployeeName = @"EmployeeName";
            
            public static string FeederCreatedBy = @"FeederCreatedBy";
            
            public static string FeederCode = @"FeederCode";
            
            public static string FeederStatusID = @"FeederStatusID";
            
            public static string FeederStatusName = @"FeederStatusName";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
