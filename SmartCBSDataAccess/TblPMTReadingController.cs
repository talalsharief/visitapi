using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SmartCBSDataAccess
{
    /// <summary>
    /// Controller class for TblPMTReading
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TblPMTReadingController
    {
        // Preload our schema..
        TblPMTReading thisSchemaLoad = new TblPMTReading();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TblPMTReadingCollection FetchAll()
        {
            TblPMTReadingCollection coll = new TblPMTReadingCollection();
            Query qry = new Query(TblPMTReading.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblPMTReadingCollection FetchByID(object PMTReadingID)
        {
            TblPMTReadingCollection coll = new TblPMTReadingCollection().Where("PMTReadingID", PMTReadingID).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblPMTReadingCollection FetchByQuery(Query qry)
        {
            TblPMTReadingCollection coll = new TblPMTReadingCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object PMTReadingID)
        {
            return (TblPMTReading.Delete(PMTReadingID) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object PMTReadingID)
        {
            return (TblPMTReading.Destroy(PMTReadingID) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int? Pmtid,int? PMTReadModeID,string PMTReadingMonth,string PMTReadingYear,decimal? PreviousReading,decimal? CurrentReading,decimal? TotalUnits,decimal? MultiplyingFactor,decimal? UnitsConsumed,DateTime? PMTReadingDate,int? PMTReadBy,int? CreatedBy,int? ModifiedBy,DateTime? CreatedOn,DateTime? ModifiedOn,string PMTImage,int? BranchID,int? ReadingInsertedBy)
	    {
		    TblPMTReading item = new TblPMTReading();
		    
            item.Pmtid = Pmtid;
            
            item.PMTReadModeID = PMTReadModeID;
            
            item.PMTReadingMonth = PMTReadingMonth;
            
            item.PMTReadingYear = PMTReadingYear;
            
            item.PreviousReading = PreviousReading;
            
            item.CurrentReading = CurrentReading;
            
            item.TotalUnits = TotalUnits;
            
            item.MultiplyingFactor = MultiplyingFactor;
            
            item.UnitsConsumed = UnitsConsumed;
            
            item.PMTReadingDate = PMTReadingDate;
            
            item.PMTReadBy = PMTReadBy;
            
            item.CreatedBy = CreatedBy;
            
            item.ModifiedBy = ModifiedBy;
            
            item.CreatedOn = CreatedOn;
            
            item.ModifiedOn = ModifiedOn;
            
            item.PMTImage = PMTImage;
            
            item.BranchID = BranchID;
            
            item.ReadingInsertedBy = ReadingInsertedBy;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int PMTReadingID,int? Pmtid,int? PMTReadModeID,string PMTReadingMonth,string PMTReadingYear,decimal? PreviousReading,decimal? CurrentReading,decimal? TotalUnits,decimal? MultiplyingFactor,decimal? UnitsConsumed,DateTime? PMTReadingDate,int? PMTReadBy,int? CreatedBy,int? ModifiedBy,DateTime? CreatedOn,DateTime? ModifiedOn,string PMTImage,int? BranchID,int? ReadingInsertedBy)
	    {
		    TblPMTReading item = new TblPMTReading();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.PMTReadingID = PMTReadingID;
				
			item.Pmtid = Pmtid;
				
			item.PMTReadModeID = PMTReadModeID;
				
			item.PMTReadingMonth = PMTReadingMonth;
				
			item.PMTReadingYear = PMTReadingYear;
				
			item.PreviousReading = PreviousReading;
				
			item.CurrentReading = CurrentReading;
				
			item.TotalUnits = TotalUnits;
				
			item.MultiplyingFactor = MultiplyingFactor;
				
			item.UnitsConsumed = UnitsConsumed;
				
			item.PMTReadingDate = PMTReadingDate;
				
			item.PMTReadBy = PMTReadBy;
				
			item.CreatedBy = CreatedBy;
				
			item.ModifiedBy = ModifiedBy;
				
			item.CreatedOn = CreatedOn;
				
			item.ModifiedOn = ModifiedOn;
				
			item.PMTImage = PMTImage;
				
			item.BranchID = BranchID;
				
			item.ReadingInsertedBy = ReadingInsertedBy;
				
	        item.Save(UserName);
	    }
    }
}
