using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SmartCBSDataAccess{
    /// <summary>
    /// Strongly-typed collection for the VwTblNewConnection class.
    /// </summary>
    [Serializable]
    public partial class VwTblNewConnectionCollection : ReadOnlyList<VwTblNewConnection, VwTblNewConnectionCollection>
    {        
        public VwTblNewConnectionCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the VwTblNewConnection view.
    /// </summary>
    [Serializable]
    public partial class VwTblNewConnection : ReadOnlyRecord<VwTblNewConnection>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("VwTblNewConnection", TableType.View, DataService.GetInstance("PrimaryProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarNewConnectionID = new TableSchema.TableColumn(schema);
                colvarNewConnectionID.ColumnName = "NewConnectionID";
                colvarNewConnectionID.DataType = DbType.Int32;
                colvarNewConnectionID.MaxLength = 0;
                colvarNewConnectionID.AutoIncrement = false;
                colvarNewConnectionID.IsNullable = false;
                colvarNewConnectionID.IsPrimaryKey = false;
                colvarNewConnectionID.IsForeignKey = false;
                colvarNewConnectionID.IsReadOnly = false;
                
                schema.Columns.Add(colvarNewConnectionID);
                
                TableSchema.TableColumn colvarCunsumerID = new TableSchema.TableColumn(schema);
                colvarCunsumerID.ColumnName = "CunsumerID";
                colvarCunsumerID.DataType = DbType.Int32;
                colvarCunsumerID.MaxLength = 0;
                colvarCunsumerID.AutoIncrement = false;
                colvarCunsumerID.IsNullable = false;
                colvarCunsumerID.IsPrimaryKey = false;
                colvarCunsumerID.IsForeignKey = false;
                colvarCunsumerID.IsReadOnly = false;
                
                schema.Columns.Add(colvarCunsumerID);
                
                TableSchema.TableColumn colvarConsumerName = new TableSchema.TableColumn(schema);
                colvarConsumerName.ColumnName = "ConsumerName";
                colvarConsumerName.DataType = DbType.AnsiString;
                colvarConsumerName.MaxLength = 50;
                colvarConsumerName.AutoIncrement = false;
                colvarConsumerName.IsNullable = true;
                colvarConsumerName.IsPrimaryKey = false;
                colvarConsumerName.IsForeignKey = false;
                colvarConsumerName.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerName);
                
                TableSchema.TableColumn colvarCunsumerEmail = new TableSchema.TableColumn(schema);
                colvarCunsumerEmail.ColumnName = "CunsumerEmail";
                colvarCunsumerEmail.DataType = DbType.AnsiString;
                colvarCunsumerEmail.MaxLength = 50;
                colvarCunsumerEmail.AutoIncrement = false;
                colvarCunsumerEmail.IsNullable = true;
                colvarCunsumerEmail.IsPrimaryKey = false;
                colvarCunsumerEmail.IsForeignKey = false;
                colvarCunsumerEmail.IsReadOnly = false;
                
                schema.Columns.Add(colvarCunsumerEmail);
                
                TableSchema.TableColumn colvarConsumerResidensePhoneNo = new TableSchema.TableColumn(schema);
                colvarConsumerResidensePhoneNo.ColumnName = "ConsumerResidensePhoneNo";
                colvarConsumerResidensePhoneNo.DataType = DbType.AnsiString;
                colvarConsumerResidensePhoneNo.MaxLength = 50;
                colvarConsumerResidensePhoneNo.AutoIncrement = false;
                colvarConsumerResidensePhoneNo.IsNullable = true;
                colvarConsumerResidensePhoneNo.IsPrimaryKey = false;
                colvarConsumerResidensePhoneNo.IsForeignKey = false;
                colvarConsumerResidensePhoneNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerResidensePhoneNo);
                
                TableSchema.TableColumn colvarCunsumerAddress = new TableSchema.TableColumn(schema);
                colvarCunsumerAddress.ColumnName = "CunsumerAddress";
                colvarCunsumerAddress.DataType = DbType.AnsiString;
                colvarCunsumerAddress.MaxLength = -1;
                colvarCunsumerAddress.AutoIncrement = false;
                colvarCunsumerAddress.IsNullable = true;
                colvarCunsumerAddress.IsPrimaryKey = false;
                colvarCunsumerAddress.IsForeignKey = false;
                colvarCunsumerAddress.IsReadOnly = false;
                
                schema.Columns.Add(colvarCunsumerAddress);
                
                TableSchema.TableColumn colvarConsumerMobileNo = new TableSchema.TableColumn(schema);
                colvarConsumerMobileNo.ColumnName = "ConsumerMobileNo";
                colvarConsumerMobileNo.DataType = DbType.AnsiString;
                colvarConsumerMobileNo.MaxLength = 50;
                colvarConsumerMobileNo.AutoIncrement = false;
                colvarConsumerMobileNo.IsNullable = true;
                colvarConsumerMobileNo.IsPrimaryKey = false;
                colvarConsumerMobileNo.IsForeignKey = false;
                colvarConsumerMobileNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerMobileNo);
                
                TableSchema.TableColumn colvarConsumerNo = new TableSchema.TableColumn(schema);
                colvarConsumerNo.ColumnName = "ConsumerNo";
                colvarConsumerNo.DataType = DbType.AnsiString;
                colvarConsumerNo.MaxLength = -1;
                colvarConsumerNo.AutoIncrement = false;
                colvarConsumerNo.IsNullable = true;
                colvarConsumerNo.IsPrimaryKey = false;
                colvarConsumerNo.IsForeignKey = false;
                colvarConsumerNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerNo);
                
                TableSchema.TableColumn colvarConsumerNIC = new TableSchema.TableColumn(schema);
                colvarConsumerNIC.ColumnName = "ConsumerNIC";
                colvarConsumerNIC.DataType = DbType.AnsiString;
                colvarConsumerNIC.MaxLength = 70;
                colvarConsumerNIC.AutoIncrement = false;
                colvarConsumerNIC.IsNullable = true;
                colvarConsumerNIC.IsPrimaryKey = false;
                colvarConsumerNIC.IsForeignKey = false;
                colvarConsumerNIC.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerNIC);
                
                TableSchema.TableColumn colvarIsApprove = new TableSchema.TableColumn(schema);
                colvarIsApprove.ColumnName = "IsApprove";
                colvarIsApprove.DataType = DbType.Boolean;
                colvarIsApprove.MaxLength = 0;
                colvarIsApprove.AutoIncrement = false;
                colvarIsApprove.IsNullable = true;
                colvarIsApprove.IsPrimaryKey = false;
                colvarIsApprove.IsForeignKey = false;
                colvarIsApprove.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsApprove);
                
                TableSchema.TableColumn colvarTOCNeConDetailID = new TableSchema.TableColumn(schema);
                colvarTOCNeConDetailID.ColumnName = "TOCNeConDetailID";
                colvarTOCNeConDetailID.DataType = DbType.Int32;
                colvarTOCNeConDetailID.MaxLength = 0;
                colvarTOCNeConDetailID.AutoIncrement = false;
                colvarTOCNeConDetailID.IsNullable = false;
                colvarTOCNeConDetailID.IsPrimaryKey = false;
                colvarTOCNeConDetailID.IsForeignKey = false;
                colvarTOCNeConDetailID.IsReadOnly = false;
                
                schema.Columns.Add(colvarTOCNeConDetailID);
                
                TableSchema.TableColumn colvarTypeOfConID = new TableSchema.TableColumn(schema);
                colvarTypeOfConID.ColumnName = "TypeOfConID";
                colvarTypeOfConID.DataType = DbType.Int32;
                colvarTypeOfConID.MaxLength = 0;
                colvarTypeOfConID.AutoIncrement = false;
                colvarTypeOfConID.IsNullable = false;
                colvarTypeOfConID.IsPrimaryKey = false;
                colvarTypeOfConID.IsForeignKey = false;
                colvarTypeOfConID.IsReadOnly = false;
                
                schema.Columns.Add(colvarTypeOfConID);
                
                TableSchema.TableColumn colvarName = new TableSchema.TableColumn(schema);
                colvarName.ColumnName = "Name";
                colvarName.DataType = DbType.AnsiString;
                colvarName.MaxLength = 50;
                colvarName.AutoIncrement = false;
                colvarName.IsNullable = true;
                colvarName.IsPrimaryKey = false;
                colvarName.IsForeignKey = false;
                colvarName.IsReadOnly = false;
                
                schema.Columns.Add(colvarName);
                
                TableSchema.TableColumn colvarRequestCode = new TableSchema.TableColumn(schema);
                colvarRequestCode.ColumnName = "RequestCode";
                colvarRequestCode.DataType = DbType.AnsiString;
                colvarRequestCode.MaxLength = 100;
                colvarRequestCode.AutoIncrement = false;
                colvarRequestCode.IsNullable = true;
                colvarRequestCode.IsPrimaryKey = false;
                colvarRequestCode.IsForeignKey = false;
                colvarRequestCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarRequestCode);
                
                TableSchema.TableColumn colvarBranchID = new TableSchema.TableColumn(schema);
                colvarBranchID.ColumnName = "BranchID";
                colvarBranchID.DataType = DbType.Int32;
                colvarBranchID.MaxLength = 0;
                colvarBranchID.AutoIncrement = false;
                colvarBranchID.IsNullable = true;
                colvarBranchID.IsPrimaryKey = false;
                colvarBranchID.IsForeignKey = false;
                colvarBranchID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchID);
                
                TableSchema.TableColumn colvarBranchCode = new TableSchema.TableColumn(schema);
                colvarBranchCode.ColumnName = "BranchCode";
                colvarBranchCode.DataType = DbType.AnsiString;
                colvarBranchCode.MaxLength = 50;
                colvarBranchCode.AutoIncrement = false;
                colvarBranchCode.IsNullable = true;
                colvarBranchCode.IsPrimaryKey = false;
                colvarBranchCode.IsForeignKey = false;
                colvarBranchCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchCode);
                
                TableSchema.TableColumn colvarBranchName = new TableSchema.TableColumn(schema);
                colvarBranchName.ColumnName = "BranchName";
                colvarBranchName.DataType = DbType.AnsiString;
                colvarBranchName.MaxLength = 150;
                colvarBranchName.AutoIncrement = false;
                colvarBranchName.IsNullable = true;
                colvarBranchName.IsPrimaryKey = false;
                colvarBranchName.IsForeignKey = false;
                colvarBranchName.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchName);
                
                TableSchema.TableColumn colvarEmployeeID = new TableSchema.TableColumn(schema);
                colvarEmployeeID.ColumnName = "EmployeeID";
                colvarEmployeeID.DataType = DbType.Int32;
                colvarEmployeeID.MaxLength = 0;
                colvarEmployeeID.AutoIncrement = false;
                colvarEmployeeID.IsNullable = true;
                colvarEmployeeID.IsPrimaryKey = false;
                colvarEmployeeID.IsForeignKey = false;
                colvarEmployeeID.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmployeeID);
                
                TableSchema.TableColumn colvarEmployeeCode = new TableSchema.TableColumn(schema);
                colvarEmployeeCode.ColumnName = "EmployeeCode";
                colvarEmployeeCode.DataType = DbType.AnsiString;
                colvarEmployeeCode.MaxLength = 20;
                colvarEmployeeCode.AutoIncrement = false;
                colvarEmployeeCode.IsNullable = true;
                colvarEmployeeCode.IsPrimaryKey = false;
                colvarEmployeeCode.IsForeignKey = false;
                colvarEmployeeCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmployeeCode);
                
                TableSchema.TableColumn colvarEmployeeName = new TableSchema.TableColumn(schema);
                colvarEmployeeName.ColumnName = "EmployeeName";
                colvarEmployeeName.DataType = DbType.AnsiString;
                colvarEmployeeName.MaxLength = 100;
                colvarEmployeeName.AutoIncrement = false;
                colvarEmployeeName.IsNullable = true;
                colvarEmployeeName.IsPrimaryKey = false;
                colvarEmployeeName.IsForeignKey = false;
                colvarEmployeeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmployeeName);
                
                TableSchema.TableColumn colvarEmailAddress = new TableSchema.TableColumn(schema);
                colvarEmailAddress.ColumnName = "EmailAddress";
                colvarEmailAddress.DataType = DbType.AnsiString;
                colvarEmailAddress.MaxLength = 50;
                colvarEmailAddress.AutoIncrement = false;
                colvarEmailAddress.IsNullable = true;
                colvarEmailAddress.IsPrimaryKey = false;
                colvarEmailAddress.IsForeignKey = false;
                colvarEmailAddress.IsReadOnly = false;
                
                schema.Columns.Add(colvarEmailAddress);
                
                TableSchema.TableColumn colvarMobileNo = new TableSchema.TableColumn(schema);
                colvarMobileNo.ColumnName = "MobileNo";
                colvarMobileNo.DataType = DbType.AnsiString;
                colvarMobileNo.MaxLength = 50;
                colvarMobileNo.AutoIncrement = false;
                colvarMobileNo.IsNullable = true;
                colvarMobileNo.IsPrimaryKey = false;
                colvarMobileNo.IsForeignKey = false;
                colvarMobileNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarMobileNo);
                
                TableSchema.TableColumn colvarPhoneNo = new TableSchema.TableColumn(schema);
                colvarPhoneNo.ColumnName = "PhoneNo";
                colvarPhoneNo.DataType = DbType.AnsiString;
                colvarPhoneNo.MaxLength = 50;
                colvarPhoneNo.AutoIncrement = false;
                colvarPhoneNo.IsNullable = true;
                colvarPhoneNo.IsPrimaryKey = false;
                colvarPhoneNo.IsForeignKey = false;
                colvarPhoneNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarPhoneNo);
                
                TableSchema.TableColumn colvarAddress = new TableSchema.TableColumn(schema);
                colvarAddress.ColumnName = "Address";
                colvarAddress.DataType = DbType.AnsiString;
                colvarAddress.MaxLength = 250;
                colvarAddress.AutoIncrement = false;
                colvarAddress.IsNullable = true;
                colvarAddress.IsPrimaryKey = false;
                colvarAddress.IsForeignKey = false;
                colvarAddress.IsReadOnly = false;
                
                schema.Columns.Add(colvarAddress);
                
                TableSchema.TableColumn colvarNic = new TableSchema.TableColumn(schema);
                colvarNic.ColumnName = "NIC";
                colvarNic.DataType = DbType.AnsiString;
                colvarNic.MaxLength = 50;
                colvarNic.AutoIncrement = false;
                colvarNic.IsNullable = true;
                colvarNic.IsPrimaryKey = false;
                colvarNic.IsForeignKey = false;
                colvarNic.IsReadOnly = false;
                
                schema.Columns.Add(colvarNic);
                
                TableSchema.TableColumn colvarMeterTypeID = new TableSchema.TableColumn(schema);
                colvarMeterTypeID.ColumnName = "MeterTypeID";
                colvarMeterTypeID.DataType = DbType.Int32;
                colvarMeterTypeID.MaxLength = 0;
                colvarMeterTypeID.AutoIncrement = false;
                colvarMeterTypeID.IsNullable = true;
                colvarMeterTypeID.IsPrimaryKey = false;
                colvarMeterTypeID.IsForeignKey = false;
                colvarMeterTypeID.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterTypeID);
                
                TableSchema.TableColumn colvarMeterTypeName = new TableSchema.TableColumn(schema);
                colvarMeterTypeName.ColumnName = "MeterTypeName";
                colvarMeterTypeName.DataType = DbType.AnsiString;
                colvarMeterTypeName.MaxLength = 50;
                colvarMeterTypeName.AutoIncrement = false;
                colvarMeterTypeName.IsNullable = true;
                colvarMeterTypeName.IsPrimaryKey = false;
                colvarMeterTypeName.IsForeignKey = false;
                colvarMeterTypeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterTypeName);
                
                TableSchema.TableColumn colvarBrickID = new TableSchema.TableColumn(schema);
                colvarBrickID.ColumnName = "BrickID";
                colvarBrickID.DataType = DbType.Int32;
                colvarBrickID.MaxLength = 0;
                colvarBrickID.AutoIncrement = false;
                colvarBrickID.IsNullable = true;
                colvarBrickID.IsPrimaryKey = false;
                colvarBrickID.IsForeignKey = false;
                colvarBrickID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBrickID);
                
                TableSchema.TableColumn colvarBrickName = new TableSchema.TableColumn(schema);
                colvarBrickName.ColumnName = "BrickName";
                colvarBrickName.DataType = DbType.AnsiString;
                colvarBrickName.MaxLength = 50;
                colvarBrickName.AutoIncrement = false;
                colvarBrickName.IsNullable = true;
                colvarBrickName.IsPrimaryKey = false;
                colvarBrickName.IsForeignKey = false;
                colvarBrickName.IsReadOnly = false;
                
                schema.Columns.Add(colvarBrickName);
                
                TableSchema.TableColumn colvarBrickTypeID = new TableSchema.TableColumn(schema);
                colvarBrickTypeID.ColumnName = "BrickTypeID";
                colvarBrickTypeID.DataType = DbType.Int32;
                colvarBrickTypeID.MaxLength = 0;
                colvarBrickTypeID.AutoIncrement = false;
                colvarBrickTypeID.IsNullable = true;
                colvarBrickTypeID.IsPrimaryKey = false;
                colvarBrickTypeID.IsForeignKey = false;
                colvarBrickTypeID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBrickTypeID);
                
                TableSchema.TableColumn colvarBrickTypeName = new TableSchema.TableColumn(schema);
                colvarBrickTypeName.ColumnName = "BrickTypeName";
                colvarBrickTypeName.DataType = DbType.AnsiString;
                colvarBrickTypeName.MaxLength = 50;
                colvarBrickTypeName.AutoIncrement = false;
                colvarBrickTypeName.IsNullable = true;
                colvarBrickTypeName.IsPrimaryKey = false;
                colvarBrickTypeName.IsForeignKey = false;
                colvarBrickTypeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarBrickTypeName);
                
                TableSchema.TableColumn colvarPremisesDetailID = new TableSchema.TableColumn(schema);
                colvarPremisesDetailID.ColumnName = "PremisesDetailID";
                colvarPremisesDetailID.DataType = DbType.Int32;
                colvarPremisesDetailID.MaxLength = 0;
                colvarPremisesDetailID.AutoIncrement = false;
                colvarPremisesDetailID.IsNullable = false;
                colvarPremisesDetailID.IsPrimaryKey = false;
                colvarPremisesDetailID.IsForeignKey = false;
                colvarPremisesDetailID.IsReadOnly = false;
                
                schema.Columns.Add(colvarPremisesDetailID);
                
                TableSchema.TableColumn colvarAreaOfThePremises = new TableSchema.TableColumn(schema);
                colvarAreaOfThePremises.ColumnName = "AreaOfThePremises";
                colvarAreaOfThePremises.DataType = DbType.Decimal;
                colvarAreaOfThePremises.MaxLength = 0;
                colvarAreaOfThePremises.AutoIncrement = false;
                colvarAreaOfThePremises.IsNullable = true;
                colvarAreaOfThePremises.IsPrimaryKey = false;
                colvarAreaOfThePremises.IsForeignKey = false;
                colvarAreaOfThePremises.IsReadOnly = false;
                
                schema.Columns.Add(colvarAreaOfThePremises);
                
                TableSchema.TableColumn colvarNoOfMeters = new TableSchema.TableColumn(schema);
                colvarNoOfMeters.ColumnName = "NoOfMeters";
                colvarNoOfMeters.DataType = DbType.Int32;
                colvarNoOfMeters.MaxLength = 0;
                colvarNoOfMeters.AutoIncrement = false;
                colvarNoOfMeters.IsNullable = true;
                colvarNoOfMeters.IsPrimaryKey = false;
                colvarNoOfMeters.IsForeignKey = false;
                colvarNoOfMeters.IsReadOnly = false;
                
                schema.Columns.Add(colvarNoOfMeters);
                
                TableSchema.TableColumn colvarConsumerFatherHusbandName = new TableSchema.TableColumn(schema);
                colvarConsumerFatherHusbandName.ColumnName = "ConsumerFather_HusbandName";
                colvarConsumerFatherHusbandName.DataType = DbType.AnsiString;
                colvarConsumerFatherHusbandName.MaxLength = 50;
                colvarConsumerFatherHusbandName.AutoIncrement = false;
                colvarConsumerFatherHusbandName.IsNullable = true;
                colvarConsumerFatherHusbandName.IsPrimaryKey = false;
                colvarConsumerFatherHusbandName.IsForeignKey = false;
                colvarConsumerFatherHusbandName.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerFatherHusbandName);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["PrimaryProvider"].AddSchema("VwTblNewConnection",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VwTblNewConnection()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VwTblNewConnection(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VwTblNewConnection(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VwTblNewConnection(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("NewConnectionID")]
        [Bindable(true)]
        public int NewConnectionID 
	    {
		    get
		    {
			    return GetColumnValue<int>("NewConnectionID");
		    }
            set 
		    {
			    SetColumnValue("NewConnectionID", value);
            }
        }
	      
        [XmlAttribute("CunsumerID")]
        [Bindable(true)]
        public int CunsumerID 
	    {
		    get
		    {
			    return GetColumnValue<int>("CunsumerID");
		    }
            set 
		    {
			    SetColumnValue("CunsumerID", value);
            }
        }
	      
        [XmlAttribute("ConsumerName")]
        [Bindable(true)]
        public string ConsumerName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerName");
		    }
            set 
		    {
			    SetColumnValue("ConsumerName", value);
            }
        }
	      
        [XmlAttribute("CunsumerEmail")]
        [Bindable(true)]
        public string CunsumerEmail 
	    {
		    get
		    {
			    return GetColumnValue<string>("CunsumerEmail");
		    }
            set 
		    {
			    SetColumnValue("CunsumerEmail", value);
            }
        }
	      
        [XmlAttribute("ConsumerResidensePhoneNo")]
        [Bindable(true)]
        public string ConsumerResidensePhoneNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerResidensePhoneNo");
		    }
            set 
		    {
			    SetColumnValue("ConsumerResidensePhoneNo", value);
            }
        }
	      
        [XmlAttribute("CunsumerAddress")]
        [Bindable(true)]
        public string CunsumerAddress 
	    {
		    get
		    {
			    return GetColumnValue<string>("CunsumerAddress");
		    }
            set 
		    {
			    SetColumnValue("CunsumerAddress", value);
            }
        }
	      
        [XmlAttribute("ConsumerMobileNo")]
        [Bindable(true)]
        public string ConsumerMobileNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerMobileNo");
		    }
            set 
		    {
			    SetColumnValue("ConsumerMobileNo", value);
            }
        }
	      
        [XmlAttribute("ConsumerNo")]
        [Bindable(true)]
        public string ConsumerNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerNo");
		    }
            set 
		    {
			    SetColumnValue("ConsumerNo", value);
            }
        }
	      
        [XmlAttribute("ConsumerNIC")]
        [Bindable(true)]
        public string ConsumerNIC 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerNIC");
		    }
            set 
		    {
			    SetColumnValue("ConsumerNIC", value);
            }
        }
	      
        [XmlAttribute("IsApprove")]
        [Bindable(true)]
        public bool? IsApprove 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("IsApprove");
		    }
            set 
		    {
			    SetColumnValue("IsApprove", value);
            }
        }
	      
        [XmlAttribute("TOCNeConDetailID")]
        [Bindable(true)]
        public int TOCNeConDetailID 
	    {
		    get
		    {
			    return GetColumnValue<int>("TOCNeConDetailID");
		    }
            set 
		    {
			    SetColumnValue("TOCNeConDetailID", value);
            }
        }
	      
        [XmlAttribute("TypeOfConID")]
        [Bindable(true)]
        public int TypeOfConID 
	    {
		    get
		    {
			    return GetColumnValue<int>("TypeOfConID");
		    }
            set 
		    {
			    SetColumnValue("TypeOfConID", value);
            }
        }
	      
        [XmlAttribute("Name")]
        [Bindable(true)]
        public string Name 
	    {
		    get
		    {
			    return GetColumnValue<string>("Name");
		    }
            set 
		    {
			    SetColumnValue("Name", value);
            }
        }
	      
        [XmlAttribute("RequestCode")]
        [Bindable(true)]
        public string RequestCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("RequestCode");
		    }
            set 
		    {
			    SetColumnValue("RequestCode", value);
            }
        }
	      
        [XmlAttribute("BranchID")]
        [Bindable(true)]
        public int? BranchID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("BranchID");
		    }
            set 
		    {
			    SetColumnValue("BranchID", value);
            }
        }
	      
        [XmlAttribute("BranchCode")]
        [Bindable(true)]
        public string BranchCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("BranchCode");
		    }
            set 
		    {
			    SetColumnValue("BranchCode", value);
            }
        }
	      
        [XmlAttribute("BranchName")]
        [Bindable(true)]
        public string BranchName 
	    {
		    get
		    {
			    return GetColumnValue<string>("BranchName");
		    }
            set 
		    {
			    SetColumnValue("BranchName", value);
            }
        }
	      
        [XmlAttribute("EmployeeID")]
        [Bindable(true)]
        public int? EmployeeID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("EmployeeID");
		    }
            set 
		    {
			    SetColumnValue("EmployeeID", value);
            }
        }
	      
        [XmlAttribute("EmployeeCode")]
        [Bindable(true)]
        public string EmployeeCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("EmployeeCode");
		    }
            set 
		    {
			    SetColumnValue("EmployeeCode", value);
            }
        }
	      
        [XmlAttribute("EmployeeName")]
        [Bindable(true)]
        public string EmployeeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("EmployeeName");
		    }
            set 
		    {
			    SetColumnValue("EmployeeName", value);
            }
        }
	      
        [XmlAttribute("EmailAddress")]
        [Bindable(true)]
        public string EmailAddress 
	    {
		    get
		    {
			    return GetColumnValue<string>("EmailAddress");
		    }
            set 
		    {
			    SetColumnValue("EmailAddress", value);
            }
        }
	      
        [XmlAttribute("MobileNo")]
        [Bindable(true)]
        public string MobileNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("MobileNo");
		    }
            set 
		    {
			    SetColumnValue("MobileNo", value);
            }
        }
	      
        [XmlAttribute("PhoneNo")]
        [Bindable(true)]
        public string PhoneNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("PhoneNo");
		    }
            set 
		    {
			    SetColumnValue("PhoneNo", value);
            }
        }
	      
        [XmlAttribute("Address")]
        [Bindable(true)]
        public string Address 
	    {
		    get
		    {
			    return GetColumnValue<string>("Address");
		    }
            set 
		    {
			    SetColumnValue("Address", value);
            }
        }
	      
        [XmlAttribute("Nic")]
        [Bindable(true)]
        public string Nic 
	    {
		    get
		    {
			    return GetColumnValue<string>("NIC");
		    }
            set 
		    {
			    SetColumnValue("NIC", value);
            }
        }
	      
        [XmlAttribute("MeterTypeID")]
        [Bindable(true)]
        public int? MeterTypeID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("MeterTypeID");
		    }
            set 
		    {
			    SetColumnValue("MeterTypeID", value);
            }
        }
	      
        [XmlAttribute("MeterTypeName")]
        [Bindable(true)]
        public string MeterTypeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("MeterTypeName");
		    }
            set 
		    {
			    SetColumnValue("MeterTypeName", value);
            }
        }
	      
        [XmlAttribute("BrickID")]
        [Bindable(true)]
        public int? BrickID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("BrickID");
		    }
            set 
		    {
			    SetColumnValue("BrickID", value);
            }
        }
	      
        [XmlAttribute("BrickName")]
        [Bindable(true)]
        public string BrickName 
	    {
		    get
		    {
			    return GetColumnValue<string>("BrickName");
		    }
            set 
		    {
			    SetColumnValue("BrickName", value);
            }
        }
	      
        [XmlAttribute("BrickTypeID")]
        [Bindable(true)]
        public int? BrickTypeID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("BrickTypeID");
		    }
            set 
		    {
			    SetColumnValue("BrickTypeID", value);
            }
        }
	      
        [XmlAttribute("BrickTypeName")]
        [Bindable(true)]
        public string BrickTypeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("BrickTypeName");
		    }
            set 
		    {
			    SetColumnValue("BrickTypeName", value);
            }
        }
	      
        [XmlAttribute("PremisesDetailID")]
        [Bindable(true)]
        public int PremisesDetailID 
	    {
		    get
		    {
			    return GetColumnValue<int>("PremisesDetailID");
		    }
            set 
		    {
			    SetColumnValue("PremisesDetailID", value);
            }
        }
	      
        [XmlAttribute("AreaOfThePremises")]
        [Bindable(true)]
        public decimal? AreaOfThePremises 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("AreaOfThePremises");
		    }
            set 
		    {
			    SetColumnValue("AreaOfThePremises", value);
            }
        }
	      
        [XmlAttribute("NoOfMeters")]
        [Bindable(true)]
        public int? NoOfMeters 
	    {
		    get
		    {
			    return GetColumnValue<int?>("NoOfMeters");
		    }
            set 
		    {
			    SetColumnValue("NoOfMeters", value);
            }
        }
	      
        [XmlAttribute("ConsumerFatherHusbandName")]
        [Bindable(true)]
        public string ConsumerFatherHusbandName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerFather_HusbandName");
		    }
            set 
		    {
			    SetColumnValue("ConsumerFather_HusbandName", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string NewConnectionID = @"NewConnectionID";
            
            public static string CunsumerID = @"CunsumerID";
            
            public static string ConsumerName = @"ConsumerName";
            
            public static string CunsumerEmail = @"CunsumerEmail";
            
            public static string ConsumerResidensePhoneNo = @"ConsumerResidensePhoneNo";
            
            public static string CunsumerAddress = @"CunsumerAddress";
            
            public static string ConsumerMobileNo = @"ConsumerMobileNo";
            
            public static string ConsumerNo = @"ConsumerNo";
            
            public static string ConsumerNIC = @"ConsumerNIC";
            
            public static string IsApprove = @"IsApprove";
            
            public static string TOCNeConDetailID = @"TOCNeConDetailID";
            
            public static string TypeOfConID = @"TypeOfConID";
            
            public static string Name = @"Name";
            
            public static string RequestCode = @"RequestCode";
            
            public static string BranchID = @"BranchID";
            
            public static string BranchCode = @"BranchCode";
            
            public static string BranchName = @"BranchName";
            
            public static string EmployeeID = @"EmployeeID";
            
            public static string EmployeeCode = @"EmployeeCode";
            
            public static string EmployeeName = @"EmployeeName";
            
            public static string EmailAddress = @"EmailAddress";
            
            public static string MobileNo = @"MobileNo";
            
            public static string PhoneNo = @"PhoneNo";
            
            public static string Address = @"Address";
            
            public static string Nic = @"NIC";
            
            public static string MeterTypeID = @"MeterTypeID";
            
            public static string MeterTypeName = @"MeterTypeName";
            
            public static string BrickID = @"BrickID";
            
            public static string BrickName = @"BrickName";
            
            public static string BrickTypeID = @"BrickTypeID";
            
            public static string BrickTypeName = @"BrickTypeName";
            
            public static string PremisesDetailID = @"PremisesDetailID";
            
            public static string AreaOfThePremises = @"AreaOfThePremises";
            
            public static string NoOfMeters = @"NoOfMeters";
            
            public static string ConsumerFatherHusbandName = @"ConsumerFather_HusbandName";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
