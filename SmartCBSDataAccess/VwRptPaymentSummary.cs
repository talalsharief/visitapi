using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SmartCBSDataAccess{
    /// <summary>
    /// Strongly-typed collection for the VwRptPaymentSummary class.
    /// </summary>
    [Serializable]
    public partial class VwRptPaymentSummaryCollection : ReadOnlyList<VwRptPaymentSummary, VwRptPaymentSummaryCollection>
    {        
        public VwRptPaymentSummaryCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the VwRptPaymentSummary view.
    /// </summary>
    [Serializable]
    public partial class VwRptPaymentSummary : ReadOnlyRecord<VwRptPaymentSummary>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("VwRptPaymentSummary", TableType.View, DataService.GetInstance("PrimaryProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarBillPaymentID = new TableSchema.TableColumn(schema);
                colvarBillPaymentID.ColumnName = "BillPaymentID";
                colvarBillPaymentID.DataType = DbType.Int32;
                colvarBillPaymentID.MaxLength = 0;
                colvarBillPaymentID.AutoIncrement = false;
                colvarBillPaymentID.IsNullable = false;
                colvarBillPaymentID.IsPrimaryKey = false;
                colvarBillPaymentID.IsForeignKey = false;
                colvarBillPaymentID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillPaymentID);
                
                TableSchema.TableColumn colvarCollectionPointID = new TableSchema.TableColumn(schema);
                colvarCollectionPointID.ColumnName = "CollectionPointID";
                colvarCollectionPointID.DataType = DbType.Int32;
                colvarCollectionPointID.MaxLength = 0;
                colvarCollectionPointID.AutoIncrement = false;
                colvarCollectionPointID.IsNullable = true;
                colvarCollectionPointID.IsPrimaryKey = false;
                colvarCollectionPointID.IsForeignKey = false;
                colvarCollectionPointID.IsReadOnly = false;
                
                schema.Columns.Add(colvarCollectionPointID);
                
                TableSchema.TableColumn colvarPaymentDate = new TableSchema.TableColumn(schema);
                colvarPaymentDate.ColumnName = "PaymentDate";
                colvarPaymentDate.DataType = DbType.DateTime;
                colvarPaymentDate.MaxLength = 0;
                colvarPaymentDate.AutoIncrement = false;
                colvarPaymentDate.IsNullable = true;
                colvarPaymentDate.IsPrimaryKey = false;
                colvarPaymentDate.IsForeignKey = false;
                colvarPaymentDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarPaymentDate);
                
                TableSchema.TableColumn colvarBillAmountPaid = new TableSchema.TableColumn(schema);
                colvarBillAmountPaid.ColumnName = "BillAmountPaid";
                colvarBillAmountPaid.DataType = DbType.Decimal;
                colvarBillAmountPaid.MaxLength = 0;
                colvarBillAmountPaid.AutoIncrement = false;
                colvarBillAmountPaid.IsNullable = false;
                colvarBillAmountPaid.IsPrimaryKey = false;
                colvarBillAmountPaid.IsForeignKey = false;
                colvarBillAmountPaid.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillAmountPaid);
                
                TableSchema.TableColumn colvarBillAmount = new TableSchema.TableColumn(schema);
                colvarBillAmount.ColumnName = "BillAmount";
                colvarBillAmount.DataType = DbType.Decimal;
                colvarBillAmount.MaxLength = 0;
                colvarBillAmount.AutoIncrement = false;
                colvarBillAmount.IsNullable = false;
                colvarBillAmount.IsPrimaryKey = false;
                colvarBillAmount.IsForeignKey = false;
                colvarBillAmount.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillAmount);
                
                TableSchema.TableColumn colvarBillNo = new TableSchema.TableColumn(schema);
                colvarBillNo.ColumnName = "BillNo";
                colvarBillNo.DataType = DbType.AnsiString;
                colvarBillNo.MaxLength = 100;
                colvarBillNo.AutoIncrement = false;
                colvarBillNo.IsNullable = true;
                colvarBillNo.IsPrimaryKey = false;
                colvarBillNo.IsForeignKey = false;
                colvarBillNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillNo);
                
                TableSchema.TableColumn colvarBillID = new TableSchema.TableColumn(schema);
                colvarBillID.ColumnName = "BillID";
                colvarBillID.DataType = DbType.Int32;
                colvarBillID.MaxLength = 0;
                colvarBillID.AutoIncrement = false;
                colvarBillID.IsNullable = false;
                colvarBillID.IsPrimaryKey = false;
                colvarBillID.IsForeignKey = false;
                colvarBillID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillID);
                
                TableSchema.TableColumn colvarMeterID = new TableSchema.TableColumn(schema);
                colvarMeterID.ColumnName = "MeterID";
                colvarMeterID.DataType = DbType.Int32;
                colvarMeterID.MaxLength = 0;
                colvarMeterID.AutoIncrement = false;
                colvarMeterID.IsNullable = false;
                colvarMeterID.IsPrimaryKey = false;
                colvarMeterID.IsForeignKey = false;
                colvarMeterID.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterID);
                
                TableSchema.TableColumn colvarConsumerName = new TableSchema.TableColumn(schema);
                colvarConsumerName.ColumnName = "ConsumerName";
                colvarConsumerName.DataType = DbType.AnsiString;
                colvarConsumerName.MaxLength = 50;
                colvarConsumerName.AutoIncrement = false;
                colvarConsumerName.IsNullable = true;
                colvarConsumerName.IsPrimaryKey = false;
                colvarConsumerName.IsForeignKey = false;
                colvarConsumerName.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerName);
                
                TableSchema.TableColumn colvarCunsumerID = new TableSchema.TableColumn(schema);
                colvarCunsumerID.ColumnName = "CunsumerID";
                colvarCunsumerID.DataType = DbType.Int32;
                colvarCunsumerID.MaxLength = 0;
                colvarCunsumerID.AutoIncrement = false;
                colvarCunsumerID.IsNullable = false;
                colvarCunsumerID.IsPrimaryKey = false;
                colvarCunsumerID.IsForeignKey = false;
                colvarCunsumerID.IsReadOnly = false;
                
                schema.Columns.Add(colvarCunsumerID);
                
                TableSchema.TableColumn colvarMeterNo = new TableSchema.TableColumn(schema);
                colvarMeterNo.ColumnName = "MeterNo";
                colvarMeterNo.DataType = DbType.AnsiString;
                colvarMeterNo.MaxLength = -1;
                colvarMeterNo.AutoIncrement = false;
                colvarMeterNo.IsNullable = true;
                colvarMeterNo.IsPrimaryKey = false;
                colvarMeterNo.IsForeignKey = false;
                colvarMeterNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterNo);
                
                TableSchema.TableColumn colvarBranchID = new TableSchema.TableColumn(schema);
                colvarBranchID.ColumnName = "BranchID";
                colvarBranchID.DataType = DbType.Int32;
                colvarBranchID.MaxLength = 0;
                colvarBranchID.AutoIncrement = false;
                colvarBranchID.IsNullable = false;
                colvarBranchID.IsPrimaryKey = false;
                colvarBranchID.IsForeignKey = false;
                colvarBranchID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchID);
                
                TableSchema.TableColumn colvarBranchCode = new TableSchema.TableColumn(schema);
                colvarBranchCode.ColumnName = "BranchCode";
                colvarBranchCode.DataType = DbType.AnsiString;
                colvarBranchCode.MaxLength = 50;
                colvarBranchCode.AutoIncrement = false;
                colvarBranchCode.IsNullable = true;
                colvarBranchCode.IsPrimaryKey = false;
                colvarBranchCode.IsForeignKey = false;
                colvarBranchCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchCode);
                
                TableSchema.TableColumn colvarBranchName = new TableSchema.TableColumn(schema);
                colvarBranchName.ColumnName = "BranchName";
                colvarBranchName.DataType = DbType.AnsiString;
                colvarBranchName.MaxLength = 150;
                colvarBranchName.AutoIncrement = false;
                colvarBranchName.IsNullable = true;
                colvarBranchName.IsPrimaryKey = false;
                colvarBranchName.IsForeignKey = false;
                colvarBranchName.IsReadOnly = false;
                
                schema.Columns.Add(colvarBranchName);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["PrimaryProvider"].AddSchema("VwRptPaymentSummary",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VwRptPaymentSummary()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VwRptPaymentSummary(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VwRptPaymentSummary(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VwRptPaymentSummary(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("BillPaymentID")]
        [Bindable(true)]
        public int BillPaymentID 
	    {
		    get
		    {
			    return GetColumnValue<int>("BillPaymentID");
		    }
            set 
		    {
			    SetColumnValue("BillPaymentID", value);
            }
        }
	      
        [XmlAttribute("CollectionPointID")]
        [Bindable(true)]
        public int? CollectionPointID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("CollectionPointID");
		    }
            set 
		    {
			    SetColumnValue("CollectionPointID", value);
            }
        }
	      
        [XmlAttribute("PaymentDate")]
        [Bindable(true)]
        public DateTime? PaymentDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("PaymentDate");
		    }
            set 
		    {
			    SetColumnValue("PaymentDate", value);
            }
        }
	      
        [XmlAttribute("BillAmountPaid")]
        [Bindable(true)]
        public decimal BillAmountPaid 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("BillAmountPaid");
		    }
            set 
		    {
			    SetColumnValue("BillAmountPaid", value);
            }
        }
	      
        [XmlAttribute("BillAmount")]
        [Bindable(true)]
        public decimal BillAmount 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("BillAmount");
		    }
            set 
		    {
			    SetColumnValue("BillAmount", value);
            }
        }
	      
        [XmlAttribute("BillNo")]
        [Bindable(true)]
        public string BillNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("BillNo");
		    }
            set 
		    {
			    SetColumnValue("BillNo", value);
            }
        }
	      
        [XmlAttribute("BillID")]
        [Bindable(true)]
        public int BillID 
	    {
		    get
		    {
			    return GetColumnValue<int>("BillID");
		    }
            set 
		    {
			    SetColumnValue("BillID", value);
            }
        }
	      
        [XmlAttribute("MeterID")]
        [Bindable(true)]
        public int MeterID 
	    {
		    get
		    {
			    return GetColumnValue<int>("MeterID");
		    }
            set 
		    {
			    SetColumnValue("MeterID", value);
            }
        }
	      
        [XmlAttribute("ConsumerName")]
        [Bindable(true)]
        public string ConsumerName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerName");
		    }
            set 
		    {
			    SetColumnValue("ConsumerName", value);
            }
        }
	      
        [XmlAttribute("CunsumerID")]
        [Bindable(true)]
        public int CunsumerID 
	    {
		    get
		    {
			    return GetColumnValue<int>("CunsumerID");
		    }
            set 
		    {
			    SetColumnValue("CunsumerID", value);
            }
        }
	      
        [XmlAttribute("MeterNo")]
        [Bindable(true)]
        public string MeterNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("MeterNo");
		    }
            set 
		    {
			    SetColumnValue("MeterNo", value);
            }
        }
	      
        [XmlAttribute("BranchID")]
        [Bindable(true)]
        public int BranchID 
	    {
		    get
		    {
			    return GetColumnValue<int>("BranchID");
		    }
            set 
		    {
			    SetColumnValue("BranchID", value);
            }
        }
	      
        [XmlAttribute("BranchCode")]
        [Bindable(true)]
        public string BranchCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("BranchCode");
		    }
            set 
		    {
			    SetColumnValue("BranchCode", value);
            }
        }
	      
        [XmlAttribute("BranchName")]
        [Bindable(true)]
        public string BranchName 
	    {
		    get
		    {
			    return GetColumnValue<string>("BranchName");
		    }
            set 
		    {
			    SetColumnValue("BranchName", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string BillPaymentID = @"BillPaymentID";
            
            public static string CollectionPointID = @"CollectionPointID";
            
            public static string PaymentDate = @"PaymentDate";
            
            public static string BillAmountPaid = @"BillAmountPaid";
            
            public static string BillAmount = @"BillAmount";
            
            public static string BillNo = @"BillNo";
            
            public static string BillID = @"BillID";
            
            public static string MeterID = @"MeterID";
            
            public static string ConsumerName = @"ConsumerName";
            
            public static string CunsumerID = @"CunsumerID";
            
            public static string MeterNo = @"MeterNo";
            
            public static string BranchID = @"BranchID";
            
            public static string BranchCode = @"BranchCode";
            
            public static string BranchName = @"BranchName";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
