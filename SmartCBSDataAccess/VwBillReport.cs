using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace SmartCBSDataAccess{
    /// <summary>
    /// Strongly-typed collection for the VwBillReport class.
    /// </summary>
    [Serializable]
    public partial class VwBillReportCollection : ReadOnlyList<VwBillReport, VwBillReportCollection>
    {        
        public VwBillReportCollection() {}
    }
    /// <summary>
    /// This is  Read-only wrapper class for the VwBillReport view.
    /// </summary>
    [Serializable]
    public partial class VwBillReport : ReadOnlyRecord<VwBillReport>, IReadOnlyRecord
    {
    
	    #region Default Settings
	    protected static void SetSQLProps() 
	    {
		    GetTableSchema();
	    }
	    #endregion
        #region Schema Accessor
	    public static TableSchema.Table Schema
        {
            get
            {
                if (BaseSchema == null)
                {
                    SetSQLProps();
                }
                return BaseSchema;
            }
        }
    	
        private static void GetTableSchema() 
        {
            if(!IsSchemaInitialized)
            {
                //Schema declaration
                TableSchema.Table schema = new TableSchema.Table("VwBillReport", TableType.View, DataService.GetInstance("PrimaryProvider"));
                schema.Columns = new TableSchema.TableColumnCollection();
                schema.SchemaName = @"dbo";
                //columns
                
                TableSchema.TableColumn colvarBillID = new TableSchema.TableColumn(schema);
                colvarBillID.ColumnName = "BillID";
                colvarBillID.DataType = DbType.Int32;
                colvarBillID.MaxLength = 0;
                colvarBillID.AutoIncrement = false;
                colvarBillID.IsNullable = false;
                colvarBillID.IsPrimaryKey = false;
                colvarBillID.IsForeignKey = false;
                colvarBillID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillID);
                
                TableSchema.TableColumn colvarBillNo = new TableSchema.TableColumn(schema);
                colvarBillNo.ColumnName = "BillNo";
                colvarBillNo.DataType = DbType.AnsiString;
                colvarBillNo.MaxLength = 100;
                colvarBillNo.AutoIncrement = false;
                colvarBillNo.IsNullable = true;
                colvarBillNo.IsPrimaryKey = false;
                colvarBillNo.IsForeignKey = false;
                colvarBillNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillNo);
                
                TableSchema.TableColumn colvarNoOfMonths = new TableSchema.TableColumn(schema);
                colvarNoOfMonths.ColumnName = "NoOfMonths";
                colvarNoOfMonths.DataType = DbType.Int32;
                colvarNoOfMonths.MaxLength = 0;
                colvarNoOfMonths.AutoIncrement = false;
                colvarNoOfMonths.IsNullable = true;
                colvarNoOfMonths.IsPrimaryKey = false;
                colvarNoOfMonths.IsForeignKey = false;
                colvarNoOfMonths.IsReadOnly = false;
                
                schema.Columns.Add(colvarNoOfMonths);
                
                TableSchema.TableColumn colvarSLoad = new TableSchema.TableColumn(schema);
                colvarSLoad.ColumnName = "SLoad";
                colvarSLoad.DataType = DbType.Int32;
                colvarSLoad.MaxLength = 0;
                colvarSLoad.AutoIncrement = false;
                colvarSLoad.IsNullable = true;
                colvarSLoad.IsPrimaryKey = false;
                colvarSLoad.IsForeignKey = false;
                colvarSLoad.IsReadOnly = false;
                
                schema.Columns.Add(colvarSLoad);
                
                TableSchema.TableColumn colvarTotalSD = new TableSchema.TableColumn(schema);
                colvarTotalSD.ColumnName = "TotalSD";
                colvarTotalSD.DataType = DbType.Decimal;
                colvarTotalSD.MaxLength = 0;
                colvarTotalSD.AutoIncrement = false;
                colvarTotalSD.IsNullable = true;
                colvarTotalSD.IsPrimaryKey = false;
                colvarTotalSD.IsForeignKey = false;
                colvarTotalSD.IsReadOnly = false;
                
                schema.Columns.Add(colvarTotalSD);
                
                TableSchema.TableColumn colvarIssueDate = new TableSchema.TableColumn(schema);
                colvarIssueDate.ColumnName = "IssueDate";
                colvarIssueDate.DataType = DbType.DateTime;
                colvarIssueDate.MaxLength = 0;
                colvarIssueDate.AutoIncrement = false;
                colvarIssueDate.IsNullable = true;
                colvarIssueDate.IsPrimaryKey = false;
                colvarIssueDate.IsForeignKey = false;
                colvarIssueDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarIssueDate);
                
                TableSchema.TableColumn colvarDueDate = new TableSchema.TableColumn(schema);
                colvarDueDate.ColumnName = "DueDate";
                colvarDueDate.DataType = DbType.DateTime;
                colvarDueDate.MaxLength = 0;
                colvarDueDate.AutoIncrement = false;
                colvarDueDate.IsNullable = true;
                colvarDueDate.IsPrimaryKey = false;
                colvarDueDate.IsForeignKey = false;
                colvarDueDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarDueDate);
                
                TableSchema.TableColumn colvarBillingMonth = new TableSchema.TableColumn(schema);
                colvarBillingMonth.ColumnName = "BillingMonth";
                colvarBillingMonth.DataType = DbType.AnsiString;
                colvarBillingMonth.MaxLength = 50;
                colvarBillingMonth.AutoIncrement = false;
                colvarBillingMonth.IsNullable = true;
                colvarBillingMonth.IsPrimaryKey = false;
                colvarBillingMonth.IsForeignKey = false;
                colvarBillingMonth.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillingMonth);
                
                TableSchema.TableColumn colvarBillingYear = new TableSchema.TableColumn(schema);
                colvarBillingYear.ColumnName = "BillingYear";
                colvarBillingYear.DataType = DbType.AnsiString;
                colvarBillingYear.MaxLength = 50;
                colvarBillingYear.AutoIncrement = false;
                colvarBillingYear.IsNullable = true;
                colvarBillingYear.IsPrimaryKey = false;
                colvarBillingYear.IsForeignKey = false;
                colvarBillingYear.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillingYear);
                
                TableSchema.TableColumn colvarUnitsBill = new TableSchema.TableColumn(schema);
                colvarUnitsBill.ColumnName = "UnitsBill";
                colvarUnitsBill.DataType = DbType.Decimal;
                colvarUnitsBill.MaxLength = 0;
                colvarUnitsBill.AutoIncrement = false;
                colvarUnitsBill.IsNullable = false;
                colvarUnitsBill.IsPrimaryKey = false;
                colvarUnitsBill.IsForeignKey = false;
                colvarUnitsBill.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitsBill);
                
                TableSchema.TableColumn colvarUnitsAdjusted = new TableSchema.TableColumn(schema);
                colvarUnitsAdjusted.ColumnName = "UnitsAdjusted";
                colvarUnitsAdjusted.DataType = DbType.Decimal;
                colvarUnitsAdjusted.MaxLength = 0;
                colvarUnitsAdjusted.AutoIncrement = false;
                colvarUnitsAdjusted.IsNullable = true;
                colvarUnitsAdjusted.IsPrimaryKey = false;
                colvarUnitsAdjusted.IsForeignKey = false;
                colvarUnitsAdjusted.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitsAdjusted);
                
                TableSchema.TableColumn colvarBillUpto = new TableSchema.TableColumn(schema);
                colvarBillUpto.ColumnName = "BillUpto";
                colvarBillUpto.DataType = DbType.Decimal;
                colvarBillUpto.MaxLength = 0;
                colvarBillUpto.AutoIncrement = false;
                colvarBillUpto.IsNullable = true;
                colvarBillUpto.IsPrimaryKey = false;
                colvarBillUpto.IsForeignKey = false;
                colvarBillUpto.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillUpto);
                
                TableSchema.TableColumn colvarMdi = new TableSchema.TableColumn(schema);
                colvarMdi.ColumnName = "MDI";
                colvarMdi.DataType = DbType.Decimal;
                colvarMdi.MaxLength = 0;
                colvarMdi.AutoIncrement = false;
                colvarMdi.IsNullable = true;
                colvarMdi.IsPrimaryKey = false;
                colvarMdi.IsForeignKey = false;
                colvarMdi.IsReadOnly = false;
                
                schema.Columns.Add(colvarMdi);
                
                TableSchema.TableColumn colvarAmountPaybleDueDate = new TableSchema.TableColumn(schema);
                colvarAmountPaybleDueDate.ColumnName = "AmountPaybleDueDate";
                colvarAmountPaybleDueDate.DataType = DbType.Decimal;
                colvarAmountPaybleDueDate.MaxLength = 0;
                colvarAmountPaybleDueDate.AutoIncrement = false;
                colvarAmountPaybleDueDate.IsNullable = true;
                colvarAmountPaybleDueDate.IsPrimaryKey = false;
                colvarAmountPaybleDueDate.IsForeignKey = false;
                colvarAmountPaybleDueDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarAmountPaybleDueDate);
                
                TableSchema.TableColumn colvarAmountPaybleAfterDueDate = new TableSchema.TableColumn(schema);
                colvarAmountPaybleAfterDueDate.ColumnName = "AmountPaybleAfterDueDate";
                colvarAmountPaybleAfterDueDate.DataType = DbType.Decimal;
                colvarAmountPaybleAfterDueDate.MaxLength = 0;
                colvarAmountPaybleAfterDueDate.AutoIncrement = false;
                colvarAmountPaybleAfterDueDate.IsNullable = true;
                colvarAmountPaybleAfterDueDate.IsPrimaryKey = false;
                colvarAmountPaybleAfterDueDate.IsForeignKey = false;
                colvarAmountPaybleAfterDueDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarAmountPaybleAfterDueDate);
                
                TableSchema.TableColumn colvarStatus = new TableSchema.TableColumn(schema);
                colvarStatus.ColumnName = "Status";
                colvarStatus.DataType = DbType.AnsiString;
                colvarStatus.MaxLength = 50;
                colvarStatus.AutoIncrement = false;
                colvarStatus.IsNullable = true;
                colvarStatus.IsPrimaryKey = false;
                colvarStatus.IsForeignKey = false;
                colvarStatus.IsReadOnly = false;
                
                schema.Columns.Add(colvarStatus);
                
                TableSchema.TableColumn colvarMeterReadingID = new TableSchema.TableColumn(schema);
                colvarMeterReadingID.ColumnName = "MeterReadingID";
                colvarMeterReadingID.DataType = DbType.Int32;
                colvarMeterReadingID.MaxLength = 0;
                colvarMeterReadingID.AutoIncrement = false;
                colvarMeterReadingID.IsNullable = true;
                colvarMeterReadingID.IsPrimaryKey = false;
                colvarMeterReadingID.IsForeignKey = false;
                colvarMeterReadingID.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterReadingID);
                
                TableSchema.TableColumn colvarMeterReadingMonth = new TableSchema.TableColumn(schema);
                colvarMeterReadingMonth.ColumnName = "MeterReadingMonth";
                colvarMeterReadingMonth.DataType = DbType.AnsiString;
                colvarMeterReadingMonth.MaxLength = 50;
                colvarMeterReadingMonth.AutoIncrement = false;
                colvarMeterReadingMonth.IsNullable = true;
                colvarMeterReadingMonth.IsPrimaryKey = false;
                colvarMeterReadingMonth.IsForeignKey = false;
                colvarMeterReadingMonth.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterReadingMonth);
                
                TableSchema.TableColumn colvarMeterReadingYear = new TableSchema.TableColumn(schema);
                colvarMeterReadingYear.ColumnName = "MeterReadingYear";
                colvarMeterReadingYear.DataType = DbType.AnsiString;
                colvarMeterReadingYear.MaxLength = 50;
                colvarMeterReadingYear.AutoIncrement = false;
                colvarMeterReadingYear.IsNullable = true;
                colvarMeterReadingYear.IsPrimaryKey = false;
                colvarMeterReadingYear.IsForeignKey = false;
                colvarMeterReadingYear.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterReadingYear);
                
                TableSchema.TableColumn colvarPreviousReading = new TableSchema.TableColumn(schema);
                colvarPreviousReading.ColumnName = "PreviousReading";
                colvarPreviousReading.DataType = DbType.Decimal;
                colvarPreviousReading.MaxLength = 0;
                colvarPreviousReading.AutoIncrement = false;
                colvarPreviousReading.IsNullable = true;
                colvarPreviousReading.IsPrimaryKey = false;
                colvarPreviousReading.IsForeignKey = false;
                colvarPreviousReading.IsReadOnly = false;
                
                schema.Columns.Add(colvarPreviousReading);
                
                TableSchema.TableColumn colvarCurrentReading = new TableSchema.TableColumn(schema);
                colvarCurrentReading.ColumnName = "CurrentReading";
                colvarCurrentReading.DataType = DbType.Decimal;
                colvarCurrentReading.MaxLength = 0;
                colvarCurrentReading.AutoIncrement = false;
                colvarCurrentReading.IsNullable = true;
                colvarCurrentReading.IsPrimaryKey = false;
                colvarCurrentReading.IsForeignKey = false;
                colvarCurrentReading.IsReadOnly = false;
                
                schema.Columns.Add(colvarCurrentReading);
                
                TableSchema.TableColumn colvarCLoad = new TableSchema.TableColumn(schema);
                colvarCLoad.ColumnName = "CLoad";
                colvarCLoad.DataType = DbType.Int32;
                colvarCLoad.MaxLength = 0;
                colvarCLoad.AutoIncrement = false;
                colvarCLoad.IsNullable = true;
                colvarCLoad.IsPrimaryKey = false;
                colvarCLoad.IsForeignKey = false;
                colvarCLoad.IsReadOnly = false;
                
                schema.Columns.Add(colvarCLoad);
                
                TableSchema.TableColumn colvarMeterImage = new TableSchema.TableColumn(schema);
                colvarMeterImage.ColumnName = "MeterImage";
                colvarMeterImage.DataType = DbType.AnsiString;
                colvarMeterImage.MaxLength = -1;
                colvarMeterImage.AutoIncrement = false;
                colvarMeterImage.IsNullable = true;
                colvarMeterImage.IsPrimaryKey = false;
                colvarMeterImage.IsForeignKey = false;
                colvarMeterImage.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterImage);
                
                TableSchema.TableColumn colvarBillChargingModeID = new TableSchema.TableColumn(schema);
                colvarBillChargingModeID.ColumnName = "BillChargingModeID";
                colvarBillChargingModeID.DataType = DbType.Int32;
                colvarBillChargingModeID.MaxLength = 0;
                colvarBillChargingModeID.AutoIncrement = false;
                colvarBillChargingModeID.IsNullable = true;
                colvarBillChargingModeID.IsPrimaryKey = false;
                colvarBillChargingModeID.IsForeignKey = false;
                colvarBillChargingModeID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillChargingModeID);
                
                TableSchema.TableColumn colvarBillChargingModeName = new TableSchema.TableColumn(schema);
                colvarBillChargingModeName.ColumnName = "BillChargingModeName";
                colvarBillChargingModeName.DataType = DbType.AnsiString;
                colvarBillChargingModeName.MaxLength = 50;
                colvarBillChargingModeName.AutoIncrement = false;
                colvarBillChargingModeName.IsNullable = true;
                colvarBillChargingModeName.IsPrimaryKey = false;
                colvarBillChargingModeName.IsForeignKey = false;
                colvarBillChargingModeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillChargingModeName);
                
                TableSchema.TableColumn colvarBillChargingModeCode = new TableSchema.TableColumn(schema);
                colvarBillChargingModeCode.ColumnName = "BillChargingModeCode";
                colvarBillChargingModeCode.DataType = DbType.AnsiString;
                colvarBillChargingModeCode.MaxLength = 50;
                colvarBillChargingModeCode.AutoIncrement = false;
                colvarBillChargingModeCode.IsNullable = true;
                colvarBillChargingModeCode.IsPrimaryKey = false;
                colvarBillChargingModeCode.IsForeignKey = false;
                colvarBillChargingModeCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarBillChargingModeCode);
                
                TableSchema.TableColumn colvarTariffID = new TableSchema.TableColumn(schema);
                colvarTariffID.ColumnName = "TariffID";
                colvarTariffID.DataType = DbType.Int32;
                colvarTariffID.MaxLength = 0;
                colvarTariffID.AutoIncrement = false;
                colvarTariffID.IsNullable = false;
                colvarTariffID.IsPrimaryKey = false;
                colvarTariffID.IsForeignKey = false;
                colvarTariffID.IsReadOnly = false;
                
                schema.Columns.Add(colvarTariffID);
                
                TableSchema.TableColumn colvarTariffName = new TableSchema.TableColumn(schema);
                colvarTariffName.ColumnName = "TariffName";
                colvarTariffName.DataType = DbType.AnsiString;
                colvarTariffName.MaxLength = 50;
                colvarTariffName.AutoIncrement = false;
                colvarTariffName.IsNullable = true;
                colvarTariffName.IsPrimaryKey = false;
                colvarTariffName.IsForeignKey = false;
                colvarTariffName.IsReadOnly = false;
                
                schema.Columns.Add(colvarTariffName);
                
                TableSchema.TableColumn colvarTariffCode = new TableSchema.TableColumn(schema);
                colvarTariffCode.ColumnName = "TariffCode";
                colvarTariffCode.DataType = DbType.AnsiString;
                colvarTariffCode.MaxLength = 50;
                colvarTariffCode.AutoIncrement = false;
                colvarTariffCode.IsNullable = true;
                colvarTariffCode.IsPrimaryKey = false;
                colvarTariffCode.IsForeignKey = false;
                colvarTariffCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarTariffCode);
                
                TableSchema.TableColumn colvarMeterID = new TableSchema.TableColumn(schema);
                colvarMeterID.ColumnName = "MeterID";
                colvarMeterID.DataType = DbType.Int32;
                colvarMeterID.MaxLength = 0;
                colvarMeterID.AutoIncrement = false;
                colvarMeterID.IsNullable = true;
                colvarMeterID.IsPrimaryKey = false;
                colvarMeterID.IsForeignKey = false;
                colvarMeterID.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterID);
                
                TableSchema.TableColumn colvarMeterNo = new TableSchema.TableColumn(schema);
                colvarMeterNo.ColumnName = "MeterNo";
                colvarMeterNo.DataType = DbType.AnsiString;
                colvarMeterNo.MaxLength = -1;
                colvarMeterNo.AutoIncrement = false;
                colvarMeterNo.IsNullable = true;
                colvarMeterNo.IsPrimaryKey = false;
                colvarMeterNo.IsForeignKey = false;
                colvarMeterNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterNo);
                
                TableSchema.TableColumn colvarAccountNo = new TableSchema.TableColumn(schema);
                colvarAccountNo.ColumnName = "AccountNo";
                colvarAccountNo.DataType = DbType.AnsiString;
                colvarAccountNo.MaxLength = -1;
                colvarAccountNo.AutoIncrement = false;
                colvarAccountNo.IsNullable = true;
                colvarAccountNo.IsPrimaryKey = false;
                colvarAccountNo.IsForeignKey = false;
                colvarAccountNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarAccountNo);
                
                TableSchema.TableColumn colvarMeterIssueDate = new TableSchema.TableColumn(schema);
                colvarMeterIssueDate.ColumnName = "MeterIssueDate";
                colvarMeterIssueDate.DataType = DbType.DateTime;
                colvarMeterIssueDate.MaxLength = 0;
                colvarMeterIssueDate.AutoIncrement = false;
                colvarMeterIssueDate.IsNullable = true;
                colvarMeterIssueDate.IsPrimaryKey = false;
                colvarMeterIssueDate.IsForeignKey = false;
                colvarMeterIssueDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterIssueDate);
                
                TableSchema.TableColumn colvarMeterReadModeID = new TableSchema.TableColumn(schema);
                colvarMeterReadModeID.ColumnName = "MeterReadModeID";
                colvarMeterReadModeID.DataType = DbType.Int32;
                colvarMeterReadModeID.MaxLength = 0;
                colvarMeterReadModeID.AutoIncrement = false;
                colvarMeterReadModeID.IsNullable = true;
                colvarMeterReadModeID.IsPrimaryKey = false;
                colvarMeterReadModeID.IsForeignKey = false;
                colvarMeterReadModeID.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterReadModeID);
                
                TableSchema.TableColumn colvarMeterReadModeName = new TableSchema.TableColumn(schema);
                colvarMeterReadModeName.ColumnName = "MeterReadModeName";
                colvarMeterReadModeName.DataType = DbType.AnsiString;
                colvarMeterReadModeName.MaxLength = 50;
                colvarMeterReadModeName.AutoIncrement = false;
                colvarMeterReadModeName.IsNullable = true;
                colvarMeterReadModeName.IsPrimaryKey = false;
                colvarMeterReadModeName.IsForeignKey = false;
                colvarMeterReadModeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterReadModeName);
                
                TableSchema.TableColumn colvarMeterReadCode = new TableSchema.TableColumn(schema);
                colvarMeterReadCode.ColumnName = "MeterReadCode";
                colvarMeterReadCode.DataType = DbType.AnsiString;
                colvarMeterReadCode.MaxLength = 50;
                colvarMeterReadCode.AutoIncrement = false;
                colvarMeterReadCode.IsNullable = true;
                colvarMeterReadCode.IsPrimaryKey = false;
                colvarMeterReadCode.IsForeignKey = false;
                colvarMeterReadCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterReadCode);
                
                TableSchema.TableColumn colvarCunsumerID = new TableSchema.TableColumn(schema);
                colvarCunsumerID.ColumnName = "CunsumerID";
                colvarCunsumerID.DataType = DbType.Int32;
                colvarCunsumerID.MaxLength = 0;
                colvarCunsumerID.AutoIncrement = false;
                colvarCunsumerID.IsNullable = true;
                colvarCunsumerID.IsPrimaryKey = false;
                colvarCunsumerID.IsForeignKey = false;
                colvarCunsumerID.IsReadOnly = false;
                
                schema.Columns.Add(colvarCunsumerID);
                
                TableSchema.TableColumn colvarConsumerName = new TableSchema.TableColumn(schema);
                colvarConsumerName.ColumnName = "ConsumerName";
                colvarConsumerName.DataType = DbType.AnsiString;
                colvarConsumerName.MaxLength = 50;
                colvarConsumerName.AutoIncrement = false;
                colvarConsumerName.IsNullable = true;
                colvarConsumerName.IsPrimaryKey = false;
                colvarConsumerName.IsForeignKey = false;
                colvarConsumerName.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerName);
                
                TableSchema.TableColumn colvarCunsumerEmail = new TableSchema.TableColumn(schema);
                colvarCunsumerEmail.ColumnName = "CunsumerEmail";
                colvarCunsumerEmail.DataType = DbType.AnsiString;
                colvarCunsumerEmail.MaxLength = 50;
                colvarCunsumerEmail.AutoIncrement = false;
                colvarCunsumerEmail.IsNullable = true;
                colvarCunsumerEmail.IsPrimaryKey = false;
                colvarCunsumerEmail.IsForeignKey = false;
                colvarCunsumerEmail.IsReadOnly = false;
                
                schema.Columns.Add(colvarCunsumerEmail);
                
                TableSchema.TableColumn colvarConsumerResidensePhoneNo = new TableSchema.TableColumn(schema);
                colvarConsumerResidensePhoneNo.ColumnName = "ConsumerResidensePhoneNo";
                colvarConsumerResidensePhoneNo.DataType = DbType.AnsiString;
                colvarConsumerResidensePhoneNo.MaxLength = 50;
                colvarConsumerResidensePhoneNo.AutoIncrement = false;
                colvarConsumerResidensePhoneNo.IsNullable = true;
                colvarConsumerResidensePhoneNo.IsPrimaryKey = false;
                colvarConsumerResidensePhoneNo.IsForeignKey = false;
                colvarConsumerResidensePhoneNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerResidensePhoneNo);
                
                TableSchema.TableColumn colvarCunsumerAddress = new TableSchema.TableColumn(schema);
                colvarCunsumerAddress.ColumnName = "CunsumerAddress";
                colvarCunsumerAddress.DataType = DbType.AnsiString;
                colvarCunsumerAddress.MaxLength = -1;
                colvarCunsumerAddress.AutoIncrement = false;
                colvarCunsumerAddress.IsNullable = true;
                colvarCunsumerAddress.IsPrimaryKey = false;
                colvarCunsumerAddress.IsForeignKey = false;
                colvarCunsumerAddress.IsReadOnly = false;
                
                schema.Columns.Add(colvarCunsumerAddress);
                
                TableSchema.TableColumn colvarConsumerMobileNo = new TableSchema.TableColumn(schema);
                colvarConsumerMobileNo.ColumnName = "ConsumerMobileNo";
                colvarConsumerMobileNo.DataType = DbType.AnsiString;
                colvarConsumerMobileNo.MaxLength = 50;
                colvarConsumerMobileNo.AutoIncrement = false;
                colvarConsumerMobileNo.IsNullable = true;
                colvarConsumerMobileNo.IsPrimaryKey = false;
                colvarConsumerMobileNo.IsForeignKey = false;
                colvarConsumerMobileNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerMobileNo);
                
                TableSchema.TableColumn colvarConsumerNo = new TableSchema.TableColumn(schema);
                colvarConsumerNo.ColumnName = "ConsumerNo";
                colvarConsumerNo.DataType = DbType.AnsiString;
                colvarConsumerNo.MaxLength = -1;
                colvarConsumerNo.AutoIncrement = false;
                colvarConsumerNo.IsNullable = true;
                colvarConsumerNo.IsPrimaryKey = false;
                colvarConsumerNo.IsForeignKey = false;
                colvarConsumerNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerNo);
                
                TableSchema.TableColumn colvarConsumerNIC = new TableSchema.TableColumn(schema);
                colvarConsumerNIC.ColumnName = "ConsumerNIC";
                colvarConsumerNIC.DataType = DbType.AnsiString;
                colvarConsumerNIC.MaxLength = 70;
                colvarConsumerNIC.AutoIncrement = false;
                colvarConsumerNIC.IsNullable = true;
                colvarConsumerNIC.IsPrimaryKey = false;
                colvarConsumerNIC.IsForeignKey = false;
                colvarConsumerNIC.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerNIC);
                
                TableSchema.TableColumn colvarConsumerFatherHusbandName = new TableSchema.TableColumn(schema);
                colvarConsumerFatherHusbandName.ColumnName = "ConsumerFather_HusbandName";
                colvarConsumerFatherHusbandName.DataType = DbType.AnsiString;
                colvarConsumerFatherHusbandName.MaxLength = 50;
                colvarConsumerFatherHusbandName.AutoIncrement = false;
                colvarConsumerFatherHusbandName.IsNullable = true;
                colvarConsumerFatherHusbandName.IsPrimaryKey = false;
                colvarConsumerFatherHusbandName.IsForeignKey = false;
                colvarConsumerFatherHusbandName.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerFatherHusbandName);
                
                TableSchema.TableColumn colvarConsumerCNICExpiryDate = new TableSchema.TableColumn(schema);
                colvarConsumerCNICExpiryDate.ColumnName = "ConsumerCNICExpiryDate";
                colvarConsumerCNICExpiryDate.DataType = DbType.AnsiString;
                colvarConsumerCNICExpiryDate.MaxLength = 0;
                colvarConsumerCNICExpiryDate.AutoIncrement = false;
                colvarConsumerCNICExpiryDate.IsNullable = true;
                colvarConsumerCNICExpiryDate.IsPrimaryKey = false;
                colvarConsumerCNICExpiryDate.IsForeignKey = false;
                colvarConsumerCNICExpiryDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerCNICExpiryDate);
                
                TableSchema.TableColumn colvarConsumerProfessionalOccupation = new TableSchema.TableColumn(schema);
                colvarConsumerProfessionalOccupation.ColumnName = "ConsumerProfessional_Occupation";
                colvarConsumerProfessionalOccupation.DataType = DbType.AnsiString;
                colvarConsumerProfessionalOccupation.MaxLength = 50;
                colvarConsumerProfessionalOccupation.AutoIncrement = false;
                colvarConsumerProfessionalOccupation.IsNullable = true;
                colvarConsumerProfessionalOccupation.IsPrimaryKey = false;
                colvarConsumerProfessionalOccupation.IsForeignKey = false;
                colvarConsumerProfessionalOccupation.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerProfessionalOccupation);
                
                TableSchema.TableColumn colvarConsumerOfficePhoneNo = new TableSchema.TableColumn(schema);
                colvarConsumerOfficePhoneNo.ColumnName = "ConsumerOfficePhoneNo";
                colvarConsumerOfficePhoneNo.DataType = DbType.AnsiString;
                colvarConsumerOfficePhoneNo.MaxLength = 50;
                colvarConsumerOfficePhoneNo.AutoIncrement = false;
                colvarConsumerOfficePhoneNo.IsNullable = true;
                colvarConsumerOfficePhoneNo.IsPrimaryKey = false;
                colvarConsumerOfficePhoneNo.IsForeignKey = false;
                colvarConsumerOfficePhoneNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerOfficePhoneNo);
                
                TableSchema.TableColumn colvarConsumerNationalTaxGSTNo = new TableSchema.TableColumn(schema);
                colvarConsumerNationalTaxGSTNo.ColumnName = "ConsumerNationalTax_GSTNo";
                colvarConsumerNationalTaxGSTNo.DataType = DbType.AnsiString;
                colvarConsumerNationalTaxGSTNo.MaxLength = 50;
                colvarConsumerNationalTaxGSTNo.AutoIncrement = false;
                colvarConsumerNationalTaxGSTNo.IsNullable = true;
                colvarConsumerNationalTaxGSTNo.IsPrimaryKey = false;
                colvarConsumerNationalTaxGSTNo.IsForeignKey = false;
                colvarConsumerNationalTaxGSTNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerNationalTaxGSTNo);
                
                TableSchema.TableColumn colvarConsumerStatusID = new TableSchema.TableColumn(schema);
                colvarConsumerStatusID.ColumnName = "ConsumerStatusID";
                colvarConsumerStatusID.DataType = DbType.Int32;
                colvarConsumerStatusID.MaxLength = 0;
                colvarConsumerStatusID.AutoIncrement = false;
                colvarConsumerStatusID.IsNullable = true;
                colvarConsumerStatusID.IsPrimaryKey = false;
                colvarConsumerStatusID.IsForeignKey = false;
                colvarConsumerStatusID.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerStatusID);
                
                TableSchema.TableColumn colvarConsumerStatusName = new TableSchema.TableColumn(schema);
                colvarConsumerStatusName.ColumnName = "ConsumerStatusName";
                colvarConsumerStatusName.DataType = DbType.AnsiString;
                colvarConsumerStatusName.MaxLength = 50;
                colvarConsumerStatusName.AutoIncrement = false;
                colvarConsumerStatusName.IsNullable = true;
                colvarConsumerStatusName.IsPrimaryKey = false;
                colvarConsumerStatusName.IsForeignKey = false;
                colvarConsumerStatusName.IsReadOnly = false;
                
                schema.Columns.Add(colvarConsumerStatusName);
                
                TableSchema.TableColumn colvarFeederID = new TableSchema.TableColumn(schema);
                colvarFeederID.ColumnName = "FeederID";
                colvarFeederID.DataType = DbType.Int32;
                colvarFeederID.MaxLength = 0;
                colvarFeederID.AutoIncrement = false;
                colvarFeederID.IsNullable = true;
                colvarFeederID.IsPrimaryKey = false;
                colvarFeederID.IsForeignKey = false;
                colvarFeederID.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederID);
                
                TableSchema.TableColumn colvarFeederNo = new TableSchema.TableColumn(schema);
                colvarFeederNo.ColumnName = "FeederNo";
                colvarFeederNo.DataType = DbType.AnsiString;
                colvarFeederNo.MaxLength = -1;
                colvarFeederNo.AutoIncrement = false;
                colvarFeederNo.IsNullable = true;
                colvarFeederNo.IsPrimaryKey = false;
                colvarFeederNo.IsForeignKey = false;
                colvarFeederNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederNo);
                
                TableSchema.TableColumn colvarBrickID = new TableSchema.TableColumn(schema);
                colvarBrickID.ColumnName = "BrickID";
                colvarBrickID.DataType = DbType.Int32;
                colvarBrickID.MaxLength = 0;
                colvarBrickID.AutoIncrement = false;
                colvarBrickID.IsNullable = true;
                colvarBrickID.IsPrimaryKey = false;
                colvarBrickID.IsForeignKey = false;
                colvarBrickID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBrickID);
                
                TableSchema.TableColumn colvarBrickName = new TableSchema.TableColumn(schema);
                colvarBrickName.ColumnName = "BrickName";
                colvarBrickName.DataType = DbType.AnsiString;
                colvarBrickName.MaxLength = 50;
                colvarBrickName.AutoIncrement = false;
                colvarBrickName.IsNullable = true;
                colvarBrickName.IsPrimaryKey = false;
                colvarBrickName.IsForeignKey = false;
                colvarBrickName.IsReadOnly = false;
                
                schema.Columns.Add(colvarBrickName);
                
                TableSchema.TableColumn colvarBrickTypeID = new TableSchema.TableColumn(schema);
                colvarBrickTypeID.ColumnName = "BrickTypeID";
                colvarBrickTypeID.DataType = DbType.Int32;
                colvarBrickTypeID.MaxLength = 0;
                colvarBrickTypeID.AutoIncrement = false;
                colvarBrickTypeID.IsNullable = true;
                colvarBrickTypeID.IsPrimaryKey = false;
                colvarBrickTypeID.IsForeignKey = false;
                colvarBrickTypeID.IsReadOnly = false;
                
                schema.Columns.Add(colvarBrickTypeID);
                
                TableSchema.TableColumn colvarBrickTypeName = new TableSchema.TableColumn(schema);
                colvarBrickTypeName.ColumnName = "BrickTypeName";
                colvarBrickTypeName.DataType = DbType.AnsiString;
                colvarBrickTypeName.MaxLength = 50;
                colvarBrickTypeName.AutoIncrement = false;
                colvarBrickTypeName.IsNullable = true;
                colvarBrickTypeName.IsPrimaryKey = false;
                colvarBrickTypeName.IsForeignKey = false;
                colvarBrickTypeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarBrickTypeName);
                
                TableSchema.TableColumn colvarMeterTypeID = new TableSchema.TableColumn(schema);
                colvarMeterTypeID.ColumnName = "MeterTypeID";
                colvarMeterTypeID.DataType = DbType.Int32;
                colvarMeterTypeID.MaxLength = 0;
                colvarMeterTypeID.AutoIncrement = false;
                colvarMeterTypeID.IsNullable = true;
                colvarMeterTypeID.IsPrimaryKey = false;
                colvarMeterTypeID.IsForeignKey = false;
                colvarMeterTypeID.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterTypeID);
                
                TableSchema.TableColumn colvarMeterTypeName = new TableSchema.TableColumn(schema);
                colvarMeterTypeName.ColumnName = "MeterTypeName";
                colvarMeterTypeName.DataType = DbType.AnsiString;
                colvarMeterTypeName.MaxLength = 50;
                colvarMeterTypeName.AutoIncrement = false;
                colvarMeterTypeName.IsNullable = true;
                colvarMeterTypeName.IsPrimaryKey = false;
                colvarMeterTypeName.IsForeignKey = false;
                colvarMeterTypeName.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterTypeName);
                
                TableSchema.TableColumn colvarAllowIssue = new TableSchema.TableColumn(schema);
                colvarAllowIssue.ColumnName = "AllowIssue";
                colvarAllowIssue.DataType = DbType.Boolean;
                colvarAllowIssue.MaxLength = 0;
                colvarAllowIssue.AutoIncrement = false;
                colvarAllowIssue.IsNullable = true;
                colvarAllowIssue.IsPrimaryKey = false;
                colvarAllowIssue.IsForeignKey = false;
                colvarAllowIssue.IsReadOnly = false;
                
                schema.Columns.Add(colvarAllowIssue);
                
                TableSchema.TableColumn colvarMeterStatusID = new TableSchema.TableColumn(schema);
                colvarMeterStatusID.ColumnName = "MeterStatusID";
                colvarMeterStatusID.DataType = DbType.Int32;
                colvarMeterStatusID.MaxLength = 0;
                colvarMeterStatusID.AutoIncrement = false;
                colvarMeterStatusID.IsNullable = true;
                colvarMeterStatusID.IsPrimaryKey = false;
                colvarMeterStatusID.IsForeignKey = false;
                colvarMeterStatusID.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterStatusID);
                
                TableSchema.TableColumn colvarMeterStatusName = new TableSchema.TableColumn(schema);
                colvarMeterStatusName.ColumnName = "MeterStatusName";
                colvarMeterStatusName.DataType = DbType.AnsiString;
                colvarMeterStatusName.MaxLength = 50;
                colvarMeterStatusName.AutoIncrement = false;
                colvarMeterStatusName.IsNullable = true;
                colvarMeterStatusName.IsPrimaryKey = false;
                colvarMeterStatusName.IsForeignKey = false;
                colvarMeterStatusName.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterStatusName);
                
                TableSchema.TableColumn colvarActualBillPaybleDueDate = new TableSchema.TableColumn(schema);
                colvarActualBillPaybleDueDate.ColumnName = "ActualBillPaybleDueDate";
                colvarActualBillPaybleDueDate.DataType = DbType.Decimal;
                colvarActualBillPaybleDueDate.MaxLength = 0;
                colvarActualBillPaybleDueDate.AutoIncrement = false;
                colvarActualBillPaybleDueDate.IsNullable = true;
                colvarActualBillPaybleDueDate.IsPrimaryKey = false;
                colvarActualBillPaybleDueDate.IsForeignKey = false;
                colvarActualBillPaybleDueDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarActualBillPaybleDueDate);
                
                TableSchema.TableColumn colvarActualBillPaybleAfterDueDate = new TableSchema.TableColumn(schema);
                colvarActualBillPaybleAfterDueDate.ColumnName = "ActualBillPaybleAfterDueDate";
                colvarActualBillPaybleAfterDueDate.DataType = DbType.Decimal;
                colvarActualBillPaybleAfterDueDate.MaxLength = 0;
                colvarActualBillPaybleAfterDueDate.AutoIncrement = false;
                colvarActualBillPaybleAfterDueDate.IsNullable = true;
                colvarActualBillPaybleAfterDueDate.IsPrimaryKey = false;
                colvarActualBillPaybleAfterDueDate.IsForeignKey = false;
                colvarActualBillPaybleAfterDueDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarActualBillPaybleAfterDueDate);
                
                TableSchema.TableColumn colvarMeterReadingDate = new TableSchema.TableColumn(schema);
                colvarMeterReadingDate.ColumnName = "MeterReadingDate";
                colvarMeterReadingDate.DataType = DbType.DateTime;
                colvarMeterReadingDate.MaxLength = 0;
                colvarMeterReadingDate.AutoIncrement = false;
                colvarMeterReadingDate.IsNullable = true;
                colvarMeterReadingDate.IsPrimaryKey = false;
                colvarMeterReadingDate.IsForeignKey = false;
                colvarMeterReadingDate.IsReadOnly = false;
                
                schema.Columns.Add(colvarMeterReadingDate);
                
                TableSchema.TableColumn colvarMultiplyingFactor = new TableSchema.TableColumn(schema);
                colvarMultiplyingFactor.ColumnName = "MultiplyingFactor";
                colvarMultiplyingFactor.DataType = DbType.Decimal;
                colvarMultiplyingFactor.MaxLength = 0;
                colvarMultiplyingFactor.AutoIncrement = false;
                colvarMultiplyingFactor.IsNullable = true;
                colvarMultiplyingFactor.IsPrimaryKey = false;
                colvarMultiplyingFactor.IsForeignKey = false;
                colvarMultiplyingFactor.IsReadOnly = false;
                
                schema.Columns.Add(colvarMultiplyingFactor);
                
                TableSchema.TableColumn colvarTotalUnits = new TableSchema.TableColumn(schema);
                colvarTotalUnits.ColumnName = "TotalUnits";
                colvarTotalUnits.DataType = DbType.Decimal;
                colvarTotalUnits.MaxLength = 0;
                colvarTotalUnits.AutoIncrement = false;
                colvarTotalUnits.IsNullable = true;
                colvarTotalUnits.IsPrimaryKey = false;
                colvarTotalUnits.IsForeignKey = false;
                colvarTotalUnits.IsReadOnly = false;
                
                schema.Columns.Add(colvarTotalUnits);
                
                TableSchema.TableColumn colvarUnitsConsumed = new TableSchema.TableColumn(schema);
                colvarUnitsConsumed.ColumnName = "UnitsConsumed";
                colvarUnitsConsumed.DataType = DbType.Decimal;
                colvarUnitsConsumed.MaxLength = 0;
                colvarUnitsConsumed.AutoIncrement = false;
                colvarUnitsConsumed.IsNullable = true;
                colvarUnitsConsumed.IsPrimaryKey = false;
                colvarUnitsConsumed.IsForeignKey = false;
                colvarUnitsConsumed.IsReadOnly = false;
                
                schema.Columns.Add(colvarUnitsConsumed);
                
                TableSchema.TableColumn colvarFeederCode = new TableSchema.TableColumn(schema);
                colvarFeederCode.ColumnName = "FeederCode";
                colvarFeederCode.DataType = DbType.AnsiString;
                colvarFeederCode.MaxLength = 50;
                colvarFeederCode.AutoIncrement = false;
                colvarFeederCode.IsNullable = true;
                colvarFeederCode.IsPrimaryKey = false;
                colvarFeederCode.IsForeignKey = false;
                colvarFeederCode.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederCode);
                
                TableSchema.TableColumn colvarFeederStatusID = new TableSchema.TableColumn(schema);
                colvarFeederStatusID.ColumnName = "FeederStatusID";
                colvarFeederStatusID.DataType = DbType.Int32;
                colvarFeederStatusID.MaxLength = 0;
                colvarFeederStatusID.AutoIncrement = false;
                colvarFeederStatusID.IsNullable = true;
                colvarFeederStatusID.IsPrimaryKey = false;
                colvarFeederStatusID.IsForeignKey = false;
                colvarFeederStatusID.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederStatusID);
                
                TableSchema.TableColumn colvarFeederStatusName = new TableSchema.TableColumn(schema);
                colvarFeederStatusName.ColumnName = "FeederStatusName";
                colvarFeederStatusName.DataType = DbType.AnsiString;
                colvarFeederStatusName.MaxLength = 50;
                colvarFeederStatusName.AutoIncrement = false;
                colvarFeederStatusName.IsNullable = true;
                colvarFeederStatusName.IsPrimaryKey = false;
                colvarFeederStatusName.IsForeignKey = false;
                colvarFeederStatusName.IsReadOnly = false;
                
                schema.Columns.Add(colvarFeederStatusName);
                
                TableSchema.TableColumn colvarPMTNo = new TableSchema.TableColumn(schema);
                colvarPMTNo.ColumnName = "PMTNo";
                colvarPMTNo.DataType = DbType.AnsiString;
                colvarPMTNo.MaxLength = 50;
                colvarPMTNo.AutoIncrement = false;
                colvarPMTNo.IsNullable = true;
                colvarPMTNo.IsPrimaryKey = false;
                colvarPMTNo.IsForeignKey = false;
                colvarPMTNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarPMTNo);
                
                TableSchema.TableColumn colvarOldCunsomerNo = new TableSchema.TableColumn(schema);
                colvarOldCunsomerNo.ColumnName = "OldCunsomerNo";
                colvarOldCunsomerNo.DataType = DbType.AnsiString;
                colvarOldCunsomerNo.MaxLength = 200;
                colvarOldCunsomerNo.AutoIncrement = false;
                colvarOldCunsomerNo.IsNullable = true;
                colvarOldCunsomerNo.IsPrimaryKey = false;
                colvarOldCunsomerNo.IsForeignKey = false;
                colvarOldCunsomerNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarOldCunsomerNo);
                
                TableSchema.TableColumn colvarIsCancel = new TableSchema.TableColumn(schema);
                colvarIsCancel.ColumnName = "isCancel";
                colvarIsCancel.DataType = DbType.Boolean;
                colvarIsCancel.MaxLength = 0;
                colvarIsCancel.AutoIncrement = false;
                colvarIsCancel.IsNullable = true;
                colvarIsCancel.IsPrimaryKey = false;
                colvarIsCancel.IsForeignKey = false;
                colvarIsCancel.IsReadOnly = false;
                
                schema.Columns.Add(colvarIsCancel);
                
                TableSchema.TableColumn colvarSupplementaryMeterNo = new TableSchema.TableColumn(schema);
                colvarSupplementaryMeterNo.ColumnName = "SupplementaryMeterNo";
                colvarSupplementaryMeterNo.DataType = DbType.AnsiString;
                colvarSupplementaryMeterNo.MaxLength = 100;
                colvarSupplementaryMeterNo.AutoIncrement = false;
                colvarSupplementaryMeterNo.IsNullable = true;
                colvarSupplementaryMeterNo.IsPrimaryKey = false;
                colvarSupplementaryMeterNo.IsForeignKey = false;
                colvarSupplementaryMeterNo.IsReadOnly = false;
                
                schema.Columns.Add(colvarSupplementaryMeterNo);
                
                
                BaseSchema = schema;
                //add this schema to the provider
                //so we can query it later
                DataService.Providers["PrimaryProvider"].AddSchema("VwBillReport",schema);
            }
        }
        #endregion
        
        #region Query Accessor
	    public static Query CreateQuery()
	    {
		    return new Query(Schema);
	    }
	    #endregion
	    
	    #region .ctors
	    public VwBillReport()
	    {
            SetSQLProps();
            SetDefaults();
            MarkNew();
        }
        public VwBillReport(bool useDatabaseDefaults)
	    {
		    SetSQLProps();
		    if(useDatabaseDefaults)
		    {
				ForceDefaults();
			}
			MarkNew();
	    }
	    
	    public VwBillReport(object keyID)
	    {
		    SetSQLProps();
		    LoadByKey(keyID);
	    }
    	 
	    public VwBillReport(string columnName, object columnValue)
        {
            SetSQLProps();
            LoadByParam(columnName,columnValue);
        }
        
	    #endregion
	    
	    #region Props
	    
          
        [XmlAttribute("BillID")]
        [Bindable(true)]
        public int BillID 
	    {
		    get
		    {
			    return GetColumnValue<int>("BillID");
		    }
            set 
		    {
			    SetColumnValue("BillID", value);
            }
        }
	      
        [XmlAttribute("BillNo")]
        [Bindable(true)]
        public string BillNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("BillNo");
		    }
            set 
		    {
			    SetColumnValue("BillNo", value);
            }
        }
	      
        [XmlAttribute("NoOfMonths")]
        [Bindable(true)]
        public int? NoOfMonths 
	    {
		    get
		    {
			    return GetColumnValue<int?>("NoOfMonths");
		    }
            set 
		    {
			    SetColumnValue("NoOfMonths", value);
            }
        }
	      
        [XmlAttribute("SLoad")]
        [Bindable(true)]
        public int? SLoad 
	    {
		    get
		    {
			    return GetColumnValue<int?>("SLoad");
		    }
            set 
		    {
			    SetColumnValue("SLoad", value);
            }
        }
	      
        [XmlAttribute("TotalSD")]
        [Bindable(true)]
        public decimal? TotalSD 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("TotalSD");
		    }
            set 
		    {
			    SetColumnValue("TotalSD", value);
            }
        }
	      
        [XmlAttribute("IssueDate")]
        [Bindable(true)]
        public DateTime? IssueDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("IssueDate");
		    }
            set 
		    {
			    SetColumnValue("IssueDate", value);
            }
        }
	      
        [XmlAttribute("DueDate")]
        [Bindable(true)]
        public DateTime? DueDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("DueDate");
		    }
            set 
		    {
			    SetColumnValue("DueDate", value);
            }
        }
	      
        [XmlAttribute("BillingMonth")]
        [Bindable(true)]
        public string BillingMonth 
	    {
		    get
		    {
			    return GetColumnValue<string>("BillingMonth");
		    }
            set 
		    {
			    SetColumnValue("BillingMonth", value);
            }
        }
	      
        [XmlAttribute("BillingYear")]
        [Bindable(true)]
        public string BillingYear 
	    {
		    get
		    {
			    return GetColumnValue<string>("BillingYear");
		    }
            set 
		    {
			    SetColumnValue("BillingYear", value);
            }
        }
	      
        [XmlAttribute("UnitsBill")]
        [Bindable(true)]
        public decimal UnitsBill 
	    {
		    get
		    {
			    return GetColumnValue<decimal>("UnitsBill");
		    }
            set 
		    {
			    SetColumnValue("UnitsBill", value);
            }
        }
	      
        [XmlAttribute("UnitsAdjusted")]
        [Bindable(true)]
        public decimal? UnitsAdjusted 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("UnitsAdjusted");
		    }
            set 
		    {
			    SetColumnValue("UnitsAdjusted", value);
            }
        }
	      
        [XmlAttribute("BillUpto")]
        [Bindable(true)]
        public decimal? BillUpto 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("BillUpto");
		    }
            set 
		    {
			    SetColumnValue("BillUpto", value);
            }
        }
	      
        [XmlAttribute("Mdi")]
        [Bindable(true)]
        public decimal? Mdi 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("MDI");
		    }
            set 
		    {
			    SetColumnValue("MDI", value);
            }
        }
	      
        [XmlAttribute("AmountPaybleDueDate")]
        [Bindable(true)]
        public decimal? AmountPaybleDueDate 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("AmountPaybleDueDate");
		    }
            set 
		    {
			    SetColumnValue("AmountPaybleDueDate", value);
            }
        }
	      
        [XmlAttribute("AmountPaybleAfterDueDate")]
        [Bindable(true)]
        public decimal? AmountPaybleAfterDueDate 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("AmountPaybleAfterDueDate");
		    }
            set 
		    {
			    SetColumnValue("AmountPaybleAfterDueDate", value);
            }
        }
	      
        [XmlAttribute("Status")]
        [Bindable(true)]
        public string Status 
	    {
		    get
		    {
			    return GetColumnValue<string>("Status");
		    }
            set 
		    {
			    SetColumnValue("Status", value);
            }
        }
	      
        [XmlAttribute("MeterReadingID")]
        [Bindable(true)]
        public int? MeterReadingID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("MeterReadingID");
		    }
            set 
		    {
			    SetColumnValue("MeterReadingID", value);
            }
        }
	      
        [XmlAttribute("MeterReadingMonth")]
        [Bindable(true)]
        public string MeterReadingMonth 
	    {
		    get
		    {
			    return GetColumnValue<string>("MeterReadingMonth");
		    }
            set 
		    {
			    SetColumnValue("MeterReadingMonth", value);
            }
        }
	      
        [XmlAttribute("MeterReadingYear")]
        [Bindable(true)]
        public string MeterReadingYear 
	    {
		    get
		    {
			    return GetColumnValue<string>("MeterReadingYear");
		    }
            set 
		    {
			    SetColumnValue("MeterReadingYear", value);
            }
        }
	      
        [XmlAttribute("PreviousReading")]
        [Bindable(true)]
        public decimal? PreviousReading 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("PreviousReading");
		    }
            set 
		    {
			    SetColumnValue("PreviousReading", value);
            }
        }
	      
        [XmlAttribute("CurrentReading")]
        [Bindable(true)]
        public decimal? CurrentReading 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("CurrentReading");
		    }
            set 
		    {
			    SetColumnValue("CurrentReading", value);
            }
        }
	      
        [XmlAttribute("CLoad")]
        [Bindable(true)]
        public int? CLoad 
	    {
		    get
		    {
			    return GetColumnValue<int?>("CLoad");
		    }
            set 
		    {
			    SetColumnValue("CLoad", value);
            }
        }
	      
        [XmlAttribute("MeterImage")]
        [Bindable(true)]
        public string MeterImage 
	    {
		    get
		    {
			    return GetColumnValue<string>("MeterImage");
		    }
            set 
		    {
			    SetColumnValue("MeterImage", value);
            }
        }
	      
        [XmlAttribute("BillChargingModeID")]
        [Bindable(true)]
        public int? BillChargingModeID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("BillChargingModeID");
		    }
            set 
		    {
			    SetColumnValue("BillChargingModeID", value);
            }
        }
	      
        [XmlAttribute("BillChargingModeName")]
        [Bindable(true)]
        public string BillChargingModeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("BillChargingModeName");
		    }
            set 
		    {
			    SetColumnValue("BillChargingModeName", value);
            }
        }
	      
        [XmlAttribute("BillChargingModeCode")]
        [Bindable(true)]
        public string BillChargingModeCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("BillChargingModeCode");
		    }
            set 
		    {
			    SetColumnValue("BillChargingModeCode", value);
            }
        }
	      
        [XmlAttribute("TariffID")]
        [Bindable(true)]
        public int TariffID 
	    {
		    get
		    {
			    return GetColumnValue<int>("TariffID");
		    }
            set 
		    {
			    SetColumnValue("TariffID", value);
            }
        }
	      
        [XmlAttribute("TariffName")]
        [Bindable(true)]
        public string TariffName 
	    {
		    get
		    {
			    return GetColumnValue<string>("TariffName");
		    }
            set 
		    {
			    SetColumnValue("TariffName", value);
            }
        }
	      
        [XmlAttribute("TariffCode")]
        [Bindable(true)]
        public string TariffCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("TariffCode");
		    }
            set 
		    {
			    SetColumnValue("TariffCode", value);
            }
        }
	      
        [XmlAttribute("MeterID")]
        [Bindable(true)]
        public int? MeterID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("MeterID");
		    }
            set 
		    {
			    SetColumnValue("MeterID", value);
            }
        }
	      
        [XmlAttribute("MeterNo")]
        [Bindable(true)]
        public string MeterNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("MeterNo");
		    }
            set 
		    {
			    SetColumnValue("MeterNo", value);
            }
        }
	      
        [XmlAttribute("AccountNo")]
        [Bindable(true)]
        public string AccountNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("AccountNo");
		    }
            set 
		    {
			    SetColumnValue("AccountNo", value);
            }
        }
	      
        [XmlAttribute("MeterIssueDate")]
        [Bindable(true)]
        public DateTime? MeterIssueDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("MeterIssueDate");
		    }
            set 
		    {
			    SetColumnValue("MeterIssueDate", value);
            }
        }
	      
        [XmlAttribute("MeterReadModeID")]
        [Bindable(true)]
        public int? MeterReadModeID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("MeterReadModeID");
		    }
            set 
		    {
			    SetColumnValue("MeterReadModeID", value);
            }
        }
	      
        [XmlAttribute("MeterReadModeName")]
        [Bindable(true)]
        public string MeterReadModeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("MeterReadModeName");
		    }
            set 
		    {
			    SetColumnValue("MeterReadModeName", value);
            }
        }
	      
        [XmlAttribute("MeterReadCode")]
        [Bindable(true)]
        public string MeterReadCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("MeterReadCode");
		    }
            set 
		    {
			    SetColumnValue("MeterReadCode", value);
            }
        }
	      
        [XmlAttribute("CunsumerID")]
        [Bindable(true)]
        public int? CunsumerID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("CunsumerID");
		    }
            set 
		    {
			    SetColumnValue("CunsumerID", value);
            }
        }
	      
        [XmlAttribute("ConsumerName")]
        [Bindable(true)]
        public string ConsumerName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerName");
		    }
            set 
		    {
			    SetColumnValue("ConsumerName", value);
            }
        }
	      
        [XmlAttribute("CunsumerEmail")]
        [Bindable(true)]
        public string CunsumerEmail 
	    {
		    get
		    {
			    return GetColumnValue<string>("CunsumerEmail");
		    }
            set 
		    {
			    SetColumnValue("CunsumerEmail", value);
            }
        }
	      
        [XmlAttribute("ConsumerResidensePhoneNo")]
        [Bindable(true)]
        public string ConsumerResidensePhoneNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerResidensePhoneNo");
		    }
            set 
		    {
			    SetColumnValue("ConsumerResidensePhoneNo", value);
            }
        }
	      
        [XmlAttribute("CunsumerAddress")]
        [Bindable(true)]
        public string CunsumerAddress 
	    {
		    get
		    {
			    return GetColumnValue<string>("CunsumerAddress");
		    }
            set 
		    {
			    SetColumnValue("CunsumerAddress", value);
            }
        }
	      
        [XmlAttribute("ConsumerMobileNo")]
        [Bindable(true)]
        public string ConsumerMobileNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerMobileNo");
		    }
            set 
		    {
			    SetColumnValue("ConsumerMobileNo", value);
            }
        }
	      
        [XmlAttribute("ConsumerNo")]
        [Bindable(true)]
        public string ConsumerNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerNo");
		    }
            set 
		    {
			    SetColumnValue("ConsumerNo", value);
            }
        }
	      
        [XmlAttribute("ConsumerNIC")]
        [Bindable(true)]
        public string ConsumerNIC 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerNIC");
		    }
            set 
		    {
			    SetColumnValue("ConsumerNIC", value);
            }
        }
	      
        [XmlAttribute("ConsumerFatherHusbandName")]
        [Bindable(true)]
        public string ConsumerFatherHusbandName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerFather_HusbandName");
		    }
            set 
		    {
			    SetColumnValue("ConsumerFather_HusbandName", value);
            }
        }
	      
        [XmlAttribute("ConsumerCNICExpiryDate")]
        [Bindable(true)]
        public string ConsumerCNICExpiryDate 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerCNICExpiryDate");
		    }
            set 
		    {
			    SetColumnValue("ConsumerCNICExpiryDate", value);
            }
        }
	      
        [XmlAttribute("ConsumerProfessionalOccupation")]
        [Bindable(true)]
        public string ConsumerProfessionalOccupation 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerProfessional_Occupation");
		    }
            set 
		    {
			    SetColumnValue("ConsumerProfessional_Occupation", value);
            }
        }
	      
        [XmlAttribute("ConsumerOfficePhoneNo")]
        [Bindable(true)]
        public string ConsumerOfficePhoneNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerOfficePhoneNo");
		    }
            set 
		    {
			    SetColumnValue("ConsumerOfficePhoneNo", value);
            }
        }
	      
        [XmlAttribute("ConsumerNationalTaxGSTNo")]
        [Bindable(true)]
        public string ConsumerNationalTaxGSTNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerNationalTax_GSTNo");
		    }
            set 
		    {
			    SetColumnValue("ConsumerNationalTax_GSTNo", value);
            }
        }
	      
        [XmlAttribute("ConsumerStatusID")]
        [Bindable(true)]
        public int? ConsumerStatusID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("ConsumerStatusID");
		    }
            set 
		    {
			    SetColumnValue("ConsumerStatusID", value);
            }
        }
	      
        [XmlAttribute("ConsumerStatusName")]
        [Bindable(true)]
        public string ConsumerStatusName 
	    {
		    get
		    {
			    return GetColumnValue<string>("ConsumerStatusName");
		    }
            set 
		    {
			    SetColumnValue("ConsumerStatusName", value);
            }
        }
	      
        [XmlAttribute("FeederID")]
        [Bindable(true)]
        public int? FeederID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("FeederID");
		    }
            set 
		    {
			    SetColumnValue("FeederID", value);
            }
        }
	      
        [XmlAttribute("FeederNo")]
        [Bindable(true)]
        public string FeederNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("FeederNo");
		    }
            set 
		    {
			    SetColumnValue("FeederNo", value);
            }
        }
	      
        [XmlAttribute("BrickID")]
        [Bindable(true)]
        public int? BrickID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("BrickID");
		    }
            set 
		    {
			    SetColumnValue("BrickID", value);
            }
        }
	      
        [XmlAttribute("BrickName")]
        [Bindable(true)]
        public string BrickName 
	    {
		    get
		    {
			    return GetColumnValue<string>("BrickName");
		    }
            set 
		    {
			    SetColumnValue("BrickName", value);
            }
        }
	      
        [XmlAttribute("BrickTypeID")]
        [Bindable(true)]
        public int? BrickTypeID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("BrickTypeID");
		    }
            set 
		    {
			    SetColumnValue("BrickTypeID", value);
            }
        }
	      
        [XmlAttribute("BrickTypeName")]
        [Bindable(true)]
        public string BrickTypeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("BrickTypeName");
		    }
            set 
		    {
			    SetColumnValue("BrickTypeName", value);
            }
        }
	      
        [XmlAttribute("MeterTypeID")]
        [Bindable(true)]
        public int? MeterTypeID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("MeterTypeID");
		    }
            set 
		    {
			    SetColumnValue("MeterTypeID", value);
            }
        }
	      
        [XmlAttribute("MeterTypeName")]
        [Bindable(true)]
        public string MeterTypeName 
	    {
		    get
		    {
			    return GetColumnValue<string>("MeterTypeName");
		    }
            set 
		    {
			    SetColumnValue("MeterTypeName", value);
            }
        }
	      
        [XmlAttribute("AllowIssue")]
        [Bindable(true)]
        public bool? AllowIssue 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("AllowIssue");
		    }
            set 
		    {
			    SetColumnValue("AllowIssue", value);
            }
        }
	      
        [XmlAttribute("MeterStatusID")]
        [Bindable(true)]
        public int? MeterStatusID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("MeterStatusID");
		    }
            set 
		    {
			    SetColumnValue("MeterStatusID", value);
            }
        }
	      
        [XmlAttribute("MeterStatusName")]
        [Bindable(true)]
        public string MeterStatusName 
	    {
		    get
		    {
			    return GetColumnValue<string>("MeterStatusName");
		    }
            set 
		    {
			    SetColumnValue("MeterStatusName", value);
            }
        }
	      
        [XmlAttribute("ActualBillPaybleDueDate")]
        [Bindable(true)]
        public decimal? ActualBillPaybleDueDate 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("ActualBillPaybleDueDate");
		    }
            set 
		    {
			    SetColumnValue("ActualBillPaybleDueDate", value);
            }
        }
	      
        [XmlAttribute("ActualBillPaybleAfterDueDate")]
        [Bindable(true)]
        public decimal? ActualBillPaybleAfterDueDate 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("ActualBillPaybleAfterDueDate");
		    }
            set 
		    {
			    SetColumnValue("ActualBillPaybleAfterDueDate", value);
            }
        }
	      
        [XmlAttribute("MeterReadingDate")]
        [Bindable(true)]
        public DateTime? MeterReadingDate 
	    {
		    get
		    {
			    return GetColumnValue<DateTime?>("MeterReadingDate");
		    }
            set 
		    {
			    SetColumnValue("MeterReadingDate", value);
            }
        }
	      
        [XmlAttribute("MultiplyingFactor")]
        [Bindable(true)]
        public decimal? MultiplyingFactor 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("MultiplyingFactor");
		    }
            set 
		    {
			    SetColumnValue("MultiplyingFactor", value);
            }
        }
	      
        [XmlAttribute("TotalUnits")]
        [Bindable(true)]
        public decimal? TotalUnits 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("TotalUnits");
		    }
            set 
		    {
			    SetColumnValue("TotalUnits", value);
            }
        }
	      
        [XmlAttribute("UnitsConsumed")]
        [Bindable(true)]
        public decimal? UnitsConsumed 
	    {
		    get
		    {
			    return GetColumnValue<decimal?>("UnitsConsumed");
		    }
            set 
		    {
			    SetColumnValue("UnitsConsumed", value);
            }
        }
	      
        [XmlAttribute("FeederCode")]
        [Bindable(true)]
        public string FeederCode 
	    {
		    get
		    {
			    return GetColumnValue<string>("FeederCode");
		    }
            set 
		    {
			    SetColumnValue("FeederCode", value);
            }
        }
	      
        [XmlAttribute("FeederStatusID")]
        [Bindable(true)]
        public int? FeederStatusID 
	    {
		    get
		    {
			    return GetColumnValue<int?>("FeederStatusID");
		    }
            set 
		    {
			    SetColumnValue("FeederStatusID", value);
            }
        }
	      
        [XmlAttribute("FeederStatusName")]
        [Bindable(true)]
        public string FeederStatusName 
	    {
		    get
		    {
			    return GetColumnValue<string>("FeederStatusName");
		    }
            set 
		    {
			    SetColumnValue("FeederStatusName", value);
            }
        }
	      
        [XmlAttribute("PMTNo")]
        [Bindable(true)]
        public string PMTNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("PMTNo");
		    }
            set 
		    {
			    SetColumnValue("PMTNo", value);
            }
        }
	      
        [XmlAttribute("OldCunsomerNo")]
        [Bindable(true)]
        public string OldCunsomerNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("OldCunsomerNo");
		    }
            set 
		    {
			    SetColumnValue("OldCunsomerNo", value);
            }
        }
	      
        [XmlAttribute("IsCancel")]
        [Bindable(true)]
        public bool? IsCancel 
	    {
		    get
		    {
			    return GetColumnValue<bool?>("isCancel");
		    }
            set 
		    {
			    SetColumnValue("isCancel", value);
            }
        }
	      
        [XmlAttribute("SupplementaryMeterNo")]
        [Bindable(true)]
        public string SupplementaryMeterNo 
	    {
		    get
		    {
			    return GetColumnValue<string>("SupplementaryMeterNo");
		    }
            set 
		    {
			    SetColumnValue("SupplementaryMeterNo", value);
            }
        }
	    
	    #endregion
    
	    #region Columns Struct
	    public struct Columns
	    {
		    
		    
            public static string BillID = @"BillID";
            
            public static string BillNo = @"BillNo";
            
            public static string NoOfMonths = @"NoOfMonths";
            
            public static string SLoad = @"SLoad";
            
            public static string TotalSD = @"TotalSD";
            
            public static string IssueDate = @"IssueDate";
            
            public static string DueDate = @"DueDate";
            
            public static string BillingMonth = @"BillingMonth";
            
            public static string BillingYear = @"BillingYear";
            
            public static string UnitsBill = @"UnitsBill";
            
            public static string UnitsAdjusted = @"UnitsAdjusted";
            
            public static string BillUpto = @"BillUpto";
            
            public static string Mdi = @"MDI";
            
            public static string AmountPaybleDueDate = @"AmountPaybleDueDate";
            
            public static string AmountPaybleAfterDueDate = @"AmountPaybleAfterDueDate";
            
            public static string Status = @"Status";
            
            public static string MeterReadingID = @"MeterReadingID";
            
            public static string MeterReadingMonth = @"MeterReadingMonth";
            
            public static string MeterReadingYear = @"MeterReadingYear";
            
            public static string PreviousReading = @"PreviousReading";
            
            public static string CurrentReading = @"CurrentReading";
            
            public static string CLoad = @"CLoad";
            
            public static string MeterImage = @"MeterImage";
            
            public static string BillChargingModeID = @"BillChargingModeID";
            
            public static string BillChargingModeName = @"BillChargingModeName";
            
            public static string BillChargingModeCode = @"BillChargingModeCode";
            
            public static string TariffID = @"TariffID";
            
            public static string TariffName = @"TariffName";
            
            public static string TariffCode = @"TariffCode";
            
            public static string MeterID = @"MeterID";
            
            public static string MeterNo = @"MeterNo";
            
            public static string AccountNo = @"AccountNo";
            
            public static string MeterIssueDate = @"MeterIssueDate";
            
            public static string MeterReadModeID = @"MeterReadModeID";
            
            public static string MeterReadModeName = @"MeterReadModeName";
            
            public static string MeterReadCode = @"MeterReadCode";
            
            public static string CunsumerID = @"CunsumerID";
            
            public static string ConsumerName = @"ConsumerName";
            
            public static string CunsumerEmail = @"CunsumerEmail";
            
            public static string ConsumerResidensePhoneNo = @"ConsumerResidensePhoneNo";
            
            public static string CunsumerAddress = @"CunsumerAddress";
            
            public static string ConsumerMobileNo = @"ConsumerMobileNo";
            
            public static string ConsumerNo = @"ConsumerNo";
            
            public static string ConsumerNIC = @"ConsumerNIC";
            
            public static string ConsumerFatherHusbandName = @"ConsumerFather_HusbandName";
            
            public static string ConsumerCNICExpiryDate = @"ConsumerCNICExpiryDate";
            
            public static string ConsumerProfessionalOccupation = @"ConsumerProfessional_Occupation";
            
            public static string ConsumerOfficePhoneNo = @"ConsumerOfficePhoneNo";
            
            public static string ConsumerNationalTaxGSTNo = @"ConsumerNationalTax_GSTNo";
            
            public static string ConsumerStatusID = @"ConsumerStatusID";
            
            public static string ConsumerStatusName = @"ConsumerStatusName";
            
            public static string FeederID = @"FeederID";
            
            public static string FeederNo = @"FeederNo";
            
            public static string BrickID = @"BrickID";
            
            public static string BrickName = @"BrickName";
            
            public static string BrickTypeID = @"BrickTypeID";
            
            public static string BrickTypeName = @"BrickTypeName";
            
            public static string MeterTypeID = @"MeterTypeID";
            
            public static string MeterTypeName = @"MeterTypeName";
            
            public static string AllowIssue = @"AllowIssue";
            
            public static string MeterStatusID = @"MeterStatusID";
            
            public static string MeterStatusName = @"MeterStatusName";
            
            public static string ActualBillPaybleDueDate = @"ActualBillPaybleDueDate";
            
            public static string ActualBillPaybleAfterDueDate = @"ActualBillPaybleAfterDueDate";
            
            public static string MeterReadingDate = @"MeterReadingDate";
            
            public static string MultiplyingFactor = @"MultiplyingFactor";
            
            public static string TotalUnits = @"TotalUnits";
            
            public static string UnitsConsumed = @"UnitsConsumed";
            
            public static string FeederCode = @"FeederCode";
            
            public static string FeederStatusID = @"FeederStatusID";
            
            public static string FeederStatusName = @"FeederStatusName";
            
            public static string PMTNo = @"PMTNo";
            
            public static string OldCunsomerNo = @"OldCunsomerNo";
            
            public static string IsCancel = @"isCancel";
            
            public static string SupplementaryMeterNo = @"SupplementaryMeterNo";
            
	    }
	    #endregion
	    
	    
	    #region IAbstractRecord Members
        public new CT GetColumnValue<CT>(string columnName) {
            return base.GetColumnValue<CT>(columnName);
        }
        public object GetColumnValue(string columnName) {
            return base.GetColumnValue<object>(columnName);
        }
        #endregion
	    
    }
}
