**********DATE(dd/mm/yyyy)************ - DONE/-
-----------------------------27/07/2021---------------
CREATE TABLE [dbo].[tblActivity](
	[ActivityLogID] [int] IDENTITY(1,1) NOT NULL,
	[ActivityCode] [varchar](500) NULL,
	[PKID] [int] NULL,
	[UserID] [int] NULL,
	[Remarks] [varchar](max) NULL,
	[CreatedOn] [datetime] NULL,
	[ModifiedOn] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[ActivityLogID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO

ALTER TABLE [dbo].[tblActivity]  WITH CHECK ADD FOREIGN KEY([UserID])
REFERENCES [dbo].[UserLogin] ([UserLoginId])
GO


CREATE TABLE [dbo].[tblSystemLogging](
	[SystemLoggingID] [int] IDENTITY(1,1) NOT NULL,
	[LogDate] [datetime] NULL,
	[UserID] [int] NULL,
	[JSONData] [varchar](max) NULL,
	[RequestURL] [varchar](500) NULL,
	[Device] [varchar](500) NULL,
PRIMARY KEY CLUSTERED 
(
	[SystemLoggingID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO

ALTER TABLE [dbo].[tblSystemLogging]  WITH CHECK ADD FOREIGN KEY([UserID])
REFERENCES [dbo].[UserLogin] ([UserLoginId])
GO
-----------------------------26/06/2021---------------
CREATE TABLE dbo.tblLastSmartSearches
	(
	LastSmartSearchID int NOT NULL IDENTITY (1, 1),
	UserLoginID int NULL,
	ConsumerID int NULL,
	MeterID int NULL
	)  ON [PRIMARY]
GO
ALTER TABLE dbo.tblLastSmartSearches ADD CONSTRAINT
	PK_tblLastSmartSearches PRIMARY KEY CLUSTERED 
	(
	LastSmartSearchID
	) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

GO

update UserMenu set IsActive = 0  where PageUrl = 'ApproveBillChangeRequest.aspx'

ALTER TABLE dbo.TblBillAdjustment ADD
	BillAdjustmentPic varchar(500) NULL
GO


ALTER VIEW [dbo].[VwTblBillAdjustment]
AS
SELECT        dbo.TblBillAdjustment.BillAdjustmentID, dbo.TblBillAdjustment.IsApprove, dbo.TblBillAdjustment.AdjustmentAmount, dbo.TblBill.BillID, dbo.TblBill.BillNo, dbo.TblBill.NoOfMonths, dbo.TblBill.SLoad, dbo.TblBill.TotalSD, 
                         dbo.TblBill.IssueDate, dbo.TblBill.DueDate, dbo.TblBill.BillingMonth, dbo.TblBill.BillingYear, dbo.TblBill.UnitsBill, dbo.TblBill.UnitsAdjusted, dbo.TblBill.BillUpto, dbo.TblBill.MDI, dbo.TblBill.TotalArears, 
                         dbo.TblBill.AmountPaybleDueDate, dbo.TblBill.AmountPaybleAfterDueDate, dbo.TblBill.ActualBillPaybleDueDate, dbo.TblBill.ActualBillPaybleAfterDueDate, dbo.TblBill.Status, dbo.TblBillAdjustment.Remarks, 
                         dbo.TblBillAdjustment.IsPending, dbo.TblBillAdjustment.BillAdjustmentPic
FROM            dbo.TblBillAdjustment INNER JOIN
                         dbo.TblBill ON dbo.TblBillAdjustment.BillID = dbo.TblBill.BillID

GO


-----------------------------25/06/2021---------------

INSERT INTO [dbo].[tblPreferenceApproval]
           ([PreferenceName]
           ,[IsApproved]
           ,[UserMenuID])
     VALUES
           ('Approve Meter Replacement',
           1,
           NULL)
GO
update UserMenu set IsActive =1 where PageUrl = 'EmployeeList.aspx'

update UserMenu set IsActive =1 where PageUrl = 'MeterCategoryList.aspx'

update UserMenu set IsActive =0 where MenuTitle = 'Configuration'

update UserMenu set TopMenuId = 1017 where TopMenuId = 5067

update UserMenu set IsActive =0 where UserMenuId = 5067

update UserMenu set TopMenuId = NULL where UserMenuId in ( 5080,5082,5083)

update UserMenu set IsActive =0 where PageUrl = 'ApproveInstallement.aspx'
-----------------------------24/06/2021---------------

ALTER VIEW [dbo].[VwTblNewConnection]
AS
SELECT        dbo.TblNewConnection.NewConnectionID, dbo.TblConsumer.CunsumerID, dbo.TblConsumer.ConsumerName, dbo.TblConsumer.CunsumerEmail, dbo.TblConsumer.ConsumerResidensePhoneNo, 
                         dbo.TblConsumer.CunsumerAddress, dbo.TblConsumer.ConsumerMobileNo, dbo.TblConsumer.ConsumerNo, dbo.TblConsumer.ConsumerNIC, dbo.TblNewConnection.IsApprove, 
                         dbo.TblNewConTypeOfConDetail.TOCNeConDetailID, dbo.TblTypeOfConnection.TypeOfConID, dbo.TblTypeOfConnection.Name, dbo.TblNewConnection.RequestCode, dbo.TblBranch.BranchID, dbo.TblBranch.BranchCode, 
                         dbo.TblBranch.BranchName, dbo.tblEmployee.EmployeeID, dbo.tblEmployee.EmployeeCode, dbo.tblEmployee.EmployeeName, dbo.tblEmployee.EmailAddress, dbo.tblEmployee.MobileNo, dbo.tblEmployee.PhoneNo, 
                         dbo.tblEmployee.Address, dbo.tblEmployee.NIC, dbo.TblMeterType.MeterTypeID, dbo.TblMeterType.MeterTypeName, dbo.TblBrick.BrickID, dbo.TblBrick.BrickName, dbo.TblBrickType.BrickTypeID, 
                         dbo.TblBrickType.BrickTypeName, dbo.TblNewConPermisesDetail.PremisesDetailID, dbo.TblNewConPermisesDetail.AreaOfThePremises, dbo.TblNewConPermisesDetail.NoOfConnection_Meter AS NoOfMeters, 
                         dbo.TblConsumer.ConsumerFather_HusbandName
FROM            dbo.TblNewConPermisesDetail INNER JOIN
                         dbo.TblNewConnection INNER JOIN
                         dbo.TblConsumer ON dbo.TblNewConnection.ConsumerID = dbo.TblConsumer.CunsumerID INNER JOIN
                         dbo.TblNewConTypeOfConDetail ON dbo.TblNewConnection.NewConnectionID = dbo.TblNewConTypeOfConDetail.NewConnectionID INNER JOIN
                         dbo.TblTypeOfConnection ON dbo.TblNewConTypeOfConDetail.TypeOfConID = dbo.TblTypeOfConnection.TypeOfConID ON 
                         dbo.TblNewConPermisesDetail.NewConnectionID = dbo.TblNewConnection.NewConnectionID LEFT OUTER JOIN
                         dbo.TblBrick RIGHT OUTER JOIN
                         dbo.TblBrickType ON dbo.TblBrick.BrickTypeID = dbo.TblBrickType.BrickTypeID ON dbo.TblNewConnection.BrickID = dbo.TblBrick.BrickID LEFT OUTER JOIN
                         dbo.TblBranch ON dbo.TblNewConnection.BranchID = dbo.TblBranch.BranchID LEFT OUTER JOIN
                         dbo.tblEmployee ON dbo.TblNewConnection.NCCreatedBy = dbo.tblEmployee.EmployeeID LEFT OUTER JOIN
                         dbo.TblMeterType ON dbo.TblNewConnection.MeterTypeID = dbo.TblMeterType.MeterTypeID

GO



ALTER VIEW [dbo].[VwTblMeter]
AS
SELECT        dbo.TblMeter.MeterID, dbo.TblMeter.MeterNo, dbo.TblMeter.AccountNo, dbo.TblMeter.MeterIssueDate, dbo.TblMeter.MeterLife, dbo.TblConsumer.CunsumerID, dbo.TblConsumer.ConsumerName, 
                         dbo.TblConsumer.CunsumerEmail, dbo.TblConsumer.CunsumerAddress, dbo.TblConsumer.ConsumerMobileNo, dbo.TblConsumer.ConsumerNo, dbo.TblConsumer.ConsumerNIC, dbo.TblFeeder.FeederID, 
                         dbo.TblFeeder.FeederNo, dbo.TblMeterType.MeterTypeID, dbo.TblMeterType.MeterTypeName, dbo.TblMeterStatus.MeterStatusID, dbo.TblMeterStatus.MeterStatusName, dbo.TblConsumer.ConsumerResidensePhoneNo, 
                         dbo.TblMeter.MeterNo + ' | ' + dbo.TblConsumer.ConsumerName AS MeterNoWithConsumerName, dbo.TblBranch.BranchID, dbo.TblBranch.BranchCode, dbo.TblBranch.BranchName, dbo.tblEmployee.EmployeeID, 
                         dbo.tblEmployee.EmployeeCode, dbo.tblEmployee.EmployeeName, dbo.tblEmployee.EmailAddress, dbo.tblEmployee.MobileNo, dbo.tblEmployee.PhoneNo, dbo.tblEmployee.Address, dbo.tblEmployee.NIC, 
                         dbo.TblBrickType.BrickTypeName, dbo.TblBrickType.BrickTypeID, dbo.TblBrickType.BrickTypeLevel, dbo.TblBrick.BrickName, dbo.TblBrick.BrickID, dbo.TblFeeder.FeederCode, dbo.TblFeederStatus.FeederStatusID, 
                         dbo.TblFeederStatus.FeederStatusName, dbo.TblTariff.TariffID, dbo.TblTariff.TariffName, dbo.TblTariff.TariffCode, dbo.TblMeter.PMTID, dbo.TblMeter.CreatedOn, dbo.TblMeter.ModifiedOn, 
                         dbo.TblConsumer.ConsumerFather_HusbandName
FROM            dbo.TblMeter INNER JOIN
                         dbo.TblConsumer ON dbo.TblMeter.ConsumerID = dbo.TblConsumer.CunsumerID INNER JOIN
                         dbo.TblFeeder ON dbo.TblMeter.FeaderID = dbo.TblFeeder.FeederID INNER JOIN
                         dbo.TblMeterType ON dbo.TblMeter.MeterTypeID = dbo.TblMeterType.MeterTypeID INNER JOIN
                         dbo.TblMeterStatus ON dbo.TblMeter.MeterStatusID = dbo.TblMeterStatus.MeterStatusID INNER JOIN
                         dbo.TblBrick ON dbo.TblFeeder.BrickID = dbo.TblBrick.BrickID INNER JOIN
                         dbo.TblBrickType ON dbo.TblFeeder.BrickTypeID = dbo.TblBrickType.BrickTypeID AND dbo.TblBrick.BrickTypeID = dbo.TblBrickType.BrickTypeID INNER JOIN
                         dbo.TblFeederStatus ON dbo.TblFeeder.FeederStatusID = dbo.TblFeederStatus.FeederStatusID LEFT OUTER JOIN
                         dbo.TblTariff ON dbo.TblMeter.TarrifID = dbo.TblTariff.TariffID LEFT OUTER JOIN
                         dbo.tblEmployee ON dbo.TblMeter.MeterCreatedBy = dbo.tblEmployee.EmployeeID LEFT OUTER JOIN
                         dbo.TblBranch ON dbo.TblMeter.BranchID = dbo.TblBranch.BranchID

GO

update usermenu set isactive = 0 where pageurl = 'PrintPaymentSummary.aspx'


INSERT INTO [dbo].[Privillage]
           ([PrivillageName]
           ,[PrivillageDescription]
           ,[AccessLevel]
           ,[IsActive])
     VALUES
           ('PrintPaymentSummary','PrintPaymentSummary',0,1)
GO
declare @PrivillageIdid int ,@TopMenuID int

set @PrivillageIdid = (select top 1 PrivillageId from Privillage order by PrivillageId desc)
set @TopMenuID = 1017

print @PrivillageIdid
INSERT INTO [dbo].[UserMenu]
           ([MenuTitle]
           ,[PageUrl]
           ,[PrivillageId]
           ,[IsTopMenu]
           ,[TopMenuTitle]
           ,[TopMenuDisplayOrder]
           ,[SubMenuDisplayOrder]
           ,[TopMenuId]
           ,[IsActive]
           ,[ShortcutKey]
           ,[ModuleID])
     VALUES
          ('Receive Payment Report'
           ,'PrintPaymentSummary.aspx'
           , @PrivillageIdid
           ,0
           ,'Receive Payment Report'
           ,100000
           ,11
           ,@TopMenuID
           ,1
           ,NULL
           ,7)
GO

INSERT INTO [dbo].[Privillage]
           ([PrivillageName]
           ,[PrivillageDescription]
           ,[AccessLevel]
           ,[IsActive])
     VALUES
           ('ExpenseReport','ExpenseReport',0,1)
GO
declare @PrivillageIdid int ,@TopMenuID int

set @PrivillageIdid = (select top 1 PrivillageId from Privillage order by PrivillageId desc)
set @TopMenuID = 1017

print @PrivillageIdid
INSERT INTO [dbo].[UserMenu]
           ([MenuTitle]
           ,[PageUrl]
           ,[PrivillageId]
           ,[IsTopMenu]
           ,[TopMenuTitle]
           ,[TopMenuDisplayOrder]
           ,[SubMenuDisplayOrder]
           ,[TopMenuId]
           ,[IsActive]
           ,[ShortcutKey]
           ,[ModuleID])
     VALUES
          ('Expense Report'
           ,'ExpenseReport.aspx'
           , @PrivillageIdid
           ,0
           ,'Expense Report'
           ,100000
           ,11
           ,@TopMenuID
           ,1
           ,NULL
           ,7)
GO

-----------------------------23/06/2021---------------
update UserMenu set IsActive = 0 where PageUrl = 'ChequePaymentSummaryReport.aspx'
update UserMenu set IsActive = 0 where PageUrl = 'TarrifReport.aspx'
-----------------------------18/06/2021---------------
update usermenu set topmenutitle = 'Tariff' where topmenutitle = 'Tariff Charges' and pageurl = '#'


update usermenu set topmenuid = (select top 1 usermenuid from usermenu where topmenutitle = 'Tariff' and pageurl = '#') where  pageurl = 'TariffSlabList.aspx'

update usermenu set topmenuid = (select top 1 usermenuid from usermenu where topmenutitle = 'Tariff' and pageurl = '#') where  pageurl = 'TariffTypeList.aspx'
-----------------------------14/06/2021---------------
ALTER TABLE dbo.tblQueue ADD
	UserLoginID int NULL,
	MeterReadingUserID int NULL,
	BatchID int NULL
GO

ALTER TABLE dbo.tblQueue ADD CONSTRAINT
	FK_tblQueue_UserLogin FOREIGN KEY
	(
	UserLoginID
	) REFERENCES dbo.UserLogin
	(
	UserLoginId
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 
	
GO
ALTER TABLE dbo.tblQueue ADD CONSTRAINT
	FK_tblQueue_TblMeterReadingUser FOREIGN KEY
	(
	MeterReadingUserID
	) REFERENCES dbo.TblMeterReadingUser
	(
	MeterReadingUserID
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 
	
GO
ALTER TABLE dbo.tblQueue ADD CONSTRAINT
	FK_tblQueue_tblBatch FOREIGN KEY
	(
	BatchID
	) REFERENCES dbo.tblBatch
	(
	BatchID
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 
	
GO

-----------------------------07/06/2021---------------

update usermenu set isactive = 1 where pageurl='EmployeeList.aspx'
UPDATE usermenu set pageurl = 'RequiredDocumentsList.aspx' where pageurl = 'RequiredDocumentsList'

update usermenu set topmenuid = NULL where usermenuid in (5080,5082,5083)
update usermenu set isactive = 0 where usermenuid = 4

INSERT INTO [dbo].[Privillage]
           ([PrivillageName]
           ,[PrivillageDescription]
           ,[AccessLevel]
           ,[IsActive])
     VALUES
           ('MeterCategoryList','MeterCategoryList',0,1)
GO
declare @PrivillageIdid int ,@TopMenuID int

set @PrivillageIdid = (select top 1 PrivillageId from Privillage order by PrivillageId desc)
set @TopMenuID = (select top 1 UserMenuId from UserMenu where MenuTitle = 'Tariff Charges')

print @PrivillageIdid
INSERT INTO [dbo].[UserMenu]
           ([MenuTitle]
           ,[PageUrl]
           ,[PrivillageId]
           ,[IsTopMenu]
           ,[TopMenuTitle]
           ,[TopMenuDisplayOrder]
           ,[SubMenuDisplayOrder]
           ,[TopMenuId]
           ,[IsActive]
           ,[ShortcutKey]
           ,[ModuleID])
     VALUES
          ('Tariff Category'
           ,'MeterCategoryList.aspx'
           , @PrivillageIdid
           ,0
           ,'Tariff Category'
           ,100000
           ,11
           ,@TopMenuID
           ,1
           ,NULL
           ,2)
GO
-----------------------------05/06/2021---------------
-------------------KINDLY EXECUTE ALL THE SCRIPT IN SEQUENCE------------------------------------


update usermenu set isactive = 1 where pageurl = 'ConsumerList.aspx'

UPDATE usermenu set pageurl = 'RequiredDocumentsList.aspx' where pageurl = 'RequiredDocuments.aspx'

update usermenu set isactive = 0 where topmenutitle = 'approval'

update usermenu set isactive = 0 where topmenutitle = 'General Information'

update usermenu set isactive = 0 where topmenutitle = 'edit'

update usermenu set topmenuid =4036  where pageurl = 'UploadMeterReading.aspx'

update usermenu set isactive = 0 where menutitle = 'Meter Reading Adjustment'

update usermenu set isactive = 1 where pageurl = 'MeterReadingAdjustmentList.aspx'

update usermenu set topmenuid =4036  where pageurl = 'MeterReadingAdjustmentList.aspx'

update usermenu set topmenuid =4041  where pageurl = 'SearchMeterReplace.aspx'

update usermenu set menutitle = 'Meter Replacement List' where usermenuid = 29

update usermenu set menutitle = 'Meter Replacement' where usermenuid = 30

update usermenu set submenudisplayorder  =7 where usermenuid = 30

update usermenu set menutitle = 'Meter Disconnection' where usermenuid = 40

update usermenu set menutitle = 'Meter Disconnection List' where usermenuid = 41


update usermenu set menutitle = 'Meter' where usermenuid = 4039

update usermenu set topmenutitle = 'Meter' where usermenuid = 4039

update usermenu set topmenudisplayorder =1  where topmenutitle = 'Meter'

update usermenu set topmenuid =4039  where pageurl = 'MeterIssueList.aspx'

update usermenu set submenudisplayorder  =7  where pageurl = 'MeterIssueList.aspx'


-----------------------------04/06/2021---------------


update tblnewconnection set MeterTypeID =1007

update tblmeter set MeterTypeID =1007


delete from tblmetertype where metertypeid >  1007

update usermenu set menutitle = 'T/Substation'  where menutitle = 'PMT'

update usermenu set topmenutitle = 'T/Substation'  where topmenutitle = 'PMT'

update usermenu set menutitle = 'T/Substation Reading List'  where pageurl = 'PMTReadingList.aspx'
update tblmodule set modulename = 'Transformers Substation' where ModuleID = 1001

update usermenu set menutitle = 'T/Substation List'  where pageurl = 'PMTList.aspx'

update usermenu set menutitle = 'T/Substation Reading List'  where pageurl = 'PMTReadingList.aspx'

update tblmodule set isactive = 0 where ModuleID = 3

ALTER TABLE dbo.TblTariffSlabs ADD
	FixedAmount decimal(18, 2) NULL
GO

INSERT INTO [dbo].[tblSystemConfig]
           ([SystemConfigName]
           ,[SystemConfigValue]
           ,[IsVisible])
     VALUES
           ('IsFixedBillAmount'
           ,'1'
           ,1)
GO

INSERT INTO [dbo].[tblSystemConfig]
           ([SystemConfigName]
           ,[SystemConfigValue]
           ,[IsVisible])
     VALUES
           ('FixedLateBillAmount'
           ,'50'
           ,1)
GO
-----------------------------03/06/2021---------------
ALTER TABLE tblException
ALTER COLUMN StackTrace varchar(max);
ALTER TABLE dbo.TblConsumer ADD
	BusinessName varchar(150) NULL
GO

INSERT INTO [dbo].[Privillage]
           ([PrivillageName]
           ,[PrivillageDescription]
           ,[AccessLevel]
           ,[IsActive])
     VALUES
           ('TariffCharges','TariffCharges',0,1)
GO
declare @id int 

set @id = (select top 1 PrivillageId from Privillage order by PrivillageId desc)


insert into UserMenu values('Tariff Charges', '#',  @id, 1,'Tariff Charges', 14, NULL, 1017, 1, NULL, 2)

----------------------------------------------------------------------------------------------------------------

INSERT INTO [dbo].[Privillage]
           ([PrivillageName]
           ,[PrivillageDescription]
           ,[AccessLevel]
           ,[IsActive])
     VALUES
           ('TariffCharges','TariffCharges',0,1)
GO
declare @PrivillageIdid int ,@TopMenuID int

set @PrivillageIdid = (select top 1 PrivillageId from Privillage order by PrivillageId desc)
set @TopMenuID = (select top 1 UserMenuId from UserMenu where MenuTitle = 'Tariff Charges')

print @PrivillageIdid
INSERT INTO [dbo].[UserMenu]
           ([MenuTitle]
           ,[PageUrl]
           ,[PrivillageId]
           ,[IsTopMenu]
           ,[TopMenuTitle]
           ,[TopMenuDisplayOrder]
           ,[SubMenuDisplayOrder]
           ,[TopMenuId]
           ,[IsActive]
           ,[ShortcutKey]
           ,[ModuleID])
     VALUES
          ('Tariff Charges'
           ,'TariffChargeList.aspx'
           , @PrivillageIdid
           ,0
           ,'Tariff Charges'
           ,100000
           ,11
           ,@TopMenuID
           ,1
           ,NULL
           ,2)
GO
-----------------------------02/06/2021---------------

INSERT INTO [dbo].[tblSystemConfig]
           ([SystemConfigName]
           ,[SystemConfigValue]
           ,[IsVisible])
     VALUES
           ('APPSyncingDelay'
           ,'2'
           ,1)
GO

INSERT INTO [dbo].[tblPreferenceApproval]
           ([PreferenceName]
           ,[IsApproved]
           ,[UserMenuID])
     VALUES
           ('Approve Meter Reading'
           ,1
           ,NULL)
GO

ALTER TABLE dbo.TblInstallement ADD
	InstallmentDate datetime NULL,
	CreatedOn datetime NULL,
	ModifiedOn datetime NULL
GO

INSERT INTO [dbo].[tblSystemConfig]
           ([SystemConfigName]
           ,[SystemConfigValue]
           ,[IsVisible])
     VALUES
           ('ConsumerNoAutoGenerate'
           ,'1'
           ,1)
GO

INSERT INTO [dbo].[tblSystemConfig]
           ([SystemConfigName]
           ,[SystemConfigValue]
           ,[IsVisible])
     VALUES
           ('BackupPath'
           ,''
           ,1)
GO

INSERT INTO [dbo].[tblSystemConfig]
           ([SystemConfigName]
           ,[SystemConfigValue]
           ,[IsVisible])
     VALUES
           ('NoOfInstallmentsPerCalendarYear'
           ,'1'
           ,1)
GO

INSERT INTO [dbo].[tblSystemConfig]
           ([SystemConfigName]
           ,[SystemConfigValue]
           ,[IsVisible])
     VALUES
           ('PrintInstallmentUpfrontAmount'
           ,'1'
           ,1)
GO

-----------------------------01/06/2021---------------


INSERT INTO [dbo].[Privillage]
           ([PrivillageName]
           ,[PrivillageDescription]
           ,[AccessLevel]
           ,[IsActive])
     VALUES
           ('RequiredDocuments','RequiredDocuments',0,1)
GO
declare @id int 

set @id = (select top 1 PrivillageId from Privillage order by PrivillageId desc)


insert into UserMenu values('Documents Configuration', '#',  @id, 1,'Documents Configuration', 14, NULL, 1017, 1, NULL, 2)

----------------------------------------------------------------------------------------------------------------

INSERT INTO [dbo].[Privillage]
           ([PrivillageName]
           ,[PrivillageDescription]
           ,[AccessLevel]
           ,[IsActive])
     VALUES
           ('RequiredDocuments','RequiredDocuments',0,1)
GO
declare @PrivillageIdid int ,@TopMenuID int

set @PrivillageIdid = (select top 1 PrivillageId from Privillage order by PrivillageId desc)
set @TopMenuID = (select top 1 UserMenuId from UserMenu where MenuTitle = 'Documents Configuration')

print @PrivillageIdid
INSERT INTO [dbo].[UserMenu]
           ([MenuTitle]
           ,[PageUrl]
           ,[PrivillageId]
           ,[IsTopMenu]
           ,[TopMenuTitle]
           ,[TopMenuDisplayOrder]
           ,[SubMenuDisplayOrder]
           ,[TopMenuId]
           ,[IsActive]
           ,[ShortcutKey]
           ,[ModuleID])
     VALUES
          ('Documents Configuration'
           ,'RequiredDocuments.aspx'
           , @PrivillageIdid
           ,0
           ,'Documents Configuration'
           ,100000
           ,11
           ,@TopMenuID
           ,1
           ,NULL
           ,2)
GO
----------------------------------------------------------------------------

update usermenu set isactive = 0  where menutitle = 'Approval Prefrence'
update usermenu set isactive = 1  where pageurl = 'UserRoleList.aspx'


update usermenu set isactive = 1  where pageurl = 'UserLoginList.aspx'


update usermenu set isactive = 1  where pageurl = 'AssignUserPrivillages.aspx'
update usermenu set isactive = 0  where pageurl = 'AddCLoad.aspx'

update usermenu set isactive = 1  where pageurl = 'CollectionPointList.aspx'
update usermenu set isactive = 0 where pageurl = 'PrefrenceApproval.aspx'
update usermenu set isactive = 1  where pageurl = 'SystemConfiguration.aspx'
update usermenu set isactive = 1  where pageurl = 'SearchMeterReplace.aspx'
delete from TblMeterReadingMode where meterreadmodeid >  2
update usermenu set isactive = 1  where pageurl = 'UploadMeterReading.aspx'
ALTER TABLE tblSystemParams
ALTER COLUMN SysParamValue varchar(500);

ALTER TABLE tblSystemConfig
ALTER COLUMN SystemConfigValue varchar(500);

EXECUTE sp_rename N'dbo.tblException.ExceptionType', N'Tmp_StackTrace', 'COLUMN' 
GO
EXECUTE sp_rename N'dbo.tblException.Tmp_StackTrace', N'StackTrace', 'COLUMN' 
GO


ALTER TABLE tblException
ALTER COLUMN StackTrace varchar(500);

CREATE TABLE dbo.tblMeterDocument
	(
	MeterDocumentID int NOT NULL IDENTITY (1, 1),
	MeterTypeID int NULL,
	DocumentID int NULL
	)  ON [PRIMARY]
GO
ALTER TABLE dbo.tblMeterDocument ADD CONSTRAINT
	PK_tblMeterDocument PRIMARY KEY CLUSTERED 
	(
	MeterDocumentID
	) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

GO

ALTER TABLE dbo.tblMeterDocument ADD CONSTRAINT
	FK_tblMeterDocument_TblMeterType FOREIGN KEY
	(
	MeterTypeID
	) REFERENCES dbo.TblMeterType
	(
	MeterTypeID
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 
	
GO
ALTER TABLE dbo.tblMeterDocument ADD CONSTRAINT
	FK_tblMeterDocument_TblDocumentRequired FOREIGN KEY
	(
	DocumentID
	) REFERENCES dbo.TblDocumentRequired
	(
	DocumentRequiredID
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 
	
GO


update usermenu set isactive = 1  where pageurl = 'SearchMeterReplace.aspx'

update usermenu set isactive = 0 where pageurl = 'ApproveNewConnection.aspx'

update usermenu set MenuTitle = 'New Connection'  where pageurl = 'SearchNewConnection.aspx'

update usermenu set MenuTitle = 'View All Connection'  where pageurl = 'NewConnectionList.aspx'

update usermenu set MenuTitle = 'Add Meter'  where pageurl = 'ConnectionMeterIssue.aspx'
delete from TblTypesOfService where serviceid not in (8,10,13)

delete from TblTypeOfConnection where typeofconid not in (7,8)


update tblmetertype set MeterTypeName = 'Residential' where metertypeid = 1

update tblmetertype set MeterTypeName = 'Public' where metertypeid = 1006

update tblmetertype set MeterTypeName = 'Productive' where metertypeid = 1007

delete from TblTariffSlabs

delete from tblmetertype where metertypeid >  1007

update usermenu set MenuTitle = 'Meter List'  where pageurl = 'MeterIssueList.aspx'


update usermenu set isactive = 0 where pageurl = 'MeterInventoryList.aspx'


update usermenu set isactive = 0 where pageurl = 'ApproveMeterIssueRequests.aspx'
-----------------------------30/05/2021---------------

INSERT INTO [dbo].[tblSystemParams]
           ([SysParamName]
           ,[SysParamValue]
           ,[IsVisible])
     VALUES
           ('ConsumerNo'
           ,'CN-#'
           ,1)
GO


INSERT INTO [dbo].[Privillage]
           ([PrivillageName]
           ,[PrivillageDescription]
           ,[AccessLevel]
           ,[IsActive])
     VALUES
           ('Backup Mechanism','Backup Mechanism',0,1)
GO
declare @id int 

set @id = (select top 1 PrivillageId from Privillage order by PrivillageId desc)


insert into UserMenu values('Backup Mechanism', '#',  @id, 1,'Backup Mechanism', 14, NULL, 1017, 1, NULL, 2)

----------------------------------------------------------------------------------------------------------------

INSERT INTO [dbo].[Privillage]
           ([PrivillageName]
           ,[PrivillageDescription]
           ,[AccessLevel]
           ,[IsActive])
     VALUES
           ('BackupManager','BackupManager',0,1)
GO
declare @PrivillageIdid int ,@TopMenuID int

set @PrivillageIdid = (select top 1 PrivillageId from Privillage order by PrivillageId desc)
set @TopMenuID = (select top 1 UserMenuId from UserMenu where MenuTitle = 'Backup Mechanism')

print @PrivillageIdid
INSERT INTO [dbo].[UserMenu]
           ([MenuTitle]
           ,[PageUrl]
           ,[PrivillageId]
           ,[IsTopMenu]
           ,[TopMenuTitle]
           ,[TopMenuDisplayOrder]
           ,[SubMenuDisplayOrder]
           ,[TopMenuId]
           ,[IsActive]
           ,[ShortcutKey]
           ,[ModuleID])
     VALUES
          ('Backup Manager'
           ,'BackupManager.aspx'
           , @PrivillageIdid
           ,0
           ,'Backup Manager'
           ,100000
           ,11
           ,@TopMenuID
           ,1
           ,NULL
           ,2)
GO

-----------------------------25/05/2021---------------
CREATE TABLE dbo.tblPreferenceApproval
	(
	PreferenceApprovlID int NOT NULL IDENTITY (1, 1),
	PreferenceName varchar(50) NULL,
	IsApproved bit NULL,
	UserMenuID int NULL
	)  ON [PRIMARY]
GO
ALTER TABLE dbo.tblPreferenceApproval ADD CONSTRAINT
	PK_tblPreferenceApproval PRIMARY KEY CLUSTERED 
	(
	PreferenceApprovlID
	) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

GO


INSERT INTO [dbo].[tblPreferenceApproval]
           ([PreferenceName]
           ,[IsApproved]
           ,[UserMenuID])
     VALUES
           ('ApproveConnection'
           ,1
           ,1004)
GO



INSERT INTO [dbo].[tblPreferenceApproval]
           ([PreferenceName]
           ,[IsApproved]
           ,[UserMenuID])
     VALUES
           ('ApproveMeterIssueRequest'
           ,1
           ,27)
GO

USE [SmartCBS_db]
GO

INSERT INTO [dbo].[tblSystemParams]
           ([SysParamName]
           ,[SysParamValue]
           ,[IsVisible])
     VALUES
           ('AutoGenerateMeterInventory'
           ,1
           ,1)
GO

-----------------------------24/05/2021---------------
new db license
CREATE TABLE dbo.tblLicenseKey
	(
	LicenseKeyID int NOT NULL IDENTITY (1, 1),
	LicenseCode varchar(500) NOT NULL,
	ActivationDate datetime NULL,
	ExpiryDate datetime NULL,
	IsActivated bit NULL,
	CreatedOn datetime NULL,
	ModifiedOn datetime NULL
	)  ON [PRIMARY]
GO
ALTER TABLE dbo.tblLicenseKey ADD CONSTRAINT
	PK_tblLicenseKey PRIMARY KEY CLUSTERED 
	(
	LicenseKeyID
	) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

GO
new db license
-----------------------------22/05/2021---------------
CREATE TABLE tblExpenseType
	(
	[ExpenseTypeID] int primary key IDENTITY (1, 1),
	[ExpenseTypeName] varchar(200),
	[Description] varchar(max),
	[IsActive] bit,
	[CreatedOn] datetime,
	[ModifiedOn] datetime
	)


CREATE TABLE tblExpense
	(
	[ExpenseID] int primary key IDENTITY (1, 1),
	[ExpenseTypeID] int foreign key references TblExpenseType(ExpenseTypeID),
	[Amount] decimal(18,2),
	[Description] varchar(max), 
	[ExpenseDate] datetime,
	[UserLoginID] int foreign key references UserLogin(UserLoginID),
	[IsActive] bit,
	[CreatedOn] datetime,
	[ModifiedOn] datetime
	)
-----------------------------21/05/2021----------------------------------------------------
CREATE TABLE dbo.tblQueryLog
	(
	QueryLogID int NOT NULL IDENTITY (1, 1),
	Query varchar(500) NULL,
	IsExecuted bit NULL,
	Exception varchar(MAX) NULL,
	QueryCreatedBy int NULL,
	CreatedOn datetime NULL,
	ModifiedOn datetime NULL
	)  ON [PRIMARY]
	 TEXTIMAGE_ON [PRIMARY]
GO
ALTER TABLE dbo.tblQueryLog ADD CONSTRAINT
	PK_tblQueryLog PRIMARY KEY CLUSTERED 
	(
	QueryLogID
	) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

GO
-----------------------------20/05/2021----------------------------------------------------
CREATE TABLE dbo.tblDBBackup
	(
	DBBackupID int NOT NULL IDENTITY (1, 1),
	BackupName varchar(100) NULL,
	DBCreatedBy int NULL,
	CreatedOn datetime NULL,
	ModifiedOn datetime NULL
	)  ON [PRIMARY]
GO
ALTER TABLE dbo.tblDBBackup ADD CONSTRAINT
	PK_tblDBBackup PRIMARY KEY CLUSTERED 
	(
	DBBackupID
	) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

GO
------------------------------------------------------------------------------------------